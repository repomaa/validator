crystal_doc_search_index_callback({"repository_name":"athena-validator","body":"# Validator\n\n[![CI](https://github.com/athena-framework/validator/workflows/CI/badge.svg)](https://github.com/athena-framework/validator/actions?query=workflow%3ACI)\n[![Latest release](https://img.shields.io/github/release/athena-framework/validator.svg)](https://github.com/athena-framework/validator/releases)\n\nObject/value validation library\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  athena-validator:\n    github: athena-framework/validator\n    version: ~> 0.1.0\n```\n\n2. Run `shards install`\n\n## Documentation\n\nEverything is documented in the [API Docs](https://athena-framework.github.io/validator/Athena/Validator.html).\n\n## Contributing\n\n1. Fork it (https://github.com/athena-framework/validator/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [George Dietrich](https://github.com/blacksmoke16) - creator and maintainer\n","program":{"html_id":"athena-validator/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena-validator","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/ASPEC","path":"ASPEC.html","kind":"alias","full_name":"ASPEC","name":"ASPEC","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/athena-spec.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/athena-spec.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":true,"aliased":"Athena::Spec","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Spec` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Spec.html\">Athena::Spec</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Assert","path":"Assert.html","kind":"alias","full_name":"Assert","name":"Assert","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":31,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L31"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":true,"aliased":"Athena::Validator::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Used to apply constraints to instance variables and types via annotations.\n\n```\n@[Assert::NotBlank]\nproperty name : String\n```\nNOTE: Constraints, including custom ones, are automatically added to this namespace.","summary":"<p>Used to apply constraints to instance variables and types via annotations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena","path":"Athena.html","kind":"module","full_name":"Athena","name":"Athena","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Spec","path":"Athena/Spec.html","kind":"module","full_name":"Athena::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/athena-spec.cr","line_number":8,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/athena-spec.cr#L8"},{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"A set of common [Spec](https://crystal-lang.org/api/Spec.html) compliant testing utilities/types.","summary":"<p>A set of common <a href=\"https://crystal-lang.org/api/Spec.html\" target=\"_blank\">Spec</a> compliant testing utilities/types.</p>","class_methods":[{"id":"run_all:Nil-class-method","html_id":"run_all:Nil-class-method","name":"run_all","doc":"Runs all `ASPEC::TestCase`s.\n\nIs equivalent to manually calling `.run` on each test case.","summary":"<p>Runs all <code><a href=\"../Athena/Spec/TestCase.html\">ASPEC::TestCase</a></code>s.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/athena-spec.cr#L12","def":{"name":"run_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"{% for unit_test in ASPEC::TestCase.all_subclasses.reject(&.abstract?) %}\n      {{ unit_test.id }}.run\n    {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Spec/Methods","path":"Athena/Spec/Methods.html","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"athena-validator/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"}],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"}],"namespace":{"html_id":"athena-validator/Athena/Spec","kind":"module","full_name":"Athena::Spec","name":"Spec"},"doc":"Namespace for common/helpful testing methods.\n\nThis module can be included into your `spec_helper` in order\nto allow your specs to use them all.  This module is also\nincluded into `ASPEC::TestCase` by default to allow using them\nwithin your unit tests as well.\n\nMay be reopened to add additional application specific helpers.","summary":"<p>Namespace for common/helpful testing methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"assert_error(file_path:String,message:String,*,prefix:String=&quot;spec/&quot;):Nil-instance-method","html_id":"assert_error(file_path:String,message:String,*,prefix:String=&quot;spec/&quot;):Nil-instance-method","name":"assert_error","doc":"Runs the Crystal program at the provided *file_path* and asserts it errors with the provided *message*.\nThe main purpose of this method is to test compile time errors.\n\nBy default, *file_path* is assumed to be within `spec/`, but can be customized via the *prefix* named argument.\n\nNOTE:\n\n```\n# ./spec/abstract_class.cr\nabstract class Foo; end\n\nFoo.new\n```\n\n```\n# ./spec/abstract_class_spec.cr\nrequire \"athena-spec\"\n\nASPEC::Methods.assert_error \"abstract_class.cr\", \"can't instantiate abstract class Foo\"\n```","summary":"<p>Runs the Crystal program at the provided <em>file_path</em> and asserts it errors with the provided <em>message</em>.</p>","abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"prefix","doc":null,"default_value":"\"spec/\"","external_name":"prefix","restriction":"String"}],"args_string":"(file_path : String, message : String, *, prefix : String = <span class=\"s\">&quot;spec/&quot;</span>) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L32","def":{"name":"assert_error","args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"prefix","doc":null,"default_value":"\"spec/\"","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"buffer = IO::Memory.new\nresult = Process.run(\"crystal\", [\"run\", \"--no-color\", \"--no-codegen\", \"#{prefix}#{file_path}\"], error: buffer)\nif result.success?\n  fail(buffer.to_s)\nend\nbuffer.to_s.should(contain(message))\nbuffer.close\n"}},{"id":"run_executable(path:String,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","html_id":"run_executable(path:String,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","name":"run_executable","doc":"Runs the executable at the given *path*, optionally with the provided *args*.\n\nThe standard output, error output, and status of the execution are yielded.\n\n```\nrequire \"athena-spec\"\n\nASPEC::Methods.run_executable \"/usr/bin/ls\" do |output, error, status|\n  output # => \"docs\\n\" + \"LICENSE\\n\" + \"README.md\\n\" + \"shard.yml\\n\" + \"spec\\n\" + \"src\\n\"\n  error  # => \"\"\n  status # => #<Process::Status:0x7f7bc9befb70 @exit_status=0>\nend\n```","summary":"<p>Runs the executable at the given <em>path</em>, optionally with the provided <em>args</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"args_string":"(path : String, args : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, & : String, String, Process::Status -> ) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L53","def":{"name":"run_executable","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(String, String, Process::Status -> )"},"return_type":"Nil","visibility":"Public","body":"run_executable(path, IO::Memory.new, args) do |output_io, error_io, status|\n  yield output_io, error_io, status\nend"}},{"id":"run_executable(path:String,input:IO,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","html_id":"run_executable(path:String,input:IO,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","name":"run_executable","doc":"Runs the executable at the given *path*, with the given *input*, optionally with the provided *args*.\n\nThe standard output, error output, and status of the execution are yielded.\n\n```\nrequire \"athena-spec\"\n\ninput = IO::Memory.new %({\"id\":1})\n\nASPEC::Methods.run_executable \"jq\", input, [\".\", \"-c\"] do |output, error, status|\n  output # => \"{\\\"id\\\":1}\\n\"\n  error  # => \"\"\n  status # => #<Process::Status:0x7f26ec698b70 @exit_status=0>\nend\n\ninvalid_input = IO::Memory.new %({\"id\"1})\n\nASPEC::Methods.run_executable \"jq\", invalid_input, [\".\", \"-c\"] do |output, error, status|\n  output # => \"\"\n  error  # => \"parse error: Expected separator between values at line 1, column 7\\n\"\n  status # => #<Process::Status:0x7f0217496900 @exit_status=1024>\nend\n```","summary":"<p>Runs the executable at the given <em>path</em>, with the given <em>input</em>, optionally with the provided <em>args</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"args_string":"(path : String, input : IO, args : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, & : String, String, Process::Status -> ) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/methods.cr#L82","def":{"name":"run_executable","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(String, String, Process::Status -> )"},"return_type":"Nil","visibility":"Public","body":"output_io = IO::Memory.new\nerror_io = IO::Memory.new\nstatus = Process.run(path, args, error: error_io, output: output_io, input: input)\nyield output_io.to_s, error_io.to_s, status\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Spec/TestCase","path":"Athena/Spec/TestCase.html","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase","abstract":true,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":147,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L147"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Spec","kind":"module","full_name":"Athena::Spec","name":"Spec"},"doc":"`ASPEC::TestCase` provides a [Spec](https://crystal-lang.org/api/Spec.html) compliant\nalternative DSL for creating unit and integration tests.  It allows structuring tests\nin a more OOP fashion, with the main benefits of reusability and extendability.\n\nThis type can be extended to share common testing logic with groups of similar types.\nAny tests defined within a parent will run for each child test case.\n`abstract def`, `super`, and other OOP features can be used as well to reduce duplication.\nSome additional features are also built in, such as the `DataProvider`.\n\nNOTE: This is _NOT_ a standalone testing framework.  Everything boils down to standard `describe`, `it`, and/or `pending` blocks.\n\nA test case consists of a `struct` inheriting from `self`, optionally with an `#initialize` method in order to\ninitialize the state that should be used for each test.\n\nA test is a method that starts with `test_`, where the method name is used as the description.\nFor example, `test_some_method_some_context` becomes `\"some method some context\"`.\nInternally each test method maps to an `it` block.\nAll of the stdlib's `Spec` assertions methods are available, in addition to\n[#pending!](https://crystal-lang.org/api/Spec/Methods.html#pending!%28msg=%22Cannotrunexample%22,file=__FILE__,line=__LINE__%29-instance-method) and\n[#fail](https://crystal-lang.org/api/Spec/Methods.html#fail%28msg,file=__FILE__,line=__LINE__%29-instance-method).\n\nA method may be focused by either prefixing the method name with an `f`, or applying the `Focus` annotation.\n\nA method may be marked pending by either prefixing the method name with a `p`, or applying the `Pending` annotation.\nInternally this maps to a `pending` block.\n\nTags may be applied to a method via the `Tags` annotation.\n\nThe `Tags`, `Focus`, and `Pending` annotations may also be applied to the test case type as well, with a similar affect.\n\n### Example\n\n```\n# Require the stdlib's spec module.\nrequire \"spec\"\n\n# Define a class to test.\nclass Calculator\n  def add(v1, v2)\n    v1 + v2\n  end\n\n  def subtract(v1, v2)\n    raise NotImplementedError.new \"TODO\"\n  end\nend\n\n# An example test case.\nstruct ExampleSpec < ASPEC::TestCase\n  @target : Calculator\n\n  # Initialize the test target along with any dependencies.\n  def initialize : Nil\n    @target = Calculator.new\n  end\n\n  # All of the stdlib's `Spec` methods can be used,\n  # plus any custom methods defined in `ASPEC::Methods`.\n  def test_add : Nil\n    @target.add(1, 2).should eq 3\n  end\n\n  # A pending test.\n  def ptest_substract : Nil\n    @target.subtract(10, 5).should eq 5\n  end\n\n  # Private/protected methods can be used to reduce duplication within the context of single test case.\n  private def helper_method\n    # ...\n  end\nend\n```\n\n## Inheritance\n\nInheritance can be used to build reusable test cases for groups of similar objects\n\n```\nabstract struct SomeTypeTestCase < ASPEC::TestCase\n  # Require children to define a method to get the object.\n  protected abstract def get_object : Calculator\n\n  # Test cases can use the abstract method for tests common to all test cases of this type.\n  def test_common : Nil\n    obj = self.get_object\n\n    # ...\n  end\nend\n\nstruct CalculatorTest < SomeTypeTestCase\n  protected def get_object : Calculator\n    Calculator.new\n  end\n\n  # Additional tests specific to this type.\n  def test_specific : Nil\n    # ...\n  end\nend\n```\n\n## Data Providers\n\nA `DataProvider` can be used to reduce duplication, see the corresponding annotation or more information.\n\n```\nstruct DataProviderTest < ASPEC::TestCase\n  # Data Providers allow reusing a test's multiple times with different input.\n  @[DataProvider(\"get_values\")]\n  def test_squares(value : Int32, expected : Int32) : Nil\n    (value ** 2).should eq expected\n  end\n\n  # Returns a hash where the key represents the name of the test,\n  # and the value is a Tuple of data that should be provided to the test.\n  def get_values : Hash\n    {\n      \"two\"   => {2, 4},\n      \"three\" => {3, 9},\n    }\n  end\nend\n```\n\n```\n# Run all the test cases\nASPEC.run_all # =>\n# ExampleSpec\n#   add\n#   subtract\n#   a custom method name\n# CalculatorTest\n#   common\n#   specific\n# DataProviderTest\n#   squares two\n#   squares three\n#\n# Pending:\n# ExampleSpec subtract\n#\n# Finished in 172 microseconds\n# 7 examples, 0 failures, 0 errors, 1 pending\n```","summary":"<p><code><a href=\"../../Athena/Spec/TestCase.html\">ASPEC::TestCase</a></code> provides a <a href=\"https://crystal-lang.org/api/Spec.html\" target=\"_blank\">Spec</a> compliant alternative DSL for creating unit and integration tests.</p>","class_methods":[{"id":"run:Nil-class-method","html_id":"run:Nil-class-method","name":"run","doc":"Runs the tests contained within `self`.\n\nSee `Athena::Spec.run_all` to run all test cases.","summary":"<p>Runs the tests contained within <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L253","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"instance = new\n{% if true %}\n      {{ !(!(@type.annotation(Pending))) ? \"pending\".id : \"describe\".id }} {{ @type.name.stringify }}, focus: {{ !(!(@type.annotation(Focus))) }}{% if (tags = @type.annotation(Tags)) %}, tags: {{ tags.args }}{% end %} do\n        before_all do\n          instance.before_all\n        end\n\n        before_each do\n          instance.initialize\n        end\n\n        after_each do\n          instance.tear_down\n        end\n\n        after_all do\n          instance.after_all\n        end\n\n        {% methods = [] of Nil %}\n\n        {% for parent in @type.ancestors.select(&.<(TestCase)) %}\n          {% for method in parent.methods.select do |m|\n  m.name =~ (/^(?:f|p)?test_/)\nend %}\n            {% methods << method %}\n          {% end %}\n        {% end %}\n\n        {% for test in methods + @type.methods.select do |m|\n  m.name =~ (/^(?:f|p)?test_/)\nend %}\n          {% focus = (test.name.starts_with?(\"ftest_\")) || (!(!(test.annotation(Focus)))) %}\n          {% tags = (tags = test.annotation(Tags)) ? tags.args : nil %}\n          {% method = ((test.name.starts_with?(\"ptest_\")) || (!(!(test.annotation(Pending))))) ? \"pending\" : \"it\" %}\n          {% description = (test.name.stringify.gsub(/^(?:f|p)?test_/, \"\")).underscore.gsub(/_/, \" \") %}\n\n          {% if (test.annotations(DataProvider)).empty? %}\n            {{ method.id }} {{ description }}, file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n              instance.{{ test.name.id }}\n            end\n          {% else %}\n            {% for data_provider in test.annotations(DataProvider) %}\n              {% data_provider_method_name = data_provider[0] || (data_provider.raise(\"One or more data provider for test '#{@type}##{test.name.id}' is mising its name.\")) %}\n              {% methods = @type.methods %}\n\n              {% for ancestor in @type.ancestors.select(&.<=(ASPEC::TestCase)) %}\n                {% methods += ancestor.methods %}\n              {% end %}\n\n              {% provider_method_return_type = (methods.find do |__arg2|\n  __arg2.name.stringify == data_provider_method_name\nend.return_type || (raise(\"Data provider '#{@type}##{data_provider_method_name.id}' must have a return type of Hash, NamedTuple, Array, or Tuple.\"))).resolve %}\n\n              {% if (provider_method_return_type == Hash) || (provider_method_return_type == NamedTuple) %}\n                instance.{{ data_provider_method_name.id }}.each do |name, args|\n                  {{ method.id }} \"#{{{ description }}} #{name}\", file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n                    instance.{{ test.name.id }} *args\n                  end\n                end\n              {% else %}{% if (provider_method_return_type == Array) || (provider_method_return_type == Tuple) %}\n                instance.{{ data_provider_method_name.id }}.each_with_index do |args, idx|\n                  {{ method.id }} \"#{{{ description }}} #{idx}\", file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n                    instance.{{ test.name.id }} *args\n                  end\n                end\n              {% else %}\n                {% provider_method.raise(\"Unsupported data provider return type: '#{provider_method.return_type}'\") %}\n              {% end %}{% end %}\n            {% end %}\n          {% end %}\n        {% end %}\n      end\n    {% end %}\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Runs before each test.\n\nUsed to create the objects that will be used within the tests.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASpec::TestCase\n  @value : Int32\n\n  def initialize : Nil\n    @value = 1\n  end\n\n  def test_one : Nil\n    @value += 1\n\n    @value # => 2\n  end\n\n  def test_two : Nil\n    @value # => 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs before each test.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L406","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after_all:Nil-instance-method","html_id":"after_all:Nil-instance-method","name":"after_all","doc":"Runs once after all tests within `self` have been executed.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  def after_all : Nil\n    puts \"This prints only once after anything else\"\n  end\n\n  def test_one : Nil\n    true.should be_true\n  end\n\n  def test_two : Nil\n    1.should eq 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs once after all tests within <code>self</code> have been executed.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L375","def":{"name":"after_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"before_all:Nil-instance-method","html_id":"before_all:Nil-instance-method","name":"before_all","doc":"Runs once before any tests within `self` have been executed.\n\nCan be used to initialize objects common to every test,\nbut that do not need to be reset before running each test.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  def before_all : Nil\n    puts \"This prints only once before anything else\"\n  end\n\n  def test_one : Nil\n    true.should be_true\n  end\n\n  def test_two : Nil\n    1.should eq 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs once before any tests within <code>self</code> have been executed.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L350","def":{"name":"before_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"tear_down:Nil-instance-method","html_id":"tear_down:Nil-instance-method","name":"tear_down","doc":"Runs after each test.\n\nCan be used to cleanup data in between tests, such as releasing a connection or closing a file.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  @file : File\n\n  def initialize : Nil\n    @file = File.new \"./foo.txt\", \"w\"\n  end\n\n  def tear_down : Nil\n    @file.close\n  end\n\n  def test_one : Nil\n    @file.path # => \"./foo.txt\"\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs after each test.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L435","def":{"name":"tear_down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Spec/TestCase/DataProvider","path":"Athena/Spec/TestCase/DataProvider.html","kind":"annotation","full_name":"Athena::Spec::TestCase::DataProvider","name":"DataProvider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":248,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L248"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Tests can be defined with arbitrary arguments.  These arguments are provided by one or more `DataProvider`.\n\nA data provider is a method that returns either a `Hash`, `NamedTuple`, `Array`, or `Tuple`.\n\nNOTE: The method's return type must be set to one of those types.\n\nIf the return type is a `Hash` or `NamedTuple` then it is a keyed provider;\nthe key will be used as part of the description for each test.\n\nIf the return type is an `Array` or `Tuple` it is considered a keyless provider;\nthe index will be used as part of the description for each test.\n\nNOTE: In both cases the value must be a `Tuple`; the values should be an ordered list of the arguments you want to provide to the test.\n\nOne or more `DataProvider` annotations can be applied to a test\nwith a positional argument of the name of the providing methods.\nAn `it` block will be defined for each \"set\" of data.\n\nData providers can be a very powerful tool when combined with inheritance and `abstract def`s.\nA parent test case could define all the testing logic, and child implementations only provide the data.\n\n### Example\n\n```\nrequire \"athena-spec\"\n\nstruct DataProviderTest < ASPEC::TestCase\n  @[DataProvider(\"get_values_hash\")]\n  @[DataProvider(\"get_values_named_tuple\")]\n  def test_squares(value : Int32, expected : Int32) : Nil\n    (value ** 2).should eq expected\n  end\n\n  # A keyed provider using a Hash.\n  def get_values_hash : Hash\n    {\n      \"two\"   => {2, 4},\n      \"three\" => {3, 9},\n    }\n  end\n\n  # A keyed provider using a NamedTuple.\n  def get_values_named_tuple : NamedTuple\n    {\n      four: {4, 16},\n      five: {5, 25},\n    }\n  end\n\n  @[DataProvider(\"get_values_array\")]\n  @[DataProvider(\"get_values_tuple\")]\n  def test_cubes(value : Int32, expected : Int32) : Nil\n    (value ** 3).should eq expected\n  end\n\n  # A keyless provider using an Array.\n  def get_values_array : Array\n    [\n      {2, 8},\n      {3, 27},\n    ]\n  end\n\n  # A keyless provider using a Tuple.\n  def get_values_tuple : Tuple\n    {\n      {4, 64},\n      {5, 125},\n    }\n  end\nend\n\nASPEC.run_all # =>\n# DataProviderTest\n#   squares two\n#   squares three\n#   squares four\n#   squares five\n#   cubes 0\n#   cubes 1\n#   cubes 0\n#   cubes 1\n```","summary":"<p>Tests can be defined with arbitrary arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Spec/TestCase/Focus","path":"Athena/Spec/TestCase/Focus.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Focus","name":"Focus","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":158,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L158"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Focuses a specific test case (describe block) or method (it block).\n\nMaps to [Focusing Specs](https://crystal-lang.org/reference/guides/testing.html#focusing-on-a-group-of-specs) in the stdlib.","summary":"<p>Focuses a specific test case (describe block) or method (it block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Spec/TestCase/Pending","path":"Athena/Spec/TestCase/Pending.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Pending","name":"Pending","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":163,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L163"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Marks a specific test case (describe block) or method (it block) as `pending`.\n\nMaps to the stdlib's [#pending](https://crystal-lang.org/api/master/Spec/Methods.html#pending%28description=%22assert%22,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable%28String%29%7CNil=nil,&%29-instance-method) method.","summary":"<p>Marks a specific test case (describe block) or method (it block) as <code>pending</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Spec/TestCase/Tags","path":"Athena/Spec/TestCase/Tags.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Tags","name":"Tags","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":153,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/lib/athena-spec/src/test_case.cr#L153"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Defines the tags tied to a specific test case (describe block) or method (it block).\n\nMaps to [Tagging Specs](https://crystal-lang.org/reference/guides/testing.html#tagging-specs) in the stdlib.","summary":"<p>Defines the tags tied to a specific test case (describe block) or method (it block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"athena-validator/Athena/Validator","path":"Athena/Validator.html","kind":"module","full_name":"Athena::Validator","name":"Validator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":385,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L385"},{"filename":"src/constraint.cr","line_number":255,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L255"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Validation component, `AVD` for short, adds an object/value validation framework to your project.\nThe framework consists of `AVD::Constraint`s that describe some assertion; such as a string should be `AVD::Constraints::NotBlank`\nor that a value is `AVD::Constraints::GreaterThanOrEqual` another value.\nConstraints, along with a value, are then passed to an `AVD::ConstraintValidatorInterface` that actually performs the validation, using the data defined in the constraint.\nIf the validator determines that the value is invalid in some way, it creates and adds an `AVD::Violation::ConstraintViolationInterface` to this runs' `AVD::ExecutionContextInterface`.\nThe `AVD::Validator::ValidatorInterface` then returns an `AVD::Violation::ConstraintViolationListInterface` that contains all the violations.  The value can be considered valid if that list is empty.\n\nNOTE: See each type individually for more detailed information.\n\n## Getting Started\n\n`Athena::Validator` comes with a set of common `AVD::Constraints` built in that any project could find useful.\nWhen used on its own, the `Athena::Validator.validator` method can be used to obtain an `AVD::Validator::ValidatorInterface` instance\nto validate a given value/object.\n\n### Basics\n\nA validator accepts a value, and one or more `AVD::Constraint` to validate the value against.\nThe validator then returns an `AVD::Violation::ConstraintViolationListInterface` that includes all the violations, if any.\n\n```\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Use the validator to validate a value.\nviolations = validator.validate \"foo\", AVD::Constraints::NotBlank.new\n\n# The validator returns an empty list of violations, indicating the value is valid.\nviolations.inspect # => Athena::Validator::Violation::ConstraintViolationList(@violations=[])\n```\n\nIn this case it returns an empty list of violations, meaning the value is valid.\n\n```\n# Using the validator instance from the previous example\nviolations = validator.validate \"\", AVD::Constraints::NotBlank.new\n\nviolations.inspect # =>\n# Athena::Validator::Violation::ConstraintViolationList(\n#   @violations=\n#     [Athena::Validator::Violation::ConstraintViolation(String)(\n#     @cause=nil,\n#     @code=\"0d0c3254-3642-4cb0-9882-46ee5918e6e3\",\n#     @constraint=\n#       #<Athena::Validator::Constraints::NotBlank:0x7f97da08ced0\n#       @allow_nil=false,\n#       @groups=[\"default\"],\n#       @message=\"This value should not be blank.\",\n#       @payload=nil>,\n#     @invalid_value_container=\n#       Athena::Validator::ValueContainer(String)(@value=\"\"),\n#     @message=\"This value should not be blank.\",\n#     @message_template=\"This value should not be blank.\",\n#     @parameters={\"{{ value }}\" => \"\"},\n#     @plural=nil,\n#     @property_path=\"\",\n#     @root=\"\")])\n\n# Both the ConstraintViolationList and ConstraintViolation implement a `#to_s` method.\nputs violations # =>\n# :\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nHowever in the case of the value _NOT_ being valid, the list includes all of the `AVD::Violation::ConstraintViolationInterface`s produced during this run.\nEach violation includes some metadata; such as the related constraint that failed, a machine readable code, a human readable message, any parameters\nthat should be used to render that message, etc.  The extra context allows for a lot of flexibility; both in terms of how the error could be rendered or handled.\n\nBy default, in addition to any constraint specific arguments, the majority of the constraints have three optional arguments: `message`, `groups`, and `payload`.\n\n* The `message` argument represents the message that should be used if the value is found to not be valid.\nThe message can also include placeholders, in the form of `{{ key }}`, that will be replaced when the message is rendered.\nMost commonly this includes the invalid value itself, but some constraints have additional placeholders.\n* The `payload` argument can be used to attach any domain specific data to the constraint; such as attaching a severity with each constraint\nto have more serious violations be handled differently.\n* The `groups` argument can be used to run a subset of the defined constraints.  More on this in the [Validation Groups](#validation-groups) section.\n\n```\nvalidator = AVD.validator\n\n# Instantiate a constraint with a custom message, using a placeholder.\nviolations = validator.validate -4, AVD::Constraints::PositiveOrZero.new message: \"{{ value }} is not a valid age.  A user cannot have a negative age.\"\n\nputs violations # =>\n# -4:\n#   -4 is not a valid age.  A user cannot have a negative age. (code: e09e52d0-b549-4ba1-8b4e-420aad76f0de)\n```\nCustomizing the message can be a good way for those consuming the errors to determine _WHY_ a given value is not valid.\n\n### Validating Objects\n\nValidating arbitrary values against a set of arbitrary constraints can be useful in smaller applications and/or for one off use cases.\nHowever to keep in line with our Object Oriented Programming (OOP) principles, we can also validate objects.  The object could be either a struct or a class.\nThe only requirements are that the object includes a specific module, `AVD::Validatable`, and specifies which properties should be validated and against what constraints.\nThe easiest/most common way to do this is via annotations and the `Assert` alias.\n\n```\n# Define a class that can be validated.\nclass User\n  include AVD::Validatable\n\n  def initialize(@name : String, @age : Int32? = nil); end\n\n  # Specify that we want to assert that the user's name is not blank.\n  # Multiple constraints can be defined on a single property.\n  @[Assert::NotBlank]\n  getter name : String\n\n  # Arguments to the constraint can be used normally as well.\n  # The constraint's default argument can also be supplied positionally: `@[Assert::GreaterThan(0)]`.\n  @[Assert::NotNil(message: \"A user's age cannot be null\")]\n  getter age : Int32?\nend\n\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Validate a user instance, notice we're not passing in any constraints.\nvalidator.validate(User.new(\"Jim\", 10)).empty? # => true\nvalidator.validate User.new \"\", 10             # =>\n# Object(User).name:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nNotice that in this case we do not need to supply the constraints to the `#validate` method.\nThis is because the validator is able to extract them from the annotations on the properties.\nAn array of constraints can still be supplied, and will take precedence over the constraints defined within the type.\n\nNOTE: By default if a property's value is another object, the sub object will not be validated.\nuse the `AVD::Constraints::Valid` constraint if you wish to also validate the sub object.\nThis also applies to arrays of objects.\n\nAnother important thing to point out is that no custom DSL is required to define these constraints.\n`Athena::Validator` is intended to be a generic validation solution that could be used outside of the [Athena](https://github.com/athena-framework) ecosystem.\nHowever, in order to be able to use the annotation based approach, you need to be able to apply the annotations to the underlying properties.\nIf this is not possible due to how a specific type is implemented, or if you just don't like the annotation syntax, the type can also be configured via code.\n\n```\n# Define a class that can be validated.\nclass User\n  include AVD::Validatable\n\n  # This class method is invoked when building the metadata associated with a type,\n  # and can be used to manually wire up the constraints.\n  def self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil\n    metadata.add_property_constraint \"name\", AVD::Constraints::NotBlank.new\n  end\n\n  def initialize(@name : String); end\n\n  getter name : String\nend\n\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Validate a user instance, notice we're not passing in any constraints.\nvalidator.validate(User.new(\"Jim\")).empty? # => true\nvalidator.validate User.new \"\"             # =>\n# Object(User).name:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nThe metadata for each type is lazily loaded when an instance of that type is validated, and is only built once.\nSee `AVD::Metadata::ClassMetadata` for some additional ways to register property constraints.\n\n#### Getters\n\nConstraints can also be applied to getter methods of an object.\nThis allows for dynamic validations based on the return value of the method.\nFor example, say we wanted to assert that a user's name is not the same as their password.\n\n```\nclass User\n  include AVD::Validatable\n\n  property name : String\n  property password : String\n\n  def initialize(@name : String, @password : String); end\n\n  @[Assert::IsTrue(message: \"Your password cannot be the same as your name.\")]\n  def is_safe_password? : Bool\n    @name != @password\n  end\nend\n\nvalidator = AVD.validator\n\nuser = User.new \"foo\", \"foo\"\n\nvalidator.validate(user).empty? # => false\n\nuser.password = \"bar\"\n\nvalidator.validate(user).empty? # => true\n```\n\n### Custom Constraints\n\nIf the built in `AVD::Constraints` are not sufficient to handle validating a given value/object; custom ones can be defined.\nLet's make a new constraint that asserts a string contains only alphanumeric characters.\n\nThis is accomplished by first defining a new class within the `AVD::Constraints` namespace that inherits from `AVD::Constraint`.\nThen define a `Validator` struct within our constraint that inherits from `AVD::ConstraintValidator` that actually implements the validation logic.\n\n```\nclass AVD::Constraints::AlphaNumeric < AVD::Constraint\n  # (Optional) A unique error code can also be defined to provide a machine readable identifier for a specific error.\n  NOT_ALPHANUMERIC_ERROR = \"1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09\"\n\n  # (Optional) Allows using the `.error_message(code : String) : String` method with this constraint.\n  @@error_names = {\n    NOT_ALPHANUMERIC_ERROR => \"NOT_ALPHANUMERIC_ERROR\",\n  }\n\n  # Define an initializer with our default message, and any additional arguments specific to this constraint.\n  def initialize(\n    message : String = \"This value should contain only alphanumeric characters.\",\n    groups : Array(String) | String | Nil = nil,\n    payload : Hash(String, String)? = nil\n  )\n    super message, groups, payload\n  end\n\n  # Define the validator within our constraint that'll contain our validation logic.\n  struct Validator < AVD::ConstraintValidator\n    # Define our validate method that accepts the value to be validated, and the constraint.\n    #\n    # Overloads can be used to filter values of specific types.\n    def validate(value : _, constraint : AVD::Constraints::AlphaNumeric) : Nil\n      # Custom constraints should ignore nil and empty values to allow\n      # other constraints (NotBlank, NotNil, etc.) take care of that\n      return if value.nil? || value == \"\"\n\n      # We'll cast the value to a string,\n      # alternatively we could just ignore non `String?` values.\n      value = value.to_s\n\n      # If all the characters of this string are alphanumeric, then it is valid\n      return if value.each_char.all? &.alphanumeric?\n\n      # Otherwise, it is invalid and we need to add a violation,\n      # see `AVD::ExecutionContextInterface` for additional information.\n      self.context.add_violation constraint.message, NOT_ALPHANUMERIC_ERROR, value\n    end\n  end\nend\n\nputs AVD.validator.validate \"$\", AVD::Constraints::AlphaNumeric.new # =>\n# $:\n#   This value should contain only alphanumeric characters. (code: 1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09)\n```\n\nNOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\n\nWe are now able to use this constraint as we would one of the built in ones;\neither by manually instantiating it, or applying an `@[Assert::AlphaNumeric]` annotation to a property.\n\nSee `AVD::ConstraintValidatorInterface` for more information on custom validators.\n\n### Validation Groups\n\nBy default when validating an object, all constraints defined on that type will be checked.\nHowever, in some cases you may only want to validate the object against _some_ of those constraints.\nThis can be accomplished via assigning each constraint to a validation group, then apply validation against one specific group of constraints.\n\nFor example, using our `User` class from earlier, say we only want to validate certain properties when the user is first created.\nTo do this we can utilize the `groups` argument that all constraints have.\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String, @city : String); end\n\n  @[Assert::Email(groups: \"create\")]\n  getter email : String\n\n  @[Assert::NotBlank(groups: \"create\")]\n  @[Assert::Size(7.., groups: \"create\")]\n  getter password : String\n\n  @[Assert::Size(2..)]\n  getter city : String\nend\n\nuser = User.new \"george@dietrich.app\", \"monkey123\", \"\"\n\n# Validate the user object, but only for those in the \"create\" group,\n# if no groups are supplied, then all constraints in the \"default\" group will be used.\nviolations = AVD.validator.validate user, groups: \"create\"\n\n# There are no violations since the city's size is not validated since it's not in the \"create\" group.\nviolations.empty? # => true\n```\n\nSee `AVD::Constraint@validation-groups` for some expanded information.\n\n### Sequential Validation\n\nBy default, all constraints are validated in a single \"batch\".  I.e. all constraints within the provided group(s) are validated, without regard\nto if the previous/next constraint is/was (in)valid.  However, an `AVD::Constraints::GroupSequence` can be used to validate batches of constraints in steps.\nI.e. validate the first \"batch\" of constraints, and only advance to the next batch if all constraints in that step are valid.\n\n```\n@[Assert::GroupSequence(\"User\", \"Secondary\")]\nclass User\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter username : String\n\n  @[Assert::NotBlank(groups: \"Secondary\")]\n  getter password : String\n\n  def initialize(@username : String, @password : String); end\nend\n\n# Instantiate a new `User` object where both properties are invalid.\nuser = User.new \"\", \"\"\n\n# Notice there is only one violation since there was a violation in the `User` group,\n# it did not advance to the `Secondary` group.\nAVD.validator.validate user # =>\n# Object(User).username:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\n#### Group Sequence Providers\n\nThe `AVD::Constraints::GroupSequence` can be a useful tool for creating efficient validations, but it is quite limiting since the sequence is static on the type.\nIf more flexibility is required the `AVD::Constraints::GroupSequence::Provider` module can be included into a type.\nThe module allows the object to return the sequence it should use dynamically at runtime.\n\n```\nclass User\n  include AVD::Validatable\n  include AVD::Constraints::GroupSequence::Provider\n\n  # ...\n\n  def group_sequence : Array(Array(String) | String) | AVD::Constraints::GroupSequence\n    # Build out and return the sequence `self` should use.\n  end\nend\n```\n\nAlternatively, if you only want to apply constraints sequentially on a single property,\nthe `AVD::Constraints::Sequentially` constraint can be used to do this in a simpler way.\n\nNOTE: See the related types for more detailed information.","summary":"<p>Athena's Validation component, <code><a href=\"../AVD.html\">AVD</a></code> for short, adds an object/value validation framework to your project.</p>","class_methods":[{"id":"validator:AVD::Validator::ValidatorInterface-class-method","html_id":"validator:AVD::Validator::ValidatorInterface-class-method","name":"validator","doc":"Returns a new `AVD::Validator::ValidatorInterface`.\n\n```\nvalidator = AVD.validator\n\nvalidator.validate \"foo\", AVD::Constraints::NotBlank.new\n```","summary":"<p>Returns a new <code><a href=\"../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L435","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveValidator.new"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraint","path":"Athena/Validator/Constraint.html","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint","abstract":true,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraint.cr","line_number":255,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L255"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_GROUP","name":"DEFAULT_GROUP","value":"\"default\"","doc":"The group that `self` is a part of if no other group(s) are explicitly defined.","summary":"<p>The group that <code>self</code> is a part of if no other group(s) are explicitly defined.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/Blank","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank"},{"html_id":"athena-validator/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},{"html_id":"athena-validator/Athena/Validator/Constraints/Choice","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice"},{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena-validator/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsFalse","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISIN","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsNil","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISSN","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsTrue","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/Luhn","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotBlank","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotNil","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil"},{"html_id":"athena-validator/Athena/Validator/Constraints/Range","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range"},{"html_id":"athena-validator/Athena/Validator/Constraints/Regex","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex"},{"html_id":"athena-validator/Athena/Validator/Constraints/Size","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size"},{"html_id":"athena-validator/Athena/Validator/Constraints/Unique","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique"},{"html_id":"athena-validator/Athena/Validator/Constraints/URL","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL"},{"html_id":"athena-validator/Athena/Validator/Constraints/Valid","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid"},{"html_id":"athena-validator/Athena/Validator/Spec/FailingConstraint","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"`Athena::Validator` validates values/objects against a set of constraints, i.e. rules.\nEach constraint makes an assertive statement that some condition is true.\nGiven a value, a constraint will tell you if that value adheres to the rules of the constraint.\nAn example of this could be asserting a value is not blank, or greater than or equal to another value.\n\nIt's important to note a constraint does not implement the validation logic itself.\nInstead, this is handled via an `AVD::ConstraintValidator` as defined via `#validated_by`.\nHaving this abstraction allows for better reusability and testability.\n\n`Athena::Validator` comes with a set of common constraints built in.\nSee the individual types within `AVD::Constraints` for more information.\n\n## Usage\n\nA constraint can be instantiated and passed to a validator directly:\n\n```\n# An array of constraints can also be passed.\nAVD.validator.validate \"\", AVD::Constraints::NotBlank.new\n```\n\nConstraint annotation(s) can also be applied to instance variables to assert the value of that property adheres to the constraint.\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@name : String); end\n\n  # More than one constraint can be applied to a property.\n  @[Assert::NotBlank]\n  property name : String\nend\n\n# Constraints are extracted from the annotations.\n# An array can also be passed to validate against that list instead.\nAVD.validator.validate Example.new(\"Jim\")\n```\n\nConstraints can also be added manually via code by defining an `self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil`\nmethod and adding the constraints directly to the `AVD::Metadata::ClassMetadata` instance.\n\n```\n# This class method is invoked when building the metadata associated with a type,\n# and can be used to manually wire up the constraints.\ndef self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil\n  metadata.add_property_constraint \"name\", AVD::Constraints::NotBlank.new\nend\n```\n\nThe metadata for each type is lazily loaded when an instance of that type is validated, and is only built once.\n\n## Arguments\n\nWhile most constraints can be instantiated with an argless constructor,they do have a set of optional arguments.\n* The `message` argument represents the message that should be used if the value is found to not be valid.\nThe message can also include placeholders, in the form of `{{ key }}`, that will be replaced when the message is rendered.\nMost commonly this includes the invalid value itself, but some constraints have additional placeholders.\n* The `payload` argument can be used to attach any domain specific data to the constraint; such as attaching a severity with each constraint\nto have more serious violations be handled differently.  See the [Payload](./Constraint.html#payload) section.\n* The `groups` argument can be used to run a subset of the defined constraints.  More on this in the [Validation Groups](./Constraint.html#validation-groups) section.\n\nFor example:\n\n```\nvalidator = AVD.validator\n\n# Instantiate a constraint with a custom message, using a placeholder.\nviolations = validator.validate -4, AVD::Constraints::PositiveOrZero.new message: \"{{ value }} is not a valid age.  A user cannot have a negative age.\"\n\nputs violations # =>\n# -4:\n#   -4 is not a valid age.  A user cannot have a negative age. (code: e09e52d0-b549-4ba1-8b4e-420aad76f0de)\n```\nCustomizing the message can be a good way for those consuming the errors to determine _WHY_ a given value is not valid.\n\n### Default Argument\n\nThe first argument of the constructor is known as the default argument.\nThis argument is special when using the annotation based approach in that it can be supplied as a positional argument within the annotation.\n\nFor example the default argument for `AVD::Constraints::GreaterThan` is the value that the value being validated should be compared against.\n\nThus:\n\n```\n@[Assert::GreaterThan(0)]\nproperty age : Int32\n```\n\nIs equivalent to:\n\n```\n@[Assert::GreaterThan(value: 0)]\nproperty age : Int32\n```\n\nNOTE: Only the first argument can be supplied positionally, all other arguments must be provided as named arguments within the annotation.\n\n### Message Plurality\n\n`Athena::Validator` has very basic support for pluralizing constraint `#message`s via `AVD::Violation::ConstraintViolationInterface#plural`.\n\nFor example the `#message` could have different versions based on the plurality of the violation.\nCurrently this only supports two contexts: singular (1/nil) and plural (2+).\n\nMultiple messages, separated by a `|`, can be included as part of an `AVD::Constraint` message.\nFor example from `AVD::Constraints::Size`:\n\n`min_message : String = \"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"`\n\nIf violations' `#plural` method returns `1` (or `nil`) the first message will be used.  If `#plural` is `2` or more, the latter message will be used.\n\nTODO: Support more robust translations; like language or multiple pluralities.\n\n### Payload\n\nThe `payload` argument defined on every `AVD::Constraint` type can be used to store custom domain specific information with a constraint.\nThis data can later be retrieved off of an `AVD::Violation::ConstraintViolationInterface`.\nAn example use case for this could be mapping a \"severity\" to a CSS class based on how important each specific constraint is.\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String); end\n\n  @[Assert::NotBlank(payload: {\"severity\" => \"error\"})]\n  getter email : String\n\n  @[Assert::NotBlank(payload: {\"severity\" => \"warning\"})]\n  getter password : String\nend\n\nviolations = AVD.validator.validate User.new \"\", \"\"\n\n# Use this when rendering HTML, or JSON to allow dynamically customizing the response object.\nviolations[0].constraint.payload # => {\"severity\" => \"error\"}\nviolations[1].constraint.payload # => {\"severity\" => \"warning\"}\n```\n\n## Validation Groups\n\nThe `groups` argument defined on every `AVD::Constraint` type can be used to run a subset of validations.\n\nFor example, say we only want to validate certain properties when the user is first created:\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String, @city : String); end\n\n  @[Assert::Email(groups: \"create\")]\n  getter email : String\n\n  @[Assert::NotBlank(groups: \"create\")]\n  @[Assert::Size(7.., groups: \"create\")]\n  getter password : String\n\n  @[Assert::Size(2..)]\n  getter city : String\nend\n\nuser = User.new \"george@dietrich.app\", \"monkey123\", \"\"\n\n# Validate the user object, but only for those in the \"create\" group,\n# if no groups are supplied, then all constraints in the \"default\" group will be used.\nviolations = AVD.validator.validate user, groups: \"create\"\n\n# There are no violations since the city's size is not validated since it's not in the \"create\" group.\nviolations.empty? # => true\n```\n\nUsing this configuration, there are three groups at play within the `User` class:\n1. `default` - Contains constraints in the current type, and subtypes, that belong to no other group.  I.e. `city`.\n1. `User` - In this example, equivalent to all constraints in the `default` group.  See `AVD::Constraints::GroupSequence`, and the note below.\n1. `create` - A custom group that only contains the constraints explicitly associated with it.  I.e. `email`, and `password`.\n\nNOTE: When validating _just_ the `User` object, the `default` group is equivalent to the `User` group.\nHowever, if the `User` object has other embedded types using the `AVD::Constraints::Valid` constraint, then validating the `User` object with the `User`\ngroup would only validate constraints that are explicitly in the `User` group within the embedded types.\n\nBy default, all constraints are validated in a single \"batch\".  I.e. all constraints within the provided group(s) are validated, without regard\nto if the previous/next constraint is/was (in)valid.  However, an `AVD::Constraints::GroupSequence` can be used to validate batches of constraints in steps.\nI.e. validate the first \"batch\" of constraints, and only advance to the next batch if all constraints in that step are valid.\n\nNOTE: The payload is not used with the framework itself.\n\n## Custom Constraints\n\nIf the built in `AVD::Constraints` are not sufficient to handle validating a given value/object; custom ones can be defined.\nLet's make a new constraint that asserts a string contains only alphanumeric characters.\n\nThis is accomplished by first defining a new class within the `AVD::Constraints` namespace that inherits from `AVD::Constraint`.\nThen define a `Validator` struct within our constraint that inherits from `AVD::ConstraintValidator` that actually implements the validation logic.\n\n```\nclass AVD::Constraints::AlphaNumeric < AVD::Constraint\n  # (Optional) A unique error code can also be defined to provide a machine readable identifier for a specific error.\n  NOT_ALPHANUMERIC_ERROR = \"1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09\"\n\n  # (Optional) Allows using the `.error_message(code : String) : String` method with this constraint.\n  @@error_names = {\n    NOT_ALPHANUMERIC_ERROR => \"NOT_ALPHANUMERIC_ERROR\",\n  }\n\n  # Define an initializer with our default message, and any additional arguments specific to this constraint.\n  def initialize(\n    message : String = \"This value should contain only alphanumeric characters.\",\n    groups : Array(String) | String | Nil = nil,\n    payload : Hash(String, String)? = nil\n  )\n    super message, groups, payload\n  end\n\n  # Define the validator within our constraint that'll contain our validation logic.\n  struct Validator < AVD::ConstraintValidator\n    # Define our validate method that accepts the value to be validated, and the constraint.\n    #\n    # Overloads can be used to filter values of specific types.\n    def validate(value : _, constraint : AVD::Constraints::AlphaNumeric) : Nil\n      # Custom constraints should ignore nil and empty values to allow\n      # other constraints (NotBlank, NotNil, etc.) take care of that\n      return if value.nil? || value == \"\"\n\n      # We'll cast the value to a string,\n      # alternatively we could just ignore non `String?` values.\n      value = value.to_s\n\n      # If all the characters of this string are alphanumeric, then it is valid\n      return if value.each_char.all? &.alphanumeric?\n\n      # Otherwise, it is invalid and we need to add a violation,\n      # see `AVD::ExecutionContextInterface` for additional information.\n      self.context.add_violation constraint.message, NOT_ALPHANUMERIC_ERROR, value\n    end\n  end\nend\n\nputs AVD.validator.validate \"$\", AVD::Constraints::AlphaNumeric.new # =>\n# $:\n#   This value should contain only alphanumeric characters. (code: 1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09)\n```\n\nNOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\n\nWe are now able to use this constraint as we would one of the built in ones;\neither by manually instantiating it, or applying an `@[Assert::AlphaNumeric]` annotation to a property.\n\nSee `AVD::ConstraintValidatorInterface` for more information on custom validators.\n\nNOTE:  The `AVD::Constraints::Compound` constraint can be used to create a constraint that consists of one or more other constraints.\n","summary":"<p><code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code> validates values/objects against a set of constraints, i.e.</p>","class_methods":[{"id":"error_name(error_code:String):String-class-method","html_id":"error_name(error_code:String):String-class-method","name":"error_name","doc":"Returns the name of the provided *error_code*.","summary":"<p>Returns the name of the provided <em>error_code</em>.</p>","abstract":false,"args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"args_string":"(error_code : String) : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L262","def":{"name":"error_name","args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@error_names[error_code]? || (raise(KeyError.new(\"The error code '#{error_code}' does not exist for constraint of type '#{self}'.\")))"}}],"constructors":[{"id":"new(message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L278","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_implicit_group(group:String):Nil-instance-method","html_id":"add_implicit_group(group:String):Nil-instance-method","name":"add_implicit_group","doc":"Adds the provided *group* to `#groups` if `self` is in the `AVD::Constraint::DEFAULT_GROUP`.","summary":"<p>Adds the provided <em>group</em> to <code><a href=\"../../Athena/Validator/Constraint.html#groups:Array(String)-instance-method\">#groups</a></code> if <code>self</code> is in the <code><a href=\"../../Athena/Validator/Constraint.html#DEFAULT_GROUP\">AVD::Constraint::DEFAULT_GROUP</a></code>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L287","def":{"name":"add_implicit_group","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (@groups.includes?(DEFAULT_GROUP)) && (!(@groups.includes?(group)))\n  @groups << group\nend"}},{"id":"groups:Array(String)-instance-method","html_id":"groups:Array(String)-instance-method","name":"groups","doc":"The validation groups `self` is a part of.","summary":"<p>The validation groups <code>self</code> is a part of.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L273","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@groups"}},{"id":"groups=(groups:Array(String))-instance-method","html_id":"groups=(groups:Array(String))-instance-method","name":"groups=","doc":"The validation groups `self` is a part of.","summary":"<p>The validation groups <code>self</code> is a part of.</p>","abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L273","def":{"name":"groups=","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups = groups"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the message that should be rendered if `self` is found to be invalid.\n\nNOTE: Some subtypes do not use this and instead define multiple message\nproperties in order to support more specific error messages.","summary":"<p>Returns the message that should be rendered if <code>self</code> is found to be invalid.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L270","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"payload:Hash(String,String)?-instance-method","html_id":"payload:Hash(String,String)?-instance-method","name":"payload","doc":"Returns any domain specific data associated with `self`.","summary":"<p>Returns any domain specific data associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L276","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@payload"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint.cr#L294","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints","path":"Athena/Validator/Constraints.html","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":396,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L396"},{"filename":"src/constraints/abstract_comparison.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains all of the built in `AVD::Constraint`s.\nSee each individual constraint for more information.\nThe `Assert` alias is used to apply these constraints via annotations.","summary":"<p>Contains all of the built in <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code>s.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","path":"Athena/Validator/Constraints/AbstractComparison.html","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison(ValueType)","name":"AbstractComparison","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/constraints/abstract_comparison.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Defines common logic for comparison based constraints, such as `AVD::Constraints::GreaterThan`, or `AVD::Constraints::EqualTo`.","summary":"<p>Defines common logic for comparison based constraints, such as <code><a href=\"../../../Athena/Validator/Constraints/GreaterThan.html\">AVD::Constraints::GreaterThan</a></code>, or <code><a href=\"../../../Athena/Validator/Constraints/EqualTo.html\">AVD::Constraints::EqualTo</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L19","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"value:ValueType-instance-method","html_id":"value:ValueType-instance-method","name":"value","doc":"Returns the expected value.","summary":"<p>Returns the expected value.</p>","abstract":false,"args":[],"args_string":" : ValueType","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L4","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType","visibility":"Public","body":"@value"}},{"id":"value_type:ValueType.class-instance-method","html_id":"value_type:ValueType.class-instance-method","name":"value_type","doc":"Returns the type of the expected value.","summary":"<p>Returns the type of the expected value.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ValueType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L7","def":{"name":"value_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType.class","visibility":"Public","body":"@value_type"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/All","path":"Athena/Validator/Constraints/All.html","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/all.cr","line_number":52,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L52"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates each element of an `Iterable` is valid based on a collection of constraints.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) that you want to apply to each element of the underlying iterable.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@strings : Array(String)); end\n\n  # Assert each string is not blank and is at least 5 characters long.\n  @[Assert::All([\n    @[Assert::NotBlank],\n    @[Assert::Size(5..)],\n  ])]\n  getter strings : Array(String)\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates each element of an <code>Iterable</code> is valid based on a collection of constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L53","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L52","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/All/Validator","path":"Athena/Validator/Constraints/All/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::All::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/all.cr","line_number":61,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L61"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/All","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Hash?,constraint:AVD::Constraints::All):Nil-instance-method","html_id":"validate(value:Hash?,constraint:AVD::Constraints::All):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Hash | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : Hash?, constraint : AVD::Constraints::All) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L63","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Hash | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.with_validator do |validator|\n  value.each do |k, v|\n    (validator.at_path(\"[#{k}]\")).validate(v, constraint.constraints)\n  end\nend\n"}},{"id":"validate(value:Indexable?,constraint:AVD::Constraints::All):Nil-instance-method","html_id":"validate(value:Indexable?,constraint:AVD::Constraints::All):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : Indexable?, constraint : AVD::Constraints::All) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L74","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.with_validator do |validator|\n  value.each_with_index do |item, idx|\n    (validator.at_path(\"[#{idx}]\")).validate(item, constraint.constraints)\n  end\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::All):NoReturn-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::All):NoReturn-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : _, constraint : AVD::Constraints::All) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/all.cr#L85","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(value, \"Hash | Indexable\")"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/AtLeastOneOf","path":"Athena/Validator/Constraints/AtLeastOneOf.html","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/at_least_one_of.cr","line_number":87,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L87"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"AT_LEAST_ONE_OF_ERROR","name":"AT_LEAST_ONE_OF_ERROR","value":"\"811994eb-b634-42f5-ae98-13eec66481b6\"","doc":null,"summary":null},{"id":"DEFAULT_ERROR_MESSAGE","name":"DEFAULT_ERROR_MESSAGE","value":"\"This value should satisfy at least one of the following constraints:\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value satisfies at least one of the provided constraints.\nValidation stops as soon as one constraint is satisfied.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) from which at least one of has to be satisfied in order for the validation to succeed.\n\n### Optional Arguments\n\n#### include_internal_messages\n\n**Type:** `Bool` **Default:** `true`\n\nIf the validation failed message should include the list of messages for the internal constraints.\nSee the [message](#message) argument for an example.\n\n#### message_collection\n\n**Type:** `String` **Default:** `Each element of this collection should satisfy its own set of constraints.`\n\nThe message that will be shown if validation fails and the internal constraint is an `AVD::Constraints::All`.\nSee the [message](#message) argument for an example.\n\n#### message\n\n**Type:** `String` **Default:** `This value should satisfy at least one of the following constraints:`\n\nThe intro that will be shown if validation fails.\nBy default, it'll be followed by the list of messages from the internal [constraints](#constraints);\nconfigurable via the [include_internal_messages](#include_internal_messages) argument.\n\nFor example, if the `grades` property in the example below fails to validate, the message will be:\n\n> This value should satisfy at least one of the following constraints: [1] This value is too short. It should have 3 items or more. [2] Each element of this collection should satisfy its own set of constraints.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@password : String, @grades : Array(Int32)); end\n\n  # Asserts the password contains an `#` or is at least 10 characters long.\n  @[Assert::AtLeastOneOf([\n    @[Assert::Regex(/#/)],\n    @[Assert::Size(10..)],\n  ])]\n  getter password : String\n\n  # Asserts the `grades` array contains at least 3 elements or\n  # that each element is greater than or equal to 5.\n  @[Assert::AtLeastOneOf([\n    @[Assert::Size(3..)],\n    @[Assert::All([\n      @[Assert::GreaterThanOrEqual(5)],\n    ])],\n  ])]\n  getter grades : Array(Int32)\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates that a value satisfies at least one of the provided constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,include_internal_messages:Bool=true,message_collection:String=&quot;Eachelementofthiscollectionshouldsatisfyitsownsetofconstraints.&quot;,message:String=&quot;Thisvalueshouldsatisfyatleastoneofthefollowingconstraints:&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,include_internal_messages:Bool=true,message_collection:String=&quot;Eachelementofthiscollectionshouldsatisfyitsownsetofconstraints.&quot;,message:String=&quot;Thisvalueshouldsatisfyatleastoneofthefollowingconstraints:&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"include_internal_messages","doc":null,"default_value":"true","external_name":"include_internal_messages","restriction":"Bool"},{"name":"message_collection","doc":null,"default_value":"\"Each element of this collection should satisfy its own set of constraints.\"","external_name":"message_collection","restriction":"String"},{"name":"message","doc":null,"default_value":"\"This value should satisfy at least one of the following constraints:\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, include_internal_messages : Bool = <span class=\"n\">true</span>, message_collection : String = <span class=\"s\">&quot;Each element of this collection should satisfy its own set of constraints.&quot;</span>, message : String = <span class=\"s\">&quot;This value should satisfy at least one of the following constraints:&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L98","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"include_internal_messages","doc":null,"default_value":"true","external_name":"include_internal_messages","restriction":"Bool"},{"name":"message_collection","doc":null,"default_value":"\"Each element of this collection should satisfy its own set of constraints.\"","external_name":"message_collection","restriction":"String"},{"name":"message","doc":null,"default_value":"\"This value should satisfy at least one of the following constraints:\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, include_internal_messages, message_collection, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"include_internal_messages:Bool-instance-method","html_id":"include_internal_messages:Bool-instance-method","name":"include_internal_messages","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L95","def":{"name":"include_internal_messages","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@include_internal_messages"}},{"id":"message_collection:String-instance-method","html_id":"message_collection:String-instance-method","name":"message_collection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L96","def":{"name":"message_collection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message_collection"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L87","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/AtLeastOneOf/Validator","path":"Athena/Validator/Constraints/AtLeastOneOf/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::AtLeastOneOf::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/at_least_one_of.cr","line_number":109,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L109"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/AtLeastOneOf","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::AtLeastOneOf):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::AtLeastOneOf):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AtLeastOneOf"}],"args_string":"(value : _, constraint : AVD::Constraints::AtLeastOneOf) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/at_least_one_of.cr#L111","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AtLeastOneOf"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"messages = [constraint.message]\nvalidator = self.context.validator\nconstraint.constraints.each_with_index do |item, idx|\n  violations = validator.validate(value, [item])\n  if violations.empty?\n    return\n  end\n  if constraint.include_internal_messages\n    messages << String.build do |str|\n      str << \" [#{idx + 1}] \"\n      str << (if item.is_a?(AVD::Constraints::All)\n        constraint.message_collection\n      else\n        violations.first.message\n      end)\n    end\n  end\nend\nself.context.add_violation(messages.join, AT_LEAST_ONE_OF_ERROR)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Blank","path":"Athena/Validator/Constraints/Blank.html","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/blank.cr","line_number":32,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/blank.cr#L32"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_BLANK_ERROR","name":"NOT_BLANK_ERROR","value":"\"c815f901-c581-4fb7-a85d-b8c5bc757959\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is blank; meaning equal to an empty string or `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be blank.`\n\nThe message that will be shown if the value is not blank.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is blank; meaning equal to an empty string or <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be blank.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/blank.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/blank.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Blank/Validator","path":"Athena/Validator/Constraints/Blank/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Blank::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/blank.cr","line_number":47,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/blank.cr#L47"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Blank","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Blank):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Blank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Blank"}],"args_string":"(value : _, constraint : AVD::Constraints::Blank) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/blank.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Blank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif (value.responds_to?(:\"blank?\")) && value.blank?\n  return\nend\nself.context.add_violation(constraint.message, NOT_BLANK_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Callback","path":"Athena/Validator/Constraints/Callback.html","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/callback.cr","line_number":120,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L120"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows creating totally custom validation rules, assigning any violations to specific fields on your object.\nThis process is achieved via using one or more _callback_ methods which will be invoked during the validation process.\n\nNOTE: The callback method itself does _fail_ or return any value.\nInstead it should directly add violations to the `AVD::ExecutionContextInterface` argument.\n\n## Configuration\n\n### Required Arguments\n\n#### callback\n\n**Type:** `AVD::Constraints::Callback::CallbackProc?` **Default:** `nil`\n\nThe proc that should be invoked as the callback for this constraint.\n\nNOTE: If this argument is not supplied, the [callback_name](#callback_name) argument must be.\n\n#### callback_name\n\n**Type:** `String?` **Default:** `nil`\n\nThe name of the method that should be invoked as the callback for this constraint.\n\nNOTE: If this argument is not supplied, the [callback](#callback) argument must be.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nThe callback constraint supports two callback methods when validating objects, and one callback method when using the constraint directly.\n\n### Instance Methods\n\nTo define an instance callback method, apply the `@[Assert::Callback]` method to a public instance method defined within an object.\nThis method should accept two arguments: the `AVD::ExecutionContextInterface` to which violations should be added,\nand the `AVD::Constraint@payload` from the related constraint.\n\nMore than one callback method can exist on a type, and the method name does not have to be `validate`.\n\n```\nclass Example\n  include AVD::Validatable\n\n  SPAM_DOMAINS = [\"fake.com\", \"spam.net\"]\n\n  def initialize(@domain_name : String); end\n\n  @[Assert::Callback]\n  def validate(context : AVD::ExecutionContextInterface, payload : Hash(String, String)?) : Nil\n    # Validate that the `domain_name` is not spammy.\n    return unless SPAM_DOMAINS.includes? @domain_name\n\n    context\n      .build_violation(\"This domain name is not legit!\")\n      .at_path(\"domain_name\")\n      .add\n  end\nend\n```\n\n### Class Methods\n\nThe callback method can also be defined as a class method.\nSince class methods do not have access to the related object instance, it is passed in as an argument.\n\nThat argument is typed as `AVD::Constraints::Callback::Value` which exposes a `AVD::Constraints::Callback::Value#get`\nmethod that can be used as an easier syntax than `.as`.\n\n```\nclass Example\n  include AVD::Validatable\n\n  SPAM_DOMAINS = [\"fake.com\", \"spam.net\"]\n\n  @[Assert::Callback]\n  def self.validate(value : AVD::Constraints::Callback::Value, context : AVD::ExecutionContextInterface, payload : Hash(String, String)?) : Nil\n    # Get the object from the value, typed as our `Example` class.\n    object = value.get self\n\n    # Validate that the `domain_name` is not spammy.\n    return unless SPAM_DOMAINS.includes? object.domain_name\n\n    context\n      .build_violation(\"This domain name is not legit!\")\n      .at_path(\"domain_name\")\n      .add\n  end\n\n  def initialize(@domain_name : String); end\n\n  getter domain_name : String\nend\n```\n\n### Procs/Blocks\n\nWhen working with constraints in a non object context, a callback passed in as a proc/block.\n`AVD::Constraints::Callback::CallbackProc` alias can be used to more easily create a callback proc.\n`AVD::Constraints::Callback.with_callback` can be used to create a callback constraint, using the block as the callback proc.\nSee the related types for more information.\n\nProc/block based callbacks operate similarly to [Class Methods](#static-methods) in that they receive the value as an argument.","summary":"<p>Allows creating totally custom validation rules, assigning any violations to specific fields on your object.</p>","class_methods":[{"id":"with_callback(**args,&block:AVD::Constraints::Callback::ValueContainer,AVD::ExecutionContextInterface,Hash(String,String)?->):AVD::Constraints::Callback-class-method","html_id":"with_callback(**args,&block:AVD::Constraints::Callback::ValueContainer,AVD::ExecutionContextInterface,Hash(String,String)?->):AVD::Constraints::Callback-class-method","name":"with_callback","doc":"Convenience method for creating a `AVD::Constraints::Callback` with\nthe given *&block* as the callback.\n\n```\n# Instantiate a callback constraint, using the block as the callback\nconstraint = AVD::Constraints::Callback.with_callback do |value, context, payload|\n  next if (value = value.get(Int32)).even?\n\n  context.add_violation \"This value should be even.\"\nend\n```","summary":"<p>Convenience method for creating a <code><a href=\"../../../Athena/Validator/Constraints/Callback.html\">AVD::Constraints::Callback</a></code> with the given <em>&block</em> as the callback.</p>","abstract":false,"args":[],"args_string":"(**args, &block : AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String)? -> ) : AVD::Constraints::Callback","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L169","def":{"name":"with_callback","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String) | ::Nil -> )"},"return_type":"AVD::Constraints::Callback","visibility":"Public","body":"new(**args, callback: block)"}}],"constructors":[{"id":"new(callback:AVD::Constraints::Callback::CallbackProc?=nil,callback_name:String?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(callback:AVD::Constraints::Callback::CallbackProc?=nil,callback_name:String?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"callback","doc":null,"default_value":"nil","external_name":"callback","restriction":"AVD::Constraints::Callback::CallbackProc | ::Nil"},{"name":"callback_name","doc":null,"default_value":"nil","external_name":"callback_name","restriction":"String | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(callback : AVD::Constraints::Callback::CallbackProc? = <span class=\"n\">nil</span>, callback_name : String? = <span class=\"n\">nil</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L194","def":{"name":"new","args":[{"name":"callback","doc":null,"default_value":"nil","external_name":"callback","restriction":"AVD::Constraints::Callback::CallbackProc | ::Nil"},{"name":"callback_name","doc":null,"default_value":"nil","external_name":"callback_name","restriction":"String | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(callback, callback_name, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"callback:AVD::Constraints::Callback::CallbackProc?-instance-method","html_id":"callback:AVD::Constraints::Callback::CallbackProc?-instance-method","name":"callback","doc":"Returns the proc that this constraint should invoke.","summary":"<p>Returns the proc that this constraint should invoke.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraints::Callback::CallbackProc?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L192","def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::Callback::CallbackProc | ::Nil","visibility":"Public","body":"@callback"}},{"id":"callback_name:String?-instance-method","html_id":"callback_name:String?-instance-method","name":"callback_name","doc":"Returns the name of the callback method this constraint should invoke.","summary":"<p>Returns the name of the callback method this constraint should invoke.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L189","def":{"name":"callback_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@callback_name"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L120","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/CallbackProc","path":"Athena/Validator/Constraints/Callback/CallbackProc.html","kind":"alias","full_name":"Athena::Validator::Constraints::Callback::CallbackProc","name":"CallbackProc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/constraints/callback.cr","line_number":186,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L186"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":true,"aliased":"Proc(Athena::Validator::Constraints::Callback::ValueContainer, Athena::Validator::ExecutionContextInterface, (Hash(String, String) | Nil), Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":"Convenience alias to make creating `AVD::Constraints::Callback` procs easier.\n\n```\n# Create a proc to handle the validation\ncallback = AVD::Constraints::Callback::CallbackProc.new do |value, context, payload|\n  return if (value = value.get(Int32)).even?\n\n  context.add_violation \"This value should be even.\"\nend\n\n# Instantiate a callback constraint with this proc\nconstraint = AVD::Constraints::Callback.new callback: callback\n```","summary":"<p>Convenience alias to make creating <code><a href=\"../../../../Athena/Validator/Constraints/Callback.html\">AVD::Constraints::Callback</a></code> procs easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/Validator","path":"Athena/Validator/Constraints/Callback/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/callback.cr","line_number":205,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L205"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Callback):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Callback):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Callback"}],"args_string":"(value : _, constraint : AVD::Constraints::Callback) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L207","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Callback"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if ((value.is_a?(AVD::Validatable) && (name = constraint.callback_name)) && (metadata = self.context.metadata)) && (metadata.is_a?(AVD::Metadata::ClassMetadata))\n  metadata.invoke_callback(name, value, self.context, constraint.payload)\nelse\n  if callback = constraint.callback\n    callback.call(Value.new(value), self.context, constraint.payload)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/Value","path":"Athena/Validator/Constraints/Callback/Value.html","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Value(T)","name":"Value","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/ValueContainer","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::ValueContainer","name":"ValueContainer"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/ValueContainer","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::ValueContainer","name":"ValueContainer"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/callback.cr","line_number":125,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L125"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":"Wrapper type to allow passing arbitrarily typed values as arguments in the `AVD::Constraints::Callback::CallbackProc`.","summary":"<p>Wrapper type to allow passing arbitrarily typed values as arguments in the <code><a href=\"../../../../Athena/Validator/Constraints/Callback/CallbackProc.html\">AVD::Constraints::Callback::CallbackProc</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(value:T)-class-method","html_id":"new(value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L125","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Value(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other):Bool-instance-method","html_id":"==(other):Bool-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L153","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@value == other"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L125","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value.clone)"}},{"id":"copy_with(value_value=@value)-instance-method","html_id":"copy_with(value_value=@value)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""}],"args_string":"(value _value = @value)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L125","def":{"name":"copy_with","args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_value)"}},{"id":"get(as_t:T.class):TforallT-instance-method","html_id":"get(as_t:T.class):TforallT-instance-method","name":"get","doc":"Returns the value as `T`.\n\nIf used inside a `AVD::Constraints::Callback@class-method`.\n\n```\n# Get the wrapped value as the type of the current class.\nobject = value.get self\n```\n\nIf used inside a `AVD::Constraints::Callback@procsblocks`.\n```\n# Get the wrapped value as the expected type.\nvalue = value.get Int32\n\n# Alternatively, can use normal Crystal semantics for narrowing the type.\nvalue = value.value\n\ncase value\nwhen Int32 then \"value is Int32\"\nwhen String then \"value is String\"\nend","summary":"<p>Returns the value as <code>T</code>.</p>","abstract":false,"args":[{"name":"_t","doc":null,"default_value":"","external_name":"as","restriction":"T.class"}],"args_string":"(as _t : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L148","def":{"name":"get","args":[{"name":"_t","doc":null,"default_value":"","external_name":"as","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(@value.as?(T)).not_nil!"}},{"id":"value:T-instance-method","html_id":"value:T-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@value"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/callback.cr#L126","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @value.\n{{ call }}\n\n    \n"}}],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Choice","path":"Athena/Validator/Constraints/Choice.html","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/choice.cr","line_number":99,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L99"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NO_SUCH_CHOICE_ERROR","name":"NO_SUCH_CHOICE_ERROR","value":"\"c7398ea5-e787-4ee9-9fca-5f2c130614d6\"","doc":null,"summary":null},{"id":"TOO_FEW_ERROR","name":"TOO_FEW_ERROR","value":"\"3573357d-c9a8-4633-a742-c001086fd5aa\"","doc":null,"summary":null},{"id":"TOO_MANY_ERROR","name":"TOO_MANY_ERROR","value":"\"91d0d22b-a693-4b9c-8b41-bc6392cf89f4\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is one of a given set of valid choices;\ncan also be used to validate that each item in a collection is one of those valid values.\n\n## Configuration\n\n### Required Arguments\n\n#### choices\n\n**Type:** `Array(String | Number::Primitive | Symbol)`\n\nThe choices that are considered valid.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid choice.`\n\nThe message that will be shown if the value is not a valid choice and [multiple](#multiple) is `false`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n\n#### multiple_message\n\n**Type:** `String` **Default:** `One or more of the given values is invalid.`\n\nThe message that will be shown if one of the values is not a valid choice and [multiple](#multiple) is `true`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n\n#### min_message\n\n**Type:** `String` **Default:** `You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.`\n\nThe message that will be shown if too few choices are chosen as per the [range](#range) option.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n* `{{ limit }}` - If [multiple](#multiple) is true, enforces that at most this many values may be selected in order to be valid.\n\n#### max_message\n\n**Type:** `String` **Default:** `You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.`\n\nThe message that will be shown if too many choices are chosen as per the [range](#range) option.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n* `{{ limit }}` - If [multiple](#multiple) is true, enforces that no more than this many values may be selected in order to be valid.\n\n#### range\n\n**Type:** `::Range?` **Default:** `nil`\n\nIf [multiple](#multiple) is true, is used to define the \"range\" of how many choices must be valid for the value to be considered valid.\nFor example, if set to `(3..)`, but there are only 2 valid items in the input enumerable then validation will fail.\n\nBeginless/endless ranges can be used to define only a lower/upper bound.\n\n#### multiple\n\n**Type:** `Bool` **Default:** `false`\n\nIf `true`, the input value is expected to be an `Enumerable` instead of a single scalar value.\nThe constraint will check each item in the enumerable is valid choice.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is one of a given set of valid choices; can also be used to validate that each item in a collection is one of those valid values.</p>","class_methods":[],"constructors":[{"id":"new(choices:Array(String|Number::Primitive|Symbol),message:String=&quot;Thisvalueisnotavalidchoice.&quot;,multiple_message:String=&quot;Oneormoreofthegivenvaluesisinvalid.&quot;,min_message:String=&quot;Youmustselectatleast{{limit}}choice.|Youmustselectatleast{{limit}}choices.&quot;,max_message:String=&quot;Youmustselectatmost{{limit}}choice.|Youmustselectatmost{{limit}}choices.&quot;,multiple:Bool=false,range:::Range?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(choices:Array(String|Number::Primitive|Symbol),message:String=&quot;Thisvalueisnotavalidchoice.&quot;,multiple_message:String=&quot;Oneormoreofthegivenvaluesisinvalid.&quot;,min_message:String=&quot;Youmustselectatleast{{limit}}choice.|Youmustselectatleast{{limit}}choices.&quot;,max_message:String=&quot;Youmustselectatmost{{limit}}choice.|Youmustselectatmost{{limit}}choices.&quot;,multiple:Bool=false,range:::Range?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"choices","doc":null,"default_value":"","external_name":"choices","restriction":"Array(String | Number::Primitive | Symbol)"},{"name":"message","doc":null,"default_value":"\"This value is not a valid choice.\"","external_name":"message","restriction":"String"},{"name":"multiple_message","doc":null,"default_value":"\"One or more of the given values is invalid.\"","external_name":"multiple_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.\"","external_name":"max_message","restriction":"String"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":"Bool"},{"name":"range","doc":null,"default_value":"nil","external_name":"range","restriction":"::Range | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(choices : Array(String | Number::Primitive | Symbol), message : String = <span class=\"s\">&quot;This value is not a valid choice.&quot;</span>, multiple_message : String = <span class=\"s\">&quot;One or more of the given values is invalid.&quot;</span>, min_message : String = <span class=\"s\">&quot;You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.&quot;</span>, max_message : String = <span class=\"s\">&quot;You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.&quot;</span>, multiple : Bool = <span class=\"n\">false</span>, range : ::Range? = <span class=\"n\">nil</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L121","def":{"name":"new","args":[{"name":"choices","doc":null,"default_value":"","external_name":"choices","restriction":"Array(String | Number::Primitive | Symbol)"},{"name":"message","doc":null,"default_value":"\"This value is not a valid choice.\"","external_name":"message","restriction":"String"},{"name":"multiple_message","doc":null,"default_value":"\"One or more of the given values is invalid.\"","external_name":"multiple_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.\"","external_name":"max_message","restriction":"String"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":"Bool"},{"name":"range","doc":null,"default_value":"nil","external_name":"range","restriction":"::Range | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(choices.map do |__arg0|\n  __arg0.as(String | Number::Primitive | Symbol)\nend, message, multiple_message, min_message, max_message, multiple, range.try(&.begin), range.try(&.end), groups, payload)"}}],"instance_methods":[{"id":"choices:Array(String|Number::Primitive|Symbol)-instance-method","html_id":"choices:Array(String|Number::Primitive|Symbol)-instance-method","name":"choices","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Number::Primitive | Symbol)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L110","def":{"name":"choices","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Number::Primitive | Symbol)","visibility":"Public","body":"@choices"}},{"id":"max:Number::Primitive?-instance-method","html_id":"max:Number::Primitive?-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L117","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | ::Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L114","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Number::Primitive?-instance-method","html_id":"min:Number::Primitive?-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L116","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | ::Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L113","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"multiple?:Bool-instance-method","html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L119","def":{"name":"multiple?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@multiple"}},{"id":"multiple_message:String-instance-method","html_id":"multiple_message:String-instance-method","name":"multiple_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L112","def":{"name":"multiple_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@multiple_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L99","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Choice/Validator","path":"Athena/Validator/Constraints/Choice/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Choice::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/choice.cr","line_number":150,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L150"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Choice","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Enumerable?,constraint:AVD::Constraints::Choice):Nil-instance-method","html_id":"validate(value:Enumerable?,constraint:AVD::Constraints::Choice):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Enumerable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"args_string":"(value : Enumerable?, constraint : AVD::Constraints::Choice) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L152","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Enumerable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif constraint.multiple?\nelse\n  self.raise_invalid_type(value, \"Enumerable\")\nend\nchoices = constraint.choices\nvalue.each do |v|\n  if choices.includes?(v)\n  else\n    (((self.context.build_violation(constraint.multiple_message, NO_SUCH_CHOICE_ERROR, v)).add_parameter(\"{{ choices }}\", choices)).invalid_value(v)).add\n    return\n  end\nend\nsize = value.size\nif (limit = constraint.min) && (size < limit)\n  (((((self.context.build_violation(constraint.min_message, TOO_FEW_ERROR, value)).add_parameter(\"{{ limit }}\", limit)).add_parameter(\"{{ choices }}\", choices)).plural(limit.to_i)).invalid_value(value)).add\n  return\nend\nif (limit = constraint.max) && (size > limit)\n  (((((self.context.build_violation(constraint.max_message, TOO_MANY_ERROR, value)).add_parameter(\"{{ limit }}\", limit)).add_parameter(\"{{ choices }}\", choices)).plural(limit.to_i)).invalid_value(value)).add\n  return\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::Choice):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Choice):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"args_string":"(value : _, constraint : AVD::Constraints::Choice) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/choice.cr#L202","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif constraint.multiple? && (!value.is_a?(Enumerable))\n  self.raise_invalid_type(value, \"Enumerable\")\nend\nif constraint.choices.includes?(value)\n  return\nend\n((self.context.build_violation(constraint.message, NO_SUCH_CHOICE_ERROR, value)).add_parameter(\"{{ choices }}\", constraint.choices)).add\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","path":"Athena/Validator/Constraints/ComparisonValidator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/abstract_comparison_validator.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison_validator.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::EqualTo::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThan::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::LessThan::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::LessThanOrEqual::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotEqualTo::Validator","name":"Validator"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Defines common logic for comparison based constraint validators.","summary":"<p>Defines common logic for comparison based constraint validators.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":true,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison_validator.cr#L4","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison_validator.cr#L7","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"validate(value:_,constraint:AVD::Constraints::AbstractComparison):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::AbstractComparison):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AbstractComparison"}],"args_string":"(value : _, constraint : AVD::Constraints::AbstractComparison) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison_validator.cr#L10","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AbstractComparison"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\ncompared_value = constraint.value\nif self.compare_values(value, compared_value)\n  return\nend\n(((self.context.build_violation(constraint.message, self.error_code, value)).add_parameter(\"{{ compared_value }}\", compared_value)).add_parameter(\"{{ compared_value_type }}\", constraint.value_type)).add\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","path":"Athena/Validator/Constraints/Composite.html","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/composite.cr","line_number":15,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/composite.cr#L15"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/All","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All"},{"html_id":"athena-validator/Athena/Validator/Constraints/AtLeastOneOf","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf"},{"html_id":"athena-validator/Athena/Validator/Constraints/Compound","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound"},{"html_id":"athena-validator/Athena/Validator/Constraints/Sequentially","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"A constraint composed of other constraints.\nhandles normalizing the groups of the nested constraints, via the following algorithm:\n\n* If groups are passed explicitly to the composite constraint, but\n  not to the nested constraints, the options of the composite\n  constraint are copied to the nested constraints\n* If groups are passed explicitly to the nested constraints, but not\n  to the composite constraint, the groups of all nested constraints\n  are merged and used as groups for the composite constraint\n* If groups are passed explicitly to both the composite and its nested\n  constraints, the groups of the nested constraints must be a subset\n  of the groups of the composite constraint.\n\nNOTE: You most likely want to use `AVD::Constraints::Compound` instead of this type.","summary":"<p>A constraint composed of other constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, message : String, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/composite.cr#L18","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_implicit_group(group:String):Nil-instance-method","html_id":"add_implicit_group(group:String):Nil-instance-method","name":"add_implicit_group","doc":"Adds the provided *group* to `#groups` if `self` is in the `AVD::Constraint::DEFAULT_GROUP`.","summary":"<p>Adds the provided <em>group</em> to <code>#groups</code> if <code>self</code> is in the <code><a href=\"../../../Athena/Validator/Constraint.html#DEFAULT_GROUP\">AVD::Constraint::DEFAULT_GROUP</a></code>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/composite.cr#L58","def":{"name":"add_implicit_group","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"super(group)\n@constraints.each(&.add_implicit_group(group))\n"}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/composite.cr#L16","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Compound","path":"Athena/Validator/Constraints/Compound.html","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/compound.cr","line_number":59,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L59"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows creating a custom set of reusable constraints, representing rules to use consistently across your application.\n\nNOTE: See `AVD::Constraint@custom-constraints` for common documentation on defining custom constraints.\n\n## Configuration\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nThis constraint is not used directly on its own;\ninstead it's used to create another constraint.\n\n```\n# Define a compound constraint to centralize the logic to validate a password.\n#\n# NOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\nclass AVD::Constraints::ValidPassword < AVD::Constraints::Compound\n  # Define a method that returns an array of the constraints we want to be a part of `self`.\n  def constraints : Array(AVD::Constraint)\n    [\n      AVD::Constraints::NotBlank.new,       # Not empty/null\n      AVD::Constraints::Size.new(12..),     # At least 12 characters longs\n      AVD::Constraints::Regex.new(/^\\d.*/), # Must start with a number\n    ]\n  end\nend\n```\n\nWe can then use this constraint as we would any other.\n\nEither as an annotation\n\n```\n@[Assert::ValidPassword]\ngetter password : String\n```\nor directly.\n\n```\nconstraint = AVD::Constraints::ValidPassword.new\n```","summary":"<p>Allows creating a custom set of reusable constraints, representing rules to use consistently across your application.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L60","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L71","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L67","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::Compound::Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Compound/Validator","path":"Athena/Validator/Constraints/Compound/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Compound::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/compound.cr","line_number":73,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L73"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Compound","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Compound):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Compound):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Compound"}],"args_string":"(value : _, constraint : AVD::Constraints::Compound) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/compound.cr#L75","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Compound"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"context = self.context\nvalidator = context.validator.in_context(context)\nvalidator.validate(value, constraint.constraints)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Email","path":"Athena/Validator/Constraints/Email.html","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/email.cr","line_number":42,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L42"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_FORMAT_ERROR","name":"INVALID_FORMAT_ERROR","value":"\"ad9d877d-9ad1-4dd7-b77b-e419934e5910\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid email address.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### mode\n\n**Type:** `AVD::Constraints::Email::Mode` **Default:** `AVD::Constraints::Email::Mode::Loose`\n\nDefines the pattern that should be used to validate the email address.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid email address.`\n\nThe message that will be shown if the value is not a valid email address.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid email address.</p>","class_methods":[],"constructors":[{"id":"new(mode:AVD::Constraints::Email::Mode=:loose,message:String=&quot;Thisvalueisnotavalidemailaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(mode:AVD::Constraints::Email::Mode=:loose,message:String=&quot;Thisvalueisnotavalidemailaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":":loose","external_name":"mode","restriction":"AVD::Constraints::Email::Mode"},{"name":"message","doc":null,"default_value":"\"This value is not a valid email address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(mode : AVD::Constraints::Email::Mode = <span class=\"n\">:loose</span>, message : String = <span class=\"s\">&quot;This value is not a valid email address.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L71","def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":":loose","external_name":"mode","restriction":"AVD::Constraints::Email::Mode"},{"name":"message","doc":null,"default_value":"\"This value is not a valid email address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"mode:AVD::Constraints::Email::Mode-instance-method","html_id":"mode:AVD::Constraints::Email::Mode-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::Email::Mode","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L69","def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::Email::Mode","visibility":"Public","body":"@mode"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Email/Mode","path":"Athena/Validator/Constraints/Email/Mode.html","kind":"enum","full_name":"Athena::Validator::Constraints::Email::Mode","name":"Mode","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena-validator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/email.cr","line_number":44,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L44"}],"repository_name":"athena-validator","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Loose","name":"Loose","value":"0","doc":"Validates the email against a simple `::Regex` that allows all values with an `@` symbol and a `.` in the host part of the email address.","summary":"<p>Validates the email against a simple <code>::Regex</code> that allows all values with an <code>@</code> symbol and a <code>.</code> in the host part of the email address.</p>"},{"id":"HTML5","name":"HTML5","value":"1","doc":"Validates the email against the [HTML5 input pattern](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address).","summary":"<p>Validates the email against the <a href=\"https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\" target=\"_blank\">HTML5 input pattern</a>.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},"doc":"Determines _how_ the email address should be validated.","summary":"<p>Determines <em>how</em> the email address should be validated.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"html5?-instance-method","html_id":"html5?-instance-method","name":"html5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L49","def":{"name":"html5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HTML5"}},{"id":"loose?-instance-method","html_id":"loose?-instance-method","name":"loose?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L46","def":{"name":"loose?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Loose"}},{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":"Returns the `::Regex` pattern for `self`.","summary":"<p>Returns the <code>::Regex</code> pattern for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L55","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"case self\nin .html5?\n  /^[a-zA-Z0-9.!\\#$\\%&\\'*+\\\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/\nin .loose?\n  /^.+\\@\\S+\\.\\S+$/\nend"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Email/Validator","path":"Athena/Validator/Constraints/Email/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Email::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/email.cr","line_number":80,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L80"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Email):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Email):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Email"}],"args_string":"(value : _, constraint : AVD::Constraints::Email) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/email.cr#L82","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Email"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(constraint.mode.pattern)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_FORMAT_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo","path":"Athena/Validator/Constraints/EqualTo.html","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/equal_to.cr","line_number":40,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L40"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_EQUAL_ERROR","name":"NOT_EQUAL_ERROR","value":"\"47d83d11-15d5-4267-b469-1444f80fd169\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = EqualTo(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L50","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L40","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo/Validator","path":"Athena/Validator/Constraints/EqualTo/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::EqualTo::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/equal_to.cr","line_number":54,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L54"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual == expected"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/equal_to.cr#L61","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"NOT_EQUAL_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","path":"Athena/Validator/Constraints/GreaterThan.html","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/greater_than.cr","line_number":42,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L42"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"a221096d-d125-44e8-a865-4270379ac11a\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/Positive","kind":"class","full_name":"Athena::Validator::Constraints::Positive","name":"Positive"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is greater than another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be greater than {{ compared_value }}.`\n\nThe message that will be shown if the value is not greater than the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is greater than another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThan(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be greater than {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan/Validator","path":"Athena/Validator/Constraints/GreaterThan/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThan::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/greater_than.cr","line_number":55,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L55"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_LOW_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","path":"Athena/Validator/Constraints/GreaterThanOrEqual.html","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/greater_than_or_equal.cr","line_number":42,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L42"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"e09e52d0-b549-4ba1-8b4e-420aad76f0de\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/PositiveOrZero","kind":"class","full_name":"Athena::Validator::Constraints::PositiveOrZero","name":"PositiveOrZero"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is greater than or equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be greater than or equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not greater than or equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is greater than or equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThanOrEqual(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be greater than or equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual/Validator","path":"Athena/Validator/Constraints/GreaterThanOrEqual/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/greater_than_or_equal.cr","line_number":55,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L55"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/greater_than_or_equal.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_LOW_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence","path":"Athena/Validator/Constraints/GroupSequence.html","kind":"struct","full_name":"Athena::Validator::Constraints::GroupSequence","name":"GroupSequence","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/group_sequence.cr","line_number":37,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L37"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows validating your `AVD::Constraint@validation-groups` in steps.\nI.e. only continue to the next group if all constraints in the first group are valid.\n\n```\n@[Assert::GroupSequence(\"User\", \"strict\")]\nclass User\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  property name : String\n\n  @[Assert::NotBlank]\n  property password : String\n\n  def initialize(@name : String, @password : String); end\n\n  @[Assert::IsTrue(message: \"Your password cannot be the same as your name.\", groups: \"strict\")]\n  def is_safe_password? : Bool\n    @name != @password\n  end\nend\n```\n\nIn this case, it'll validate the `name` and `password` properties are not blank before validating they are not the same.\nIf either property is blank, the `is_safe_password?` validation will be skipped.\n\nNOTE: The `default` group is not allowed as part of a group sequence.\n\nNOTE: Calling `validate` with a group in the sequence, such as `strict`, will\ncause violations to _ONLY_ use that group and not all groups within the sequence.\nThis is because the group sequence is now referred to as the `default` group.\n\nSee `AVD::Constraints::GroupSequence::Provider` for a way to dynamically determine the sequence an object should use.","summary":"<p>Allows validating your <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a>@validation-groups</code> in steps.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String))-class-method","html_id":"new(groups:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L40","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(groups.map do |__arg0|\n  __arg0.as(String | Array(String))\nend)"}},{"id":"new(groups:Array(String|Array(String)))-class-method","html_id":"new(groups:Array(String|Array(String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String | Array(String))"}],"args_string":"(groups : Array(String | Array(String)))","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L44","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String | Array(String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"groups:Array(String|Array(String))-instance-method","html_id":"groups:Array(String|Array(String))-instance-method","name":"groups","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String))","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L38","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String))","visibility":"Public","body":"@groups"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence/Provider","path":"Athena/Validator/Constraints/GroupSequence/Provider.html","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/constraints/group_sequence.cr","line_number":87,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L87"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Spec/EntityGroupSequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider"},{"html_id":"athena-validator/Athena/Validator/Spec/EntitySequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence","kind":"struct","full_name":"Athena::Validator::Constraints::GroupSequence","name":"GroupSequence"},"doc":"`AVD::Constraints::GroupSequence`s can be a good way to create efficient validations.\nHowever, since the sequence is static, it is not a very flexible solution.\n\nGroup sequence providers allow the sequence to be dynamically determined at runtime.\nThis allows running specific validations only when the object is in a specific state,\nsuch as validating a \"registered\" user differently than a non-registered user.\n\n```\nclass User\n  include AVD::Validatable\n\n  # Include the interface that informs the validator this object will provide its sequence.\n  include AVD::Constraints::GroupSequence::Provider\n\n  @[Assert::NotBlank]\n  property name : String\n\n  # Only validate the `email` property if the `#group_sequence` method includes \"registered\"\n  # Which can be determined using the current state of the object.\n  @[Assert::Email(groups: \"registered\")]\n  @[Assert::NotBlank(groups: \"registered\")]\n  property email : String?\n\n  def initialize(@name : String, @email : String); end\n\n  # Define a method that returns the sequence.\n  def group_sequence : Array(String | Array(String)) | AVD::Constraints::GroupSequence\n    # When returning a 1D array, if there is a vaiolation in any group\n    # the rest of the groups are not validated.  E.g. if `User` fails,\n    # `registered` and `api` are not validated:\n    return [\"User\", \"registered\", \"api\"]\n\n    # When returning a nested array, all groups included in each array are validated.\n    # E.g. if `User` fails, `Premium` is also validated (and you'll get its violations),\n    # but `api` will not be validated\n    return [[\"User\", \"registered\"], \"api\"]\n  end\nend\n```\n\nSee `AVD::Constraints::Sequentially` for a more straightforward method of applying constraints sequentially on a single property.","summary":"<p><code><a href=\"../../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code>s can be a good way to create efficient validations.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/group_sequence.cr#L88","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/IP","path":"Athena/Validator/Constraints/IP.html","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/ip.cr","line_number":43,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L43"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_IP_ERROR","name":"INVALID_IP_ERROR","value":"\"326b0aa4-3871-404d-986d-fe3e6c82005c\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid IP address.\nBy default validates the value as an `IPv4` address, but can be customized to validate `IPv6`s, or both.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### version\n\n**Type:** `AVD::Constraints::IP::Version` **Default:** `AVD::Constraints::IP::Version::V4`\n\nDefines the pattern that should be used to validate the IP address.\n\n#### message\n\n**Type:** `String` **Default:** `This is not a valid IP address.`\n\nThe message that will be shown if the value is not a valid IP address.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid IP address.</p>","class_methods":[],"constructors":[{"id":"new(version:AVD::Constraints::IP::Version=:v4,message:String=&quot;ThisvalueisnotavalidIPaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(version:AVD::Constraints::IP::Version=:v4,message:String=&quot;ThisvalueisnotavalidIPaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":":v4","external_name":"version","restriction":"AVD::Constraints::IP::Version"},{"name":"message","doc":null,"default_value":"\"This value is not a valid IP address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(version : AVD::Constraints::IP::Version = <span class=\"n\">:v4</span>, message : String = <span class=\"s\">&quot;This value is not a valid IP address.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L81","def":{"name":"new","args":[{"name":"version","doc":null,"default_value":":v4","external_name":"version","restriction":"AVD::Constraints::IP::Version"},{"name":"message","doc":null,"default_value":"\"This value is not a valid IP address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(version, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L43","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}},{"id":"version:AVD::Constraints::IP::Version-instance-method","html_id":"version:AVD::Constraints::IP::Version-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::IP::Version","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L79","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::IP::Version","visibility":"Public","body":"@version"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/IP/Validator","path":"Athena/Validator/Constraints/IP/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IP::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/ip.cr","line_number":90,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L90"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IP):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IP):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IP"}],"args_string":"(value : _, constraint : AVD::Constraints::IP) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L92","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IP"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(constraint.version.pattern)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_IP_ERROR, value)\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/IP/Version","path":"Athena/Validator/Constraints/IP/Version.html","kind":"enum","full_name":"Athena::Validator::Constraints::IP::Version","name":"Version","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena-validator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/ip.cr","line_number":45,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L45"}],"repository_name":"athena-validator","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"V4","name":"V4","value":"0","doc":"Validates for `IPv4` addresses.","summary":"<p>Validates for <code>IPv4</code> addresses.</p>"},{"id":"V6","name":"V6","value":"1","doc":"Validates for `IPv6` addresses.","summary":"<p>Validates for <code>IPv6</code> addresses.</p>"},{"id":"V4_V6","name":"V4_V6","value":"2","doc":"Validates for `IPv4` or `IPv6` addresses.","summary":"<p>Validates for <code>IPv4</code> or <code>IPv6</code> addresses.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},"doc":"Determines _how_ the IP address should be validated.","summary":"<p>Determines <em>how</em> the IP address should be validated.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":"Returns the `::Regex` pattern for `self`.","summary":"<p>Returns the <code>::Regex</code> pattern for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L56","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"case self\nin .v4?\n  self.v4_regex\nin .v6?\n  self.v6_regex\nin .v4_v6?\n  ::Regex.union(self.v4_regex, self.v6_regex)\nend"}},{"id":"v4?-instance-method","html_id":"v4?-instance-method","name":"v4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L47","def":{"name":"v4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V4"}},{"id":"v4_v6?-instance-method","html_id":"v4_v6?-instance-method","name":"v4_v6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L53","def":{"name":"v4_v6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V4_V6"}},{"id":"v6?-instance-method","html_id":"v6?-instance-method","name":"v6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/ip.cr#L50","def":{"name":"v6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V6"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN","path":"Athena/Validator/Constraints/ISBN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/isbn.cr","line_number":79,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L79"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"f51bae62-6833-43b1-bc27-ae4445c59e30\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"25d35907-d822-4bcc-82cc-852e30c89c0d\"","doc":null,"summary":null},{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"ebd28c75-bb42-43d6-9053-f0ea2ea93d44\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"5da9e91f-7956-40f7-9788-4124463d783e\"","doc":null,"summary":null},{"id":"TYPE_NOT_RECOGNIZED_ERROR","name":"TYPE_NOT_RECOGNIZED_ERROR","value":"\"8d83f04d-2503-4547-97a1-935fcccd1ae1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that an [International Standard Book Number (ISBN)](https://en.wikipedia.org/wiki/Isbn) is either a valid `ISBN-10` or `ISBN-13`.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### type\n\n**Type:** `AVD::Constraints::ISBN::Type` **Default:** `AVD::Constraints::ISBN::Type::Both`\n\nType of ISBN to validate against.\n\n#### message\n\n**Type:** `String` **Default:** `\"\"`\n\nThe message that will be shown if the value is invalid.\nThis message has priority over the other messages if not empty.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### isbn10_message\n\n**Type:** `String` **Default:** `This value is not a valid ISBN-10.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::ISBN10` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### isbn13_message\n\n**Type:** `String` **Default:** `This value is not a valid ISBN-13.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::ISBN13` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### both_message\n\n**Type:** `String` **Default:** `This value is neither a valid ISBN-10 nor a valid ISBN-13.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::Both` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that an <a href=\"https://en.wikipedia.org/wiki/Isbn\" target=\"_blank\">International Standard Book Number (ISBN)</a> is either a valid <code><a href=\"../../../Athena/Validator/Constraints/ISBN.html\">ISBN</a>-10</code> or <code><a href=\"../../../Athena/Validator/Constraints/ISBN.html\">ISBN</a>-13</code>.</p>","class_methods":[],"constructors":[{"id":"new(type:AVD::Constraints::ISBN::Type=:both,isbn10_message:String=&quot;ThisvalueisnotavalidISBN-10.&quot;,isbn13_message:String=&quot;ThisvalueisnotavalidISBN-13.&quot;,both_message:String=&quot;ThisvalueisneitheravalidISBN-10noravalidISBN-13.&quot;,message:String=&quot;&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(type:AVD::Constraints::ISBN::Type=:both,isbn10_message:String=&quot;ThisvalueisnotavalidISBN-10.&quot;,isbn13_message:String=&quot;ThisvalueisnotavalidISBN-13.&quot;,both_message:String=&quot;ThisvalueisneitheravalidISBN-10noravalidISBN-13.&quot;,message:String=&quot;&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":":both","external_name":"type","restriction":"AVD::Constraints::ISBN::Type"},{"name":"isbn10_message","doc":null,"default_value":"\"This value is not a valid ISBN-10.\"","external_name":"isbn10_message","restriction":"String"},{"name":"isbn13_message","doc":null,"default_value":"\"This value is not a valid ISBN-13.\"","external_name":"isbn13_message","restriction":"String"},{"name":"both_message","doc":null,"default_value":"\"This value is neither a valid ISBN-10 nor a valid ISBN-13.\"","external_name":"both_message","restriction":"String"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(type : AVD::Constraints::ISBN::Type = <span class=\"n\">:both</span>, isbn10_message : String = <span class=\"s\">&quot;This value is not a valid ISBN-10.&quot;</span>, isbn13_message : String = <span class=\"s\">&quot;This value is not a valid ISBN-13.&quot;</span>, both_message : String = <span class=\"s\">&quot;This value is neither a valid ISBN-10 nor a valid ISBN-13.&quot;</span>, message : String = <span class=\"s\">&quot;&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L113","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":":both","external_name":"type","restriction":"AVD::Constraints::ISBN::Type"},{"name":"isbn10_message","doc":null,"default_value":"\"This value is not a valid ISBN-10.\"","external_name":"isbn10_message","restriction":"String"},{"name":"isbn13_message","doc":null,"default_value":"\"This value is not a valid ISBN-13.\"","external_name":"isbn13_message","restriction":"String"},{"name":"both_message","doc":null,"default_value":"\"This value is neither a valid ISBN-10 nor a valid ISBN-13.\"","external_name":"both_message","restriction":"String"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, isbn10_message, isbn13_message, both_message, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"both_message:String-instance-method","html_id":"both_message:String-instance-method","name":"both_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L111","def":{"name":"both_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@both_message"}},{"id":"isbn10_message:String-instance-method","html_id":"isbn10_message:String-instance-method","name":"isbn10_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L109","def":{"name":"isbn10_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@isbn10_message"}},{"id":"isbn13_message:String-instance-method","html_id":"isbn13_message:String-instance-method","name":"isbn13_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L110","def":{"name":"isbn13_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@isbn13_message"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the message that should be rendered if `self` is found to be invalid.\n\nNOTE: Some subtypes do not use this and instead define multiple message\nproperties in order to support more specific error messages.","summary":"<p>Returns the message that should be rendered if <code>self</code> is found to be invalid.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L125","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if @message.empty?\nelse\n  return @message\nend\n@type.message(self)\n"}},{"id":"type:AVD::Constraints::ISBN::Type-instance-method","html_id":"type:AVD::Constraints::ISBN::Type-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::ISBN::Type","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L108","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::ISBN::Type","visibility":"Public","body":"@type"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L79","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN/Type","path":"Athena/Validator/Constraints/ISBN/Type.html","kind":"enum","full_name":"Athena::Validator::Constraints::ISBN::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena-validator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/isbn.cr","line_number":80,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L80"}],"repository_name":"athena-validator","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"ISBN10","name":"ISBN10","value":"0","doc":null,"summary":null},{"id":"ISBN13","name":"ISBN13","value":"1","doc":null,"summary":null},{"id":"Both","name":"Both","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"both?-instance-method","html_id":"both?-instance-method","name":"both?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L83","def":{"name":"both?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Both"}},{"id":"isbn10?-instance-method","html_id":"isbn10?-instance-method","name":"isbn10?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L81","def":{"name":"isbn10?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ISBN10"}},{"id":"isbn13?-instance-method","html_id":"isbn13?-instance-method","name":"isbn13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L82","def":{"name":"isbn13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ISBN13"}},{"id":"message(constraint:AVD::Constraints::ISBN):String-instance-method","html_id":"message(constraint:AVD::Constraints::ISBN):String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"args_string":"(constraint : AVD::Constraints::ISBN) : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L85","def":{"name":"message","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case self\nin .isbn10?\n  constraint.isbn10_message\nin .isbn13?\n  constraint.isbn13_message\nin .both?\n  constraint.both_message\nend"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN/Validator","path":"Athena/Validator/Constraints/ISBN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISBN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/isbn.cr","line_number":131,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L131"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISBN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISBN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISBN) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isbn.cr#L133","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncanonical = value.gsub('-', \"\")\ncode = case constraint.type\nin .isbn10?\n  self.validate_isbn10(canonical)\nin .isbn13?\n  self.validate_isbn13(canonical)\nin .both?\n  both_code = self.validate_isbn10(canonical)\n  if TOO_LONG_ERROR == both_code\n    both_code = self.validate_isbn13(canonical)\n    if TOO_SHORT_ERROR == both_code\n      both_code = TYPE_NOT_RECOGNIZED_ERROR\n    end\n  end\n  both_code\nend\nif code.nil?\n  return\nend\nself.context.add_violation(constraint.message, code, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/IsFalse","path":"Athena/Validator/Constraints/IsFalse.html","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_false.cr","line_number":32,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_false.cr#L32"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_FALSE_ERROR","name":"NOT_FALSE_ERROR","value":"\"55c076a0-dbaf-453c-90cf-b94664276dbc\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `false`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be false.`\n\nThe message that will be shown if the value is not `false`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>false</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbefalse.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbefalse.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be false.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be false.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_false.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be false.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_false.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/IsFalse/Validator","path":"Athena/Validator/Constraints/IsFalse/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsFalse::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_false.cr","line_number":47,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_false.cr#L47"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/IsFalse","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsFalse):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsFalse):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsFalse"}],"args_string":"(value : _, constraint : AVD::Constraints::IsFalse) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_false.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsFalse"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil? || (value == false)\n  return\nend\nself.context.add_violation(constraint.message, NOT_FALSE_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/ISIN","path":"Athena/Validator/Constraints/ISIN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/isin.cr","line_number":36,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isin.cr#L36"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_CHECKSUM_ERROR","name":"INVALID_CHECKSUM_ERROR","value":"\"c7d37ffb-0273-4f57-91f7-f47bf49aad08\"","doc":null,"summary":null},{"id":"INVALID_LENGTH_ERROR","name":"INVALID_LENGTH_ERROR","value":"\"1d1c3fbe-5b6f-42be-afa5-6840655865da\"","doc":null,"summary":null},{"id":"INVALID_PATTERN_ERROR","name":"INVALID_PATTERN_ERROR","value":"\"0b6ba8c4-b6aa-44dc-afac-a6f7a9a2556d\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid [International Securities Identification Number (ISIN)](https://en.wikipedia.org/wiki/International_Securities_Identification_Number).\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid International Securities Identification Number (ISIN).`\n\nThe message that will be shown if the value is not a valid ISIN.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid <a href=\"https://en.wikipedia.org/wiki/International_Securities_Identification_Number\" target=\"_blank\">International Securities Identification Number (ISIN)</a>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;ThisvalueisnotavalidInternationalSecuritiesIdentificationNumber(ISIN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;ThisvalueisnotavalidInternationalSecuritiesIdentificationNumber(ISIN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid International Securities Identification Number (ISIN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value is not a valid International Securities Identification Number (ISIN).&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isin.cr#L50","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid International Securities Identification Number (ISIN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isin.cr#L36","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/ISIN/Validator","path":"Athena/Validator/Constraints/ISIN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISIN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/isin.cr","line_number":58,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isin.cr#L58"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/ISIN","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISIN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISIN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISIN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISIN) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/isin.cr#L62","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISIN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nvalue = value.upcase\nif VALIDATION_LENGTH != value.size\n  return self.context.add_violation(constraint.message, INVALID_LENGTH_ERROR, value)\nend\nif value.matches?(VALIDATION_PATTERN)\nelse\n  return self.context.add_violation(constraint.message, INVALID_PATTERN_ERROR, value)\nend\nif self.is_correct_checksum(value)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_CHECKSUM_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/IsNil","path":"Athena/Validator/Constraints/IsNil.html","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_nil.cr","line_number":32,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_nil.cr#L32"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_NIL_ERROR","name":"NOT_NIL_ERROR","value":"\"2c88e3c7-9275-4b9b-81b4-48c6c44b1804\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be null.`\n\nThe message that will be shown if the value is not `nil`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be null.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_nil.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_nil.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/IsNil/Validator","path":"Athena/Validator/Constraints/IsNil/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsNil::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_nil.cr","line_number":47,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_nil.cr#L47"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/IsNil","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsNil):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsNil):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsNil"}],"args_string":"(value : _, constraint : AVD::Constraints::IsNil) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_nil.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsNil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.context.add_violation(constraint.message, NOT_NIL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/ISSN","path":"Athena/Validator/Constraints/ISSN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/issn.cr","line_number":50,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L50"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"62c01bab-fe8f-4072-aac8-aa4bdcde8361\"","doc":null,"summary":null},{"id":"INVALID_CASE_ERROR","name":"INVALID_CASE_ERROR","value":"\"66f892f3-9eed-4176-b823-0dafde72202a\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"85c5d3aa-fd0a-4cd0-8cf7-e014e6379d59\"","doc":null,"summary":null},{"id":"MISSING_HYPHEN_ERROR","name":"MISSING_HYPHEN_ERROR","value":"\"d6c120a9-0b56-4e45-b4bc-7fd186f2cfbd\"","doc":null,"summary":null},{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"fab8e3ea-2f77-4da7-b40f-d9b24ff8c0cc\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"85c5d3aa-fd0a-4cd0-8cf7-e014e6379d59\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid [International Standard Serial Number (ISSN)](https://en.wikipedia.org/wiki/Issn).\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### case_sensitive\n\n**Type:** `Bool` **Default:** `false`\n\nThe validator will allow ISSN values to end with a lowercase `x` by default.\nWhen set to `true`, this requires an uppcase case `X`.\n\n#### require_hypen\n\n**Type:** `Bool` **Default:** `false`\n\nThe validator will allow non hyphenated values by default.\nWhen set to `true`, this requires a hyphenated ISSN value.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid International Standard Serial Number (ISSN).`\n\nThe message that will be shown if the value is not a valid ISSN.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid <a href=\"https://en.wikipedia.org/wiki/Issn\" target=\"_blank\">International Standard Serial Number (ISSN)</a>.</p>","class_methods":[],"constructors":[{"id":"new(case_sensitive:Bool=false,require_hypen:Bool=false,message:String=&quot;ThisvalueisnotavalidInternationalStandardSerialNumber(ISSN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(case_sensitive:Bool=false,require_hypen:Bool=false,message:String=&quot;ThisvalueisnotavalidInternationalStandardSerialNumber(ISSN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"case_sensitive","doc":null,"default_value":"false","external_name":"case_sensitive","restriction":"Bool"},{"name":"require_hypen","doc":null,"default_value":"false","external_name":"require_hypen","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid International Standard Serial Number (ISSN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(case_sensitive : Bool = <span class=\"n\">false</span>, require_hypen : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value is not a valid International Standard Serial Number (ISSN).&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L70","def":{"name":"new","args":[{"name":"case_sensitive","doc":null,"default_value":"false","external_name":"case_sensitive","restriction":"Bool"},{"name":"require_hypen","doc":null,"default_value":"false","external_name":"require_hypen","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid International Standard Serial Number (ISSN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(case_sensitive, require_hypen, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"case_sensitive?:Bool-instance-method","html_id":"case_sensitive?:Bool-instance-method","name":"case_sensitive?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L67","def":{"name":"case_sensitive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@case_sensitive"}},{"id":"require_hypen?:Bool-instance-method","html_id":"require_hypen?:Bool-instance-method","name":"require_hypen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L68","def":{"name":"require_hypen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@require_hypen"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L50","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/ISSN/Validator","path":"Athena/Validator/Constraints/ISSN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISSN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/issn.cr","line_number":80,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L80"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/ISSN","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISSN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISSN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISSN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISSN) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/issn.cr#L82","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISSN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncanonical = value\nif canonical[4]? == '-'\n  canonical = canonical.delete('-')\nelse\n  if constraint.require_hypen?\n    return self.context.add_violation(constraint.message, MISSING_HYPHEN_ERROR, value)\n  end\nend\nself.validate_size(canonical) do |code|\n  return self.context.add_violation(constraint.message, code, value)\nend\nchar = self.validate_characters(canonical) do\n  return self.context.add_violation(constraint.message, INVALID_CHARACTERS_ERROR, value)\nend\nif constraint.case_sensitive? && (char == 'x')\n  return self.context.add_violation(constraint.message, INVALID_CASE_ERROR, value)\nend\nself.validate_checksum(char, canonical) do\n  self.context.add_violation(constraint.message, CHECKSUM_FAILED_ERROR, value)\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/IsTrue","path":"Athena/Validator/Constraints/IsTrue.html","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_true.cr","line_number":32,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_true.cr#L32"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_TRUE_ERROR","name":"NOT_TRUE_ERROR","value":"\"beabd93e-3673-4dfc-8796-01bd1504dd19\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `true`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be true.`\n\nThe message that will be shown if the value is not `true`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>true</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbetrue.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbetrue.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be true.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be true.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_true.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be true.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_true.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/IsTrue/Validator","path":"Athena/Validator/Constraints/IsTrue/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsTrue::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/is_true.cr","line_number":47,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_true.cr#L47"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/IsTrue","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsTrue):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsTrue):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsTrue"}],"args_string":"(value : _, constraint : AVD::Constraints::IsTrue) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/is_true.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsTrue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil? || (value == true)\n  return\nend\nself.context.add_violation(constraint.message, NOT_TRUE_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","path":"Athena/Validator/Constraints/LessThan.html","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/less_than.cr","line_number":42,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L42"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"d9fbedb3-c576-45b5-b4dc-996030349bbf\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/Negative","kind":"class","full_name":"Athena::Validator::Constraints::Negative","name":"Negative"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is less than another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be less than {{ compared_value }}.`\n\nThe message that will be shown if the value is not less than the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is less than another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThan(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be less than {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan/Validator","path":"Athena/Validator/Constraints/LessThan/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::LessThan::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/less_than.cr","line_number":55,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L55"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_HIGH_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","path":"Athena/Validator/Constraints/LessThanOrEqual.html","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/less_than_or_equal.cr","line_number":42,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L42"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"515a12ff-82f2-4434-9635-137164d5b467\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/NegativeOrZero","kind":"class","full_name":"Athena::Validator::Constraints::NegativeOrZero","name":"NegativeOrZero"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is less than or equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be less than or equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not less than or equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is less than or equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThanOrEqual(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be less than or equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual/Validator","path":"Athena/Validator/Constraints/LessThanOrEqual/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::LessThanOrEqual::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/less_than_or_equal.cr","line_number":55,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L55"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/less_than_or_equal.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_HIGH_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Luhn","path":"Athena/Validator/Constraints/Luhn.html","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/luhn.cr","line_number":36,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/luhn.cr#L36"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"a4f089dd-fd63-4d50-ac30-34ed2a8dc9dd\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"c42b8d36-d9e9-4f5f-aad6-5190e27a1102\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a credit card number passes the [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm); a useful first step to validating a credit card.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid credit card number.`\n\nThe message that will be shown if the value is not pass the Luhn check.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a credit card number passes the <a href=\"https://en.wikipedia.org/wiki/Luhn_algorithm\" target=\"_blank\">Luhn algorithm</a>; a useful first step to validating a credit card.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueisnotavalidcreditcardnumber.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueisnotavalidcreditcardnumber.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid credit card number.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value is not a valid credit card number.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/luhn.cr#L45","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid credit card number.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/luhn.cr#L36","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Luhn/Validator","path":"Athena/Validator/Constraints/Luhn/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Luhn::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/luhn.cr","line_number":53,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/luhn.cr#L53"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Luhn","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Luhn):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Luhn):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Luhn"}],"args_string":"(value : _, constraint : AVD::Constraints::Luhn) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/luhn.cr#L55","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Luhn"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncharacters = value.chars\nif characters.all?(&.number?)\nelse\n  return self.context.add_violation(constraint.message, INVALID_CHARACTERS_ERROR, value)\nend\nlast_dig : Int32 = characters.pop.to_i\nchecksum : Int32 = (characters.reverse.map_with_index do |n, idx|\n  val = idx.even? ? n.to_i * 2 : n.to_i\n  if val > 9\n    val = val - 9\n  end\n  val\nend.sum + last_dig)\nif (!checksum.zero?) && (checksum.divisible_by?(10))\n  return\nend\nself.context.add_violation(constraint.message, CHECKSUM_FAILED_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Negative","path":"Athena/Validator/Constraints/Negative.html","kind":"class","full_name":"Athena::Validator::Constraints::Negative","name":"Negative","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan","name":"LessThan"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan","name":"LessThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/negative.cr","line_number":35,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative.cr#L35"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a negative number.\nUse `AVD::Constraints::NegativeOrZero` if you wish to also allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be negative.`\n\nThe message that will be shown if the value is not less than `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a negative number.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenegative.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenegative.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be negative.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be negative.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be negative.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::LessThan::Validator"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/NegativeOrZero","path":"Athena/Validator/Constraints/NegativeOrZero.html","kind":"class","full_name":"Athena::Validator::Constraints::NegativeOrZero","name":"NegativeOrZero","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual","name":"LessThanOrEqual"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual","name":"LessThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/negative_or_zero.cr","line_number":35,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative_or_zero.cr#L35"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a negative number, or `0`.\nUse `AVD::Constraints::Negative` if you don't want to allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be negative or zero.`\n\nThe message that will be shown if the value is not less than or equal to `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe `AVD::Constraint@payload` is not used by `Athena::Validator`, but its processing is completely up to you","summary":"<p>Validates that a value is a negative number, or <code>0</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenegativeorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenegativeorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be negative or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be negative or zero.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative_or_zero.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be negative or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/negative_or_zero.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::LessThanOrEqual::Validator"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/NotBlank","path":"Athena/Validator/Constraints/NotBlank.html","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_blank.cr","line_number":38,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L38"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_BLANK_ERROR","name":"IS_BLANK_ERROR","value":"\"0d0c3254-3642-4cb0-9882-46ee5918e6e3\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not blank; meaning not equal to a blank string, an empty `Iterable`, `false`, or optionally `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### allow_nil\n\n**Type:** `Bool` **Default:** `false`\n\nIf set to `true`, `nil` values are considered valid and will not trigger a violation.\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be blank.`\n\nThe message that will be shown if the value is blank.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not blank; meaning not equal to a blank string, an empty <code>Iterable</code>, <code>false</code>, or optionally <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(allow_nil:Bool=false,message:String=&quot;Thisvalueshouldnotbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(allow_nil:Bool=false,message:String=&quot;Thisvalueshouldnotbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should not be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(allow_nil : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value should not be blank.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L47","def":{"name":"new","args":[{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should not be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(allow_nil, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_nil?:Bool-instance-method","html_id":"allow_nil?:Bool-instance-method","name":"allow_nil?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L45","def":{"name":"allow_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_nil"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L38","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/NotBlank/Validator","path":"Athena/Validator/Constraints/NotBlank/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotBlank::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_blank.cr","line_number":56,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L56"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/NotBlank","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:String?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:String?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : String?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L58","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v.blank?\nend"}},{"id":"validate(value:Bool?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:Bool?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : Bool?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L65","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v == false\nend"}},{"id":"validate(value:Iterable?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:Iterable?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Iterable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : Iterable?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_blank.cr#L72","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Iterable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v.empty?\nend"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo","path":"Athena/Validator/Constraints/NotEqualTo.html","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_equal_to.cr","line_number":40,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L40"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_EQUAL_ERROR","name":"IS_EQUAL_ERROR","value":"\"984a0525-d73e-40c0-81c2-2ecbca7e4c96\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NotEqualTo(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L49","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should not be equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L40","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo/Validator","path":"Athena/Validator/Constraints/NotEqualTo/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotEqualTo::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_equal_to.cr","line_number":53,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L53"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L55","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual != expected"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_equal_to.cr#L60","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"IS_EQUAL_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/NotNil","path":"Athena/Validator/Constraints/NotNil.html","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_nil.cr","line_number":35,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_nil.cr#L35"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_NIL_ERROR","name":"IS_NIL_ERROR","value":"\"c7e77b14-744e-44c0-aa7e-391c69cc335c\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not `nil`.\n\nNOTE: Due to Crystal's static typing, when validating objects the property's type must be nilable,\notherwise `nil` is inherently not allowed due to the compiler's type checking.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be null.`\n\nThe message that will be shown if the value is `nil`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldnotbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldnotbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should not be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should not be null.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_nil.cr#L42","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should not be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_nil.cr#L35","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/NotNil/Validator","path":"Athena/Validator/Constraints/NotNil/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotNil::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/not_nil.cr","line_number":50,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_nil.cr#L50"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/NotNil","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::NotNil):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::NotNil):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotNil"}],"args_string":"(value : _, constraint : AVD::Constraints::NotNil) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/not_nil.cr#L52","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotNil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\nelse\n  return\nend\nself.context.add_violation(constraint.message, IS_NIL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Positive","path":"Athena/Validator/Constraints/Positive.html","kind":"class","full_name":"Athena::Validator::Constraints::Positive","name":"Positive","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan","name":"GreaterThan"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan","name":"GreaterThan"},{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/positive.cr","line_number":35,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive.cr#L35"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a positive number.\nUse `AVD::Constraints::PositiveOrZero` if you wish to also allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be positive.`\n\nThe message that will be shown if the value is not greater than `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a positive number.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbepositive.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbepositive.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be positive.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be positive.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be positive.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::GreaterThan::Validator"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/PositiveOrZero","path":"Athena/Validator/Constraints/PositiveOrZero.html","kind":"class","full_name":"Athena::Validator::Constraints::PositiveOrZero","name":"PositiveOrZero","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual","name":"GreaterThanOrEqual"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual","name":"GreaterThanOrEqual"},{"html_id":"athena-validator/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/positive_or_zero.cr","line_number":35,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive_or_zero.cr#L35"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a positive number, or `0`.\nUse `AVD::Constraints::Positive` if you don't want to allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be positive or zero.`\n\nThe message that will be shown if the value is not greater than or equal to `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a positive number, or <code>0</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbepositiveorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbepositiveorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be positive or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be positive or zero.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive_or_zero.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be positive or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/positive_or_zero.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::GreaterThanOrEqual::Validator"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Constraints/Range","path":"Athena/Validator/Constraints/Range.html","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/range.cr","line_number":71,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L71"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_IN_RANGE_ERROR","name":"NOT_IN_RANGE_ERROR","value":"\"7e62386d-30ae-4e7c-918f-1b7e571c6d69\"","doc":null,"summary":null},{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"5d9aed01-ac49-4d8e-9c16-e4aab74ea774\"","doc":null,"summary":null},{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"f0316644-882e-4779-a404-ee7ac97ddecc\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a `Number` or `Time` value is between some minimum and maximum.\n\n## Configuration\n\n### Required Arguments\n\n#### range\n\n**Type:** `::Range`\n\nThe `::Range` that defines the minimum and maximum values, if any.\nAn endless range can be used to only have a minimum or maximum.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### not_in_range_message\n\n**Type:** `String` **Default:** `This value should be between {{ min }} and {{ max }}.`\n\nThe message that will be shown if the value is less than the min or greater than the max.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ min }}` - The lower limit.\n* `{{ max }}` - The upper limit.\n\n#### min_message\n\n**Type:** `String` **Default:** `This value should be {{ limit }} or more.`\n\nThe message that will be shown if the value is less than the min, and no max has been provided.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The lower limit.\n\n#### max_message\n\n**Type:** `String` **Default:** `This value should be {{ limit }} or less.`\n\nThe message that will be shown if the value is more than the max, and no min has been provided.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The upper limit.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a <code>Number</code> or <code>Time</code> value is between some minimum and maximum.</p>","class_methods":[],"constructors":[{"id":"new(range:::Range,not_in_range_message:String=&quot;Thisvalueshouldbebetween{{min}}and{{max}}.&quot;,min_message:String=&quot;Thisvalueshouldbe{{limit}}ormore.&quot;,max_message:String=&quot;Thisvalueshouldbe{{limit}}orless.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(range:::Range,not_in_range_message:String=&quot;Thisvalueshouldbebetween{{min}}and{{max}}.&quot;,min_message:String=&quot;Thisvalueshouldbe{{limit}}ormore.&quot;,max_message:String=&quot;Thisvalueshouldbe{{limit}}orless.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"not_in_range_message","doc":null,"default_value":"\"This value should be between {{ min }} and {{ max }}.\"","external_name":"not_in_range_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"This value should be {{ limit }} or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value should be {{ limit }} or less.\"","external_name":"max_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(range : ::Range, not_in_range_message : String = <span class=\"s\">&quot;This value should be between {{ min }} and {{ max }}.&quot;</span>, min_message : String = <span class=\"s\">&quot;This value should be {{ limit }} or more.&quot;</span>, max_message : String = <span class=\"s\">&quot;This value should be {{ limit }} or less.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L88","def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"not_in_range_message","doc":null,"default_value":"\"This value should be between {{ min }} and {{ max }}.\"","external_name":"not_in_range_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"This value should be {{ limit }} or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value should be {{ limit }} or less.\"","external_name":"max_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(range.begin, range.end, not_in_range_message, min_message, max_message, groups, payload)"}}],"instance_methods":[{"id":"max:Number::Primitive|Time|Nil-instance-method","html_id":"max:Number::Primitive|Time|Nil-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive | Time | Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L83","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | Time | Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L86","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Number::Primitive|Time|Nil-instance-method","html_id":"min:Number::Primitive|Time|Nil-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive | Time | Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L82","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | Time | Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L85","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"not_in_range_message:String-instance-method","html_id":"not_in_range_message:String-instance-method","name":"not_in_range_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L84","def":{"name":"not_in_range_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@not_in_range_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L71","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Range/Validator","path":"Athena/Validator/Constraints/Range/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Range::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/range.cr","line_number":111,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L111"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Range","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Number|Time|Nil,constraint:AVD::Constraints::Range):Nil-instance-method","html_id":"validate(value:Number|Time|Nil,constraint:AVD::Constraints::Range):Nil-instance-method","name":"validate","doc":":inherit:\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number | Time | Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"args_string":"(value : Number | Time | Nil, constraint : AVD::Constraints::Range) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L115","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number | Time | Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nmin = constraint.min\nmax = constraint.max\ncase {value, min, max}\nwhen {Number, ::Union(Number::Primitive, ::Nil), ::Union(Number::Primitive, ::Nil)}\n  if (min && max) && (value < min || value > max)\n    return self.add_not_in_range_violation(constraint, value, min, max)\n  end\n  if max && value > max\n    return self.add_too_high_violation(constraint, value, max)\n  end\n  if min && value < min\n    add_too_low_violation(constraint, value, min)\n  end\nwhen {Time, ::Union(Time, ::Nil), ::Union(Time, ::Nil)}\n  if (min && max) && (value < min || value > max)\n    return self.add_not_in_range_violation(constraint, value, min, max)\n  end\n  if max && value > max\n    return self.add_too_high_violation(constraint, value, max)\n  end\n  if min && value < min\n    add_too_low_violation(constraint, value, min)\n  end\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::Range):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Range):Nil-instance-method","name":"validate","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"args_string":"(value : _, constraint : AVD::Constraints::Range) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/range.cr#L135","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"raise(AVD::Exceptions::UnexpectedValueError.new(value, \"Number | Time\"))"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Regex","path":"Athena/Validator/Constraints/Regex.html","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/regex.cr","line_number":51,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L51"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_FAILED_ERROR","name":"REGEX_FAILED_ERROR","value":"\"108987a0-2d81-44a0-b8d4-1c7ab8815343\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value matches a regular expression.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Required Arguments\n\n#### pattern\n\n**Type:** `::Regex`\n\nThe `::Regex` pattern that the value should match.\n\n### Optional Arguments\n\n#### match\n\n**Type:** `Bool` **Default:** `true`\n\nIf set to `false`, validation will require the value does _NOT_ match the [pattern](#pattern).\n\n#### message\n\n**Type:** `String` **Default:** `This value should match '{{ pattern }}'.`\n\nThe message that will be shown if the value does not match the [pattern](#pattern).\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ pattern }}` - The regular expression pattern that the value should match.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value matches a regular expression.</p>","class_methods":[],"constructors":[{"id":"new(pattern:::Regex,match:Bool=true,message:String=&quot;Thisvalueshouldmatch&#39;{{pattern}}&#39;.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(pattern:::Regex,match:Bool=true,message:String=&quot;Thisvalueshouldmatch&#39;{{pattern}}&#39;.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"::Regex"},{"name":"match","doc":null,"default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should match '{{ pattern }}'.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(pattern : ::Regex, match : Bool = <span class=\"n\">true</span>, message : String = <span class=\"s\">&quot;This value should match &#39;{{ pattern }}&#39;.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L61","def":{"name":"new","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"::Regex"},{"name":"match","doc":null,"default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should match '{{ pattern }}'.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pattern, match, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"match?:Bool-instance-method","html_id":"match?:Bool-instance-method","name":"match?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L59","def":{"name":"match?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@match"}},{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L58","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"@pattern"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L51","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Regex/Validator","path":"Athena/Validator/Constraints/Regex/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Regex::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/regex.cr","line_number":71,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L71"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Regex","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Regex):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Regex):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Regex"}],"args_string":"(value : _, constraint : AVD::Constraints::Regex) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/regex.cr#L73","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif constraint.match? ^ (value.matches?(constraint.pattern))\nelse\n  return\nend\n((self.context.build_violation(constraint.message, REGEX_FAILED_ERROR, value)).add_parameter(\"{{ pattern }}\", constraint.pattern)).add\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Sequentially","path":"Athena/Validator/Constraints/Sequentially.html","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/sequentially.cr","line_number":66,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/sequentially.cr#L66"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates a value against a collection of constraints, stopping once the first violation is raised.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) that are to be applied sequentially.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nSuppose you have an object with a `address` property which should meet the following criteria:\n\n* Is not a blank string\n* Is at least 10 characters long\n* Is in a specific format\n* Is geolocalizable using an external API\n\nIf you were to apply all of these constraints to the `address` property, you may run into some problems.\nFor example, multiple violations may be added for the same property, or you may perform a useless and heavy\nexternal call to geolocalize the address when it is not in a proper format.\n\nTo solve this we can validate these constraints sequentially.\n\n```\nclass Location\n  include AVD::Validatable\n\n  PATTERN = /some_pattern/\n\n  def initialize(@address : String); end\n\n  @[Assert::Sequentially([\n    @[Assert::NotBlank],\n    @[Assert::Size(10..)],\n    @[Assert::Regex(Location::PATTERN)],\n    @[Assert::CustomGeolocalizationConstraint],\n  ])]\n  getter address : String\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates a value against a collection of constraints, stopping once the first violation is raised.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/sequentially.cr#L67","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/sequentially.cr#L66","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Sequentially/Validator","path":"Athena/Validator/Constraints/Sequentially/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Sequentially::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/sequentially.cr","line_number":75,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/sequentially.cr#L75"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Sequentially","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Sequentially):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Sequentially):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Sequentially"}],"args_string":"(value : _, constraint : AVD::Constraints::Sequentially) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/sequentially.cr#L77","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Sequentially"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validator = self.context.validator.in_context(self.context)\norigional_count = validator.violations.size\nconstraint.constraints.each do |c|\n  if origional_count != (validator.validate(value, c)).violations.size\n    break\n  end\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Size","path":"Athena/Validator/Constraints/Size.html","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/size.cr","line_number":76,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L76"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"a1fa7a63-ea3b-46a0-adcc-5e1bcc26f73a\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"8ba31c71-1b37-4b76-8bc9-66896589b01f\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that the `#size` of a `String` or `Indexable` value is between some minimum and maximum.\n\n## Configuration\n\n### Required Arguments\n\n#### range\n\n**Type:** `::Range`\n\nThe `::Range` that defines the minimum and maximum values, if any.\nAn endless range can be used to only have a minimum or maximum.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### exact_message\n\n**Type:** `String` **Default:** `This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.`\n\nThe message that will be shown if min and max values are equal and the underlying value’s size is not exactly this value.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The exact expected size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### min_message\n\n**Type:** `String` **Default:** `This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.`\n\nThe message that will be shown if the underlying value’s size is less than the min.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The expected minimum size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### max_message\n\n**Type:** `String` **Default:** `This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.`\n\nThe message that will be shown if the underlying value’s size is greater than the max.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The expected minimum size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that the <code>#size</code> of a <code>String</code> or <code>Indexable</code> value is between some minimum and maximum.</p>","class_methods":[],"constructors":[{"id":"new(range:::Range,min_message:String=&quot;Thisvalueistooshort.Itshouldhave{{limit}}{{type}}ormore.|Thisvalueistooshort.Itshouldhave{{limit}}{{type}}sormore.&quot;,max_message:String=&quot;Thisvalueistoolong.Itshouldhave{{limit}}{{type}}orless.|Thisvalueistoolong.Itshouldhave{{limit}}{{type}}sorless.&quot;,exact_message:String=&quot;Thisvalueshouldhaveexactly{{limit}}{{type}}.|Thisvalueshouldhaveexactly{{limit}}{{type}}s.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(range:::Range,min_message:String=&quot;Thisvalueistooshort.Itshouldhave{{limit}}{{type}}ormore.|Thisvalueistooshort.Itshouldhave{{limit}}{{type}}sormore.&quot;,max_message:String=&quot;Thisvalueistoolong.Itshouldhave{{limit}}{{type}}orless.|Thisvalueistoolong.Itshouldhave{{limit}}{{type}}sorless.&quot;,exact_message:String=&quot;Thisvalueshouldhaveexactly{{limit}}{{type}}.|Thisvalueshouldhaveexactly{{limit}}{{type}}s.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"min_message","doc":null,"default_value":"\"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.\"","external_name":"max_message","restriction":"String"},{"name":"exact_message","doc":null,"default_value":"\"This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.\"","external_name":"exact_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(range : ::Range, min_message : String = <span class=\"s\">&quot;This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.&quot;</span>, max_message : String = <span class=\"s\">&quot;This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.&quot;</span>, exact_message : String = <span class=\"s\">&quot;This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L91","def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"min_message","doc":null,"default_value":"\"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.\"","external_name":"max_message","restriction":"String"},{"name":"exact_message","doc":null,"default_value":"\"This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.\"","external_name":"exact_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(range.begin, range.end, min_message, max_message, exact_message, groups, payload)"}}],"instance_methods":[{"id":"exact_message:String-instance-method","html_id":"exact_message:String-instance-method","name":"exact_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L89","def":{"name":"exact_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@exact_message"}},{"id":"max:Int32?-instance-method","html_id":"max:Int32?-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L86","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L88","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Int32?-instance-method","html_id":"min:Int32?-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L85","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L87","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L76","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Size/Validator","path":"Athena/Validator/Constraints/Size/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Size::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/size.cr","line_number":114,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L114"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Size","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:String|Indexable,constraint:AVD::Constraints::Size):Nil-instance-method","html_id":"validate(value:String|Indexable,constraint:AVD::Constraints::Size):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Indexable"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Size"}],"args_string":"(value : String | Indexable, constraint : AVD::Constraints::Size) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/size.cr#L116","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Indexable"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Size"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nsize = value.size\nmin = constraint.min\nmax = constraint.max\nif max && size > max\n  (((((self.context.build_violation(min == max ? constraint.exact_message : constraint.max_message, TOO_LONG_ERROR, value)).add_parameter(\"{{ limit }}\", max)).add_parameter(\"{{ type }}\", value.is_a?(String) ? \"character\" : \"item\")).invalid_value(value)).plural(max)).add\nend\nif min && size < min\n  (((((self.context.build_violation(min == max ? constraint.exact_message : constraint.min_message, TOO_SHORT_ERROR, value)).add_parameter(\"{{ limit }}\", min)).add_parameter(\"{{ type }}\", value.is_a?(String) ? \"character\" : \"item\")).invalid_value(value)).plural(min)).add\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Unique","path":"Athena/Validator/Constraints/Unique.html","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/unique.cr","line_number":32,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L32"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_NOT_UNIQUE_ERROR","name":"IS_NOT_UNIQUE_ERROR","value":"\"fd1f83d6-94b5-44bc-b39d-b1ff367ebfb8\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that all elements of an `Indexable` are unique.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This collection should contain only unique elements.`\n\nThe message that will be shown if at least one element is repeated in the collection.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that all elements of an <code>Indexable</code> are unique.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thiscollectionshouldcontainonlyuniqueelements.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thiscollectionshouldcontainonlyuniqueelements.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This collection should contain only unique elements.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This collection should contain only unique elements.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This collection should contain only unique elements.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Unique/Validator","path":"Athena/Validator/Constraints/Unique/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Unique::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/unique.cr","line_number":47,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L47"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Unique","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Indexable\")"}},{"id":"validate(value:Indexable?,constraint:AVD::Constraints::Unique):Nil-instance-method","html_id":"validate(value:Indexable?,constraint:AVD::Constraints::Unique):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Unique"}],"args_string":"(value : Indexable?, constraint : AVD::Constraints::Unique) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/unique.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Unique"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nset = Set(typeof(value[0])).new(value.size)\nif value.all? do |x|\n  set.add?(x)\nend\nelse\n  self.context.add_violation(constraint.message, IS_NOT_UNIQUE_ERROR, value)\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/URL","path":"Athena/Validator/Constraints/URL.html","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/url.cr","line_number":48,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L48"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_URL_ERROR","name":"INVALID_URL_ERROR","value":"\"e87ceba6-a896-4906-9957-b102045272ee\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid URL string.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### protocols\n\n**Type:** `Array(String)` **Default:** `[\"http\", \"https\"]`\n\nThe protocols considered to be valid for the URL.\n\n#### relative_protocol\n\n**Type:** `Bool` **Default:** `false`\n\nIf `true` the protocol is considered optional.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid URL.`\n\nThe message that will be shown if the URL is not valid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid URL string.</p>","class_methods":[],"constructors":[{"id":"new(protocols:Array(String)=[&quot;http&quot;,&quot;https&quot;],relative_protocol:Bool=false,message:String=&quot;ThisvalueisnotavalidURL.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(protocols:Array(String)=[&quot;http&quot;,&quot;https&quot;],relative_protocol:Bool=false,message:String=&quot;ThisvalueisnotavalidURL.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"protocols","doc":null,"default_value":"[\"http\", \"https\"]","external_name":"protocols","restriction":"Array(String)"},{"name":"relative_protocol","doc":null,"default_value":"false","external_name":"relative_protocol","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid URL.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(protocols : Array(String) = [<span class=\"s\">&quot;http&quot;</span>, <span class=\"s\">&quot;https&quot;</span>], relative_protocol : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value is not a valid URL.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L58","def":{"name":"new","args":[{"name":"protocols","doc":null,"default_value":"[\"http\", \"https\"]","external_name":"protocols","restriction":"Array(String)"},{"name":"relative_protocol","doc":null,"default_value":"false","external_name":"relative_protocol","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid URL.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(protocols, relative_protocol, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"protocols:Array(String)-instance-method","html_id":"protocols:Array(String)-instance-method","name":"protocols","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L55","def":{"name":"protocols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@protocols"}},{"id":"relative_protocol?:Bool-instance-method","html_id":"relative_protocol?:Bool-instance-method","name":"relative_protocol?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L56","def":{"name":"relative_protocol?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@relative_protocol"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L48","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/URL/Validator","path":"Athena/Validator/Constraints/URL/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::URL::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/url.cr","line_number":68,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L68"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/URL","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"pattern(constraint:AVD::Constraints::URL):::Regex-instance-method","html_id":"pattern(constraint:AVD::Constraints::URL):::Regex-instance-method","name":"pattern","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"args_string":"(constraint : AVD::Constraints::URL) : ::Regex","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L79","def":{"name":"pattern","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"/^#{constraint.relative_protocol? ? \"(?:(#{constraint.protocols.join('|')}):)?\" : \"(#{constraint.protocols.join('|')}):\"}\\/\\/(((?:[\\_\\.\\pL\\pN-]|\\%[0-9A-Fa-f]{2})+:)?((?:[\\_\\.\\pL\\pN-]|\\%[0-9A-Fa-f]{2})+)@)?(([\\pL\\pN\\pS\\-\\_\\.])+(\\.?([\\pL\\pN]|xn\\-\\-[\\pL\\pN-]+)+\\.?)|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[(?:(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-f]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,1}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,2}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,3}(?:(?:[0-9a-f]{1,4})))?::(?:(?:[0-9a-f]{1,4})):)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,4}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,5}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,6}(?:(?:[0-9a-f]{1,4})))?::))))\\])(:[0-9]+)?(?:\\/ (?:[\\pL\\pN\\-._\\~!$&\\'()*+,;=:@]|\\%[0-9A-Fa-f]{2})* )*(?:\\? (?:[\\pL\\pN\\-._\\~!$&\\'[\\]()*+,;=:@\\/?]|\\%[0-9A-Fa-f]{2})* )?(?:\\# (?:[\\pL\\pN\\-._\\~!$&\\'()*+,;=:@\\/?]|\\%[0-9A-Fa-f]{2})* )?$/ix"}},{"id":"validate(value:_,constraint:AVD::Constraints::URL):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::URL):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"args_string":"(value : _, constraint : AVD::Constraints::URL) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/url.cr#L70","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(self.pattern(constraint))\n  return\nend\nself.context.add_violation(constraint.message, INVALID_URL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Constraints/Valid","path":"Athena/Validator/Constraints/Valid.html","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/valid.cr","line_number":53,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L53"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Tells the validator that it should also validate objects embedded as properties on an object being validated.\n\n## Configuration\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nWithout this constraint, objects embedded in another object are not valided.\n\n```\nclass SubObjectOne\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter string : String = \"\"\nend\n\nclass SubObjectTwo\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter string : String = \"\"\nend\n\nclass MyObject\n  include AVD::Validatable\n\n  # This object is not validated when validating `MyObject`.\n  getter sub_object_one : SubObjectOne = SubObjectOne.new\n\n  # Have the validator also validate `SubObjectTwo` when validating `MyObject`.\n  @[Assert::Valid]\n  getter sub_object_two : SubObjectTwo = SubObjectTwo.new\nend\n```","summary":"<p>Tells the validator that it should also validate objects embedded as properties on an object being validated.</p>","class_methods":[],"constructors":[{"id":"new(traverse:Bool=true,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(traverse:Bool=true,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"traverse","doc":null,"default_value":"true","external_name":"traverse","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(traverse : Bool = <span class=\"n\">true</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L56","def":{"name":"new","args":[{"name":"traverse","doc":null,"default_value":"true","external_name":"traverse","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(traverse, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"traverse?:Bool-instance-method","html_id":"traverse?:Bool-instance-method","name":"traverse?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L54","def":{"name":"traverse?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@traverse"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L53","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Constraints/Valid/Validator","path":"Athena/Validator/Constraints/Valid/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Valid::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraints/valid.cr","line_number":64,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L64"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Constraints/Valid","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Valid):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Valid):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Valid"}],"args_string":"(value : _, constraint : AVD::Constraints::Valid) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraints/valid.cr#L66","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Valid"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\n(self.context.validator.in_context(self.context)).validate(value, groups: self.context.group)\n"}}],"macros":[],"types":[]}]}]},{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","path":"Athena/Validator/ConstraintValidator.html","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator","abstract":true,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraint_validator.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"}],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Constraints/All/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::All::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/AtLeastOneOf/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::AtLeastOneOf::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Blank/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Blank::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Callback/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Choice/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Choice::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Compound/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Compound::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Email/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Email::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/IP/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IP::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISBN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISBN::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsFalse/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsFalse::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISIN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISIN::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsNil/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsNil::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/ISSN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISSN::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/IsTrue/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsTrue::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Luhn/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Luhn::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotBlank/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotBlank::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/NotNil/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotNil::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Range/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Range::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Regex/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Regex::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Sequentially/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Sequentially::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Size/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Size::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Unique/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Unique::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/URL/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::URL::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/Constraints/Valid/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Valid::Validator","name":"Validator"},{"html_id":"athena-validator/Athena/Validator/ServiceConstraintValidator","kind":"struct","full_name":"Athena::Validator::ServiceConstraintValidator","name":"ServiceConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/Spec/FailingConstraint/Validator","kind":"struct","full_name":"Athena::Validator::Spec::FailingConstraint::Validator","name":"Validator"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ConstraintValidatorInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":"Returns the a reference to the `AVD::ExecutionContextInterface`\nto which violations within `self` should be added.\n\nSee the type for more information.","summary":"<p>Returns the a reference to the <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> to which violations within <code>self</code> should be added.</p>","abstract":false,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L8","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":"@context.not_nil!"}},{"id":"raise_invalid_type(value:_,supported_types:String):NoReturn-instance-method","html_id":"raise_invalid_type(value:_,supported_types:String):NoReturn-instance-method","name":"raise_invalid_type","doc":"Can be used to raise an `AVD::Exceptions::UnexpectedValueError`\nin case `self` is only able to validate values of the *supported_types*.\n\n```\n# Define a validate method to catch values of other types.\n# Overloads above would handle the valid types.\ndef validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n  self.raise_invalid_type value, \"Int | Float\"\nend\n```\n\nThis would result in a violation with the message `This value should be a valid: Int | Float`\nbeing added to the current `#context`.","summary":"<p>Can be used to raise an <code><a href=\"../../Athena/Validator/Exceptions/UnexpectedValueError.html\">AVD::Exceptions::UnexpectedValueError</a></code> in case <code>self</code> is only able to validate values of the <em>supported_types</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"args_string":"(value : _, supported_types : String) : NoReturn","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L33","def":{"name":"raise_invalid_type","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"raise(AVD::Exceptions::UnexpectedValueError.new(value, supported_types))"}},{"id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","name":"validate","doc":"Validate the provided *value* against the provided *constraint*.\n\nViolations should be added to the current `#context`.","summary":"<p>Validate the provided <em>value</em> against the provided <em>constraint</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(value : _, constraint : AVD::Constraint) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L16","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorFactory","path":"Athena/Validator/ConstraintValidatorFactory.html","kind":"struct","full_name":"Athena::Validator::ConstraintValidatorFactory","name":"ConstraintValidatorFactory","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorFactoryInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraint_validator_factory.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_factory.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorFactoryInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ConstraintValidatorFactoryInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ConstraintValidatorFactoryInterface.html\">AVD::ConstraintValidatorFactoryInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validator(validator_class:AVD::ServiceConstraintValidator.class):AVD::ConstraintValidator-instance-method","html_id":"validator(validator_class:AVD::ServiceConstraintValidator.class):AVD::ConstraintValidator-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidator` based on the provided *validator_class*.\n\nNOTE: This overloaded is intended to be used for service based validators that are already\ninstantiated and were provided via DI.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> based on the provided <em>validator_class</em>.</p>","abstract":false,"args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ServiceConstraintValidator.class"}],"args_string":"(validator_class : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ServiceConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidator","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_factory.cr#L22","def":{"name":"validator","args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ServiceConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator","visibility":"Public","body":"@validators[validator_class]"}},{"id":"validator(validator_class:AVD::ConstraintValidator.class):AVD::ConstraintValidator-instance-method","html_id":"validator(validator_class:AVD::ConstraintValidator.class):AVD::ConstraintValidator-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidator` based on the provided *validator_class*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> based on the provided <em>validator_class</em>.</p>","abstract":false,"args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ConstraintValidator.class"}],"args_string":"(validator_class : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidator","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_factory.cr#L27","def":{"name":"validator","args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator","visibility":"Public","body":"if validator = @validators[validator_class]?\n  return validator\nend\n@validators[validator_class] = validator_class.new\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorFactoryInterface","path":"Athena/Validator/ConstraintValidatorFactoryInterface.html","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/constraint_validator_factory_interface.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_factory_interface.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorFactory","kind":"struct","full_name":"Athena::Validator::ConstraintValidatorFactory","name":"ConstraintValidatorFactory"}],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Provides validator instances based on a validator class, caching the instance.\n\n`AVD::ServiceConstraintValidator`s are instantiated externally and injected into the factory.","summary":"<p>Provides validator instances based on a validator class, caching the instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validator(validator:AVD::ConstraintValidator.class):AVD::ConstraintValidatorInterface-instance-method","html_id":"validator(validator:AVD::ConstraintValidator.class):AVD::ConstraintValidatorInterface-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidatorInterface` instance based on the provided *validator_class*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> instance based on the provided <em>validator_class</em>.</p>","abstract":true,"args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::ConstraintValidator.class"}],"args_string":"(validator : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_factory_interface.cr#L6","def":{"name":"validator","args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::ConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","path":"Athena/Validator/ConstraintValidatorInterface.html","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/constraint_validator_interface.cr","line_number":58,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_interface.cr#L58"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"}],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"A constraint validator is responsible for implementing the actual validation logic for a given `AVD::Constraint`.\n\nConstraint validators should inherit from this type and implement a `#validate` method.\nMost commonly the validator type will be defined within the namespace of the related `AVD::Constraint` itself.\n\nThe `#validate` method itself does not return anything.\nViolations are added to the current `#context`, either as a single error message, or augmented with additional metadata about the failure.\nSee `AVD::ExecutionContextInterface` for more information on how violations can be added.\n\n### Example\n\n```\nclass AVD::Constraints::MyConstraint < AVD::Constraint\n  # Initializer/etc for the constraint\n\n  struct Validator < AVD::ConstraintValidator\n    # Define a validate method that handles values of any type, and our `MyConstraint` constraint.\n    def validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n      # Implement logic to determine if the value is valid.\n      # Violations should be added to the current `#context`,\n      # See `AVD::ExecutionContextInterface` for more information.\n    end\n  end\nend\n```\n\nOverloads of the `#validate` method can also be used to handle validating values of different types independently.\nIf the value cannot be handled by any of `self`'s validators, it is handled via `AVD::ConstraintValidator#validate`\nand is essentially a noop.\n\nIf a `AVD::Constraint` can only support values of certain types, `AVD::ConstraintValidator#raise_invalid_type`\nin a catchall overload can be used to add an invalid type `AVD::Violation::ConstraintViolationInterface`.\n\n```\nstruct Validator < AVD::ConstraintValidator\n  def validate(value : Number, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Handle validating `Number` values\n  end\n\n  def validate(value : Time, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Handle validating `Time` values\n  end\n\n  def validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Add an invalid type violation for values of all other types.\n    self.raise_invalid_type value, \"Number | Time\"\n  end\nend\n```\n\nNOTE:  Normally custom validators should not handle `nil` or `blank` values as they are handled via other constraints.\n\n### Service Based Validators\n\nIf you're using `Athena::Validator` within the Athena ecosystem,\nconstraint validators can also be defined as services if they require external dependencies.\nSee `AVD::ServiceConstraintValidator` and `Athena::Routing` validator extension documentation for more information.","summary":"<p>A constraint validator is responsible for implementing the actual validation logic for a given <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":"Returns the a reference to the `AVD::ExecutionContextInterface`\nto which violations within `self` should be added.\n\nSee the type for more information.","summary":"<p>Returns the a reference to the <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> to which violations within <code>self</code> should be added.</p>","abstract":true,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_interface.cr#L68","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","name":"validate","doc":"Validate the provided *value* against the provided *constraint*.\n\nViolations should be added to the current `#context`.","summary":"<p>Validate the provided <em>value</em> against the provided <em>constraint</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(value : _, constraint : AVD::Constraint) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator_interface.cr#L62","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Exceptions","path":"Athena/Validator/Exceptions.html","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":399,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L399"},{"filename":"src/exceptions/validator_error.cr","line_number":3,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/exceptions/validator_error.cr#L3"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains all custom exceptions defined within `Athena::Validator`.","summary":"<p>Contains all custom exceptions defined within <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Exceptions/UnexpectedValueError","path":"Athena/Validator/Exceptions/UnexpectedValueError.html","kind":"class","full_name":"Athena::Validator::Exceptions::UnexpectedValueError","name":"UnexpectedValueError","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Exceptions/ValidatorError","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Exceptions/ValidatorError","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError"},{"html_id":"athena-validator/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/unexpected_value_error.cr","line_number":6,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/exceptions/unexpected_value_error.cr#L6"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Exceptions","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions"},"doc":"Raised when an `AVD::ConstraintValidatorInterface` is unable to validate a value of an unsupported type.\n\nSee `AVD::ConstraintValidator#raise_invalid_type`.","summary":"<p>Raised when an <code><a href=\"../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> is unable to validate a value of an unsupported type.</p>","class_methods":[],"constructors":[{"id":"new(value:_,supported_types:String)-class-method","html_id":"new(value:_,supported_types:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"args_string":"(value : _, supported_types : String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/exceptions/unexpected_value_error.cr#L10","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, supported_types)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"supported_types:String-instance-method","html_id":"supported_types:String-instance-method","name":"supported_types","doc":"A string representing a union of the supported_type(s).","summary":"<p>A string representing a union of the supported_type(s).</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/exceptions/unexpected_value_error.cr#L8","def":{"name":"supported_types","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@supported_types"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Exceptions/ValidatorError","path":"Athena/Validator/Exceptions/ValidatorError.html","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError","abstract":false,"superclass":{"html_id":"athena-validator/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"athena-validator/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/validator_error.cr","line_number":3,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/exceptions/validator_error.cr#L3"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Exceptions/UnexpectedValueError","kind":"class","full_name":"Athena::Validator::Exceptions::UnexpectedValueError","name":"UnexpectedValueError"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Exceptions","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions"},"doc":"Base type of all `Athena::Validator` errors.\nCan be used to rescue any exception originating from `Athena::Validator`.","summary":"<p>Base type of all <code><a href=\"../../../Athena/Validator.html\">Athena::Validator</a></code> errors.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/ExecutionContext","path":"Athena/Validator/ExecutionContext.html","kind":"class","full_name":"Athena::Validator::ExecutionContext(Root)","name":"ExecutionContext","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ExecutionContextInterface","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/execution_context.cr","line_number":5,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L5"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/ExecutionContextInterface","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ExecutionContextInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(validator:AVD::Validator::ValidatorInterface,root:Root)-class-method","html_id":"new(validator:AVD::Validator::ValidatorInterface,root:Root)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"}],"args_string":"(validator : AVD::Validator::ValidatorInterface, root : Root)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L35","def":{"name":"new","args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ExecutionContext(Root).allocate\n_.initialize(validator, root)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","html_id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and optionally *parameters* based on the node currently being validated.","summary":"<p>Adds a violation with the provided <em>message</em>, and optionally <em>parameters</em> based on the node currently being validated.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L87","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, parameters)).add"}},{"id":"add_violation(message:String,code:String):Nil-instance-method","html_id":"add_violation(message:String,code:String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message* and *code*","summary":"<p>Adds a violation with the provided <em>message</em> and <em>code</em></p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L77","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code)).add"}},{"id":"add_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"add_violation(message:String,code:String,value:_):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and *code*, *value* parameter.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Adds a violation with the provided <em>message</em>, and <em>code</em>, <em>value</em> parameter.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L82","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code, value)).add"}},{"id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*.\n\nCan be used to add additional information to the `AVD::Violation::ConstraintViolationInterface` being adding it to `self`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L102","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"AVD::Violation::ConstraintViolationBuilder.new(@violations, @constraint, message, parameters, @root, @property_path, @value_container)"}},{"id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L92","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"(self.build_violation(message)).code(code)"}},{"id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*, and *value*.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>, and <em>value</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L97","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"((self.build_violation(message)).code(code)).add_parameter(\"{{ value }}\", value)"}},{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":"Returns the class that is currently being validated.","summary":"<p>Returns the class that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L54","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@metadata.try(&.class_name)"}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` that is currently being validated, if any.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> that is currently being validated, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L9","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":"@constraint"}},{"id":"group:String?-instance-method","html_id":"group:String?-instance-method","name":"group","doc":"Returns the group that is currently being validated, if any.","summary":"<p>Returns the group that is currently being validated, if any.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L12","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@group"}},{"id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","html_id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::MetadataInterface` object for the value currently being validated.\n\nThis would be an `AVD::Metadata::PropertyMetadataInterface` if the current value is an object,\nan `AVD::Metadata::GenericMetadata` if the current value is a plain value, and an\n`AVD::Metadata::ClassMetadata` if the current value value is an entire class.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Metadata/MetadataInterface.html\">AVD::Metadata::MetadataInterface</a></code> object for the value currently being validated.</p>","abstract":false,"args":[],"args_string":" : AVD::Metadata::MetadataInterface?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L24","def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::MetadataInterface | ::Nil","visibility":"Public","body":"@metadata"}},{"id":"object-instance-method","html_id":"object-instance-method","name":"object","doc":"Returns the object that is currently being validated.","summary":"<p>Returns the object that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L49","def":{"name":"object","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@object_container.value"}},{"id":"object_container:AVD::Container-instance-method","html_id":"object_container:AVD::Container-instance-method","name":"object_container","doc":"The object that is currently being validated.","summary":"<p>The object that is currently being validated.</p>","abstract":false,"args":[],"args_string":" : AVD::Container","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L33","def":{"name":"object_container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Container","visibility":"Public","body":"@object_container"}},{"id":"property_name:String?-instance-method","html_id":"property_name:String?-instance-method","name":"property_name","doc":"Returns the property name of the node currently being validated.","summary":"<p>Returns the property name of the node currently being validated.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L59","def":{"name":"property_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@metadata.try(&.name)"}},{"id":"property_path(path:String=&quot;&quot;):String-instance-method","html_id":"property_path(path:String=&quot;&quot;):String-instance-method","name":"property_path","doc":"Returns the path to the property that is currently being validated.\n\nFor example, given a `Person` object that has an `Address` property;\nthe property path would be empty initially.  When the `address` property\nis being validated the *property_path* would be `address`.\nWhen the street property of the related `Address` object is being validated\nthe *property_path* would be `address.street`.\n\nThis also works for collections of objects.  If the `Person` object had multiple\naddresses, the property path when validating the first street of the first address\nwould be `addresses[0].street`.","summary":"<p>Returns the path to the property that is currently being validated.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":"String"}],"args_string":"(path : String = <span class=\"s\">&quot;&quot;</span>) : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L64","def":{"name":"property_path","args":[{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"AVD::PropertyPath.append(@property_path, path)"}},{"id":"root:Root-instance-method","html_id":"root:Root-instance-method","name":"root","doc":"Returns the object initially passed to `AVD::Validator::ValidatorInterface#validate`.","summary":"<p>Returns the object initially passed to <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html#validate(value:_,constraints:Array(AVD::Constraint)%7CAVD::Constraint%7CNil=nil,groups:Array(String)%7CString%7CAVD::Constraints::GroupSequence%7CNil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method\">AVD::Validator::ValidatorInterface#validate</a></code>.</p>","abstract":false,"args":[],"args_string":" : Root","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L30","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Root","visibility":"Public","body":"@root"}},{"id":"validator:AVD::Validator::ValidatorInterface-instance-method","html_id":"validator:AVD::Validator::ValidatorInterface-instance-method","name":"validator","doc":"Returns a reference to an `AVD::Validator::ValidatorInterface` that can be used to validate\nadditional constraints as part of another constraint.","summary":"<p>Returns a reference to an <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code> that can be used to validate additional constraints as part of another constraint.</p>","abstract":false,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L15","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":"@validator"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":"Returns the value that is currently being validated.","summary":"<p>Returns the value that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L44","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value_container.value"}},{"id":"violations:AVD::Violation::ConstraintViolationList-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationList-instance-method","name":"violations","doc":"Returns the `AVD::Violation::ConstraintViolationInterface` instances generated by the validator thus far.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> instances generated by the validator thus far.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationList","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context.cr#L18","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationList","visibility":"Public","body":"@violations"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/ExecutionContextInterface","path":"Athena/Validator/ExecutionContextInterface.html","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/execution_context_interface.cr","line_number":20,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L20"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/ExecutionContext","kind":"class","full_name":"Athena::Validator::ExecutionContext(Root)","name":"ExecutionContext"}],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Stores contextual data related to the current validation run.\n\nThis includes the violations generated so far, the current constraint, value being validated, etc.\n\n### Adding Violations\n\nAs mentioned in the `AVD::ConstraintValidatorInterface` documentation,\nviolations are not returned from the `AVD::ConstraintValidatorInterface#validate` method.\nInstead they are added to the `AVD::ConstraintValidatorInterface#context` instance.\n\nThe simplest way to do so is via the `#add_violation` method, which accepts the violation message,\nand any parameters that should be used to render the message.\nAdditional overloads exist to make adding a value with a specific message, and code, or message, code, and `{{ value }}` placeholder value easier.\n\n#### Building violations\n\nIn some cases you may wish to add additional data to the `AVD::Violation::ConstraintViolationInterface` before adding it to `self`.\nTo do this, you can also use the `#build_violation` method, which returns an `AVD::Violation::ConstraintViolationBuilderInterface`\nthat can be used to construct a violation, with an easier API.","summary":"<p>Stores contextual data related to the current validation run.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"add_violation(message:String,code:String,value:_):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and *code*, *value* parameter.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Adds a violation with the provided <em>message</em>, and <em>code</em>, <em>value</em> parameter.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L30","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","html_id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and optionally *parameters* based on the node currently being validated.","summary":"<p>Adds a violation with the provided <em>message</em>, and optionally <em>parameters</em> based on the node currently being validated.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L22","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_violation(message:String,code:String):Nil-instance-method","html_id":"add_violation(message:String,code:String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message* and *code*","summary":"<p>Adds a violation with the provided <em>message</em> and <em>code</em></p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L25","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*, and *value*.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>, and <em>value</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L43","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*.\n\nCan be used to add additional information to the `AVD::Violation::ConstraintViolationInterface` being adding it to `self`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L35","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L38","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":"Returns the class that is currently being validated.","summary":"<p>Returns the class that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L46","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` that is currently being validated, if any.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> that is currently being validated, if any.</p>","abstract":true,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L49","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":""}},{"id":"group:String?-instance-method","html_id":"group:String?-instance-method","name":"group","doc":"Returns the group that is currently being validated, if any.","summary":"<p>Returns the group that is currently being validated, if any.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L52","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","html_id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::MetadataInterface` object for the value currently being validated.\n\nThis would be an `AVD::Metadata::PropertyMetadataInterface` if the current value is an object,\nan `AVD::Metadata::GenericMetadata` if the current value is a plain value, and an\n`AVD::Metadata::ClassMetadata` if the current value value is an entire class.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Metadata/MetadataInterface.html\">AVD::Metadata::MetadataInterface</a></code> object for the value currently being validated.</p>","abstract":true,"args":[],"args_string":" : AVD::Metadata::MetadataInterface?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L59","def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::MetadataInterface | ::Nil","visibility":"Public","body":""}},{"id":"object-instance-method","html_id":"object-instance-method","name":"object","doc":"Returns the object that is currently being validated.","summary":"<p>Returns the object that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L62","def":{"name":"object","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"property_name:String?-instance-method","html_id":"property_name:String?-instance-method","name":"property_name","doc":"Returns the property name of the node currently being validated.","summary":"<p>Returns the property name of the node currently being validated.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L65","def":{"name":"property_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path to the property that is currently being validated.\n\nFor example, given a `Person` object that has an `Address` property;\nthe property path would be empty initially.  When the `address` property\nis being validated the *property_path* would be `address`.\nWhen the street property of the related `Address` object is being validated\nthe *property_path* would be `address.street`.\n\nThis also works for collections of objects.  If the `Person` object had multiple\naddresses, the property path when validating the first street of the first address\nwould be `addresses[0].street`.","summary":"<p>Returns the path to the property that is currently being validated.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L78","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"root-instance-method","html_id":"root-instance-method","name":"root","doc":"Returns the object initially passed to `AVD::Validator::ValidatorInterface#validate`.","summary":"<p>Returns the object initially passed to <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html#validate(value:_,constraints:Array(AVD::Constraint)%7CAVD::Constraint%7CNil=nil,groups:Array(String)%7CString%7CAVD::Constraints::GroupSequence%7CNil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method\">AVD::Validator::ValidatorInterface#validate</a></code>.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L81","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"validator:AVD::Validator::ValidatorInterface-instance-method","html_id":"validator:AVD::Validator::ValidatorInterface-instance-method","name":"validator","doc":"Returns a reference to an `AVD::Validator::ValidatorInterface` that can be used to validate\nadditional constraints as part of another constraint.","summary":"<p>Returns a reference to an <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code> that can be used to validate additional constraints as part of another constraint.</p>","abstract":true,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L85","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":""}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":"Returns the value that is currently being validated.","summary":"<p>Returns the value that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L88","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns the `AVD::Violation::ConstraintViolationInterface` instances generated by the validator thus far.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> instances generated by the validator thus far.</p>","abstract":true,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/execution_context_interface.cr#L91","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata","path":"Athena/Validator/Metadata.html","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":406,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L406"},{"filename":"src/metadata/cascading_strategy.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/cascading_strategy.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types used to store metadata associated with a given `AVD::Validatable` instance.\n\nMost likely you won't have to work any of these directly.\nHowever if you are adding constraints manually to properties using the `self.load_metadata` method,\nyou should be familiar with `AVD::Metadata::ClassMetadata`.","summary":"<p>Contains types used to store metadata associated with a given <code><a href=\"../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Metadata/CascadingStrategy","path":"Athena/Validator/Metadata/CascadingStrategy.html","kind":"enum","full_name":"Athena::Validator::Metadata::CascadingStrategy","name":"CascadingStrategy","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena-validator/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metadata/cascading_strategy.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/cascading_strategy.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"None","name":"None","value":"0","doc":null,"summary":null},{"id":"Cascade","name":"Cascade","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Determines whether an object should be cascaded.\n\nIf cascading is enabled, the validator will also validate embeded objects.","summary":"<p>Determines whether an object should be cascaded.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cascade?-instance-method","html_id":"cascade?-instance-method","name":"cascade?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/cascading_strategy.cr#L6","def":{"name":"cascade?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cascade"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/cascading_strategy.cr#L5","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/ClassMetadata","path":"Athena/Validator/Metadata/ClassMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::ClassMetadata(T)","name":"ClassMetadata","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metadata/class_metadata.cr","line_number":8,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L8"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Represents metadata associated with an `AVD::Validatable` instance.\n\n`self` is lazily initialized and cached at the class level.\n\nIncludes metadata about the class; such as its name, constraints, etc.","summary":"<p>Represents metadata associated with an <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> instance.</p>","class_methods":[],"constructors":[{"id":"build:self-class-method","html_id":"build:self-class-method","name":"build","doc":"Builds `self`, auto registering any annotation based annotations on `T`,\nas well as those registered via `T.load_metadata`.","summary":"<p>Builds <code>self</code>, auto registering any annotation based annotations on <code>T</code>, as well as those registered via <code>T.load_metadata</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L13","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"class_metadata = new\n{% if true %}\n      # Add property constraints\n      {% for ivar, idx in T.instance_vars %}\n        {% for constraint in AVD::Constraint.all_subclasses.reject(&.abstract?) %}\n          {% ann_name = (constraint.name(generic_args: false).split(\"::\")).last.id %}\n\n          {% if ann = ivar.annotation((Assert.constant(ann_name)).resolve) %}\n            {% default_arg = ann.args.empty? ? nil : ann.args.first %}\n\n            {% if default_arg.is_a?(ArrayLiteral) %}\n              {% default_arg = default_arg.map do |arg|\n  if arg.is_a?(Annotation)\n    arg_name = (((arg.stringify.gsub(/@\\[/, \"\")).gsub(/\\(.*/, \"\")).split(\"::\")).last.gsub(/\\]/, \"\")\n    inner_default_arg = arg.args.empty? ? nil : arg.args.first\n    inner_default_arg = if inner_default_arg.is_a?(ArrayLiteral)\n      inner_default_arg.map do |inner_arg|\n        if inner_arg.is_a?(Annotation)\n          inner_arg_name = (((inner_arg.stringify.gsub(/@\\[/, \"\")).gsub(/\\(.*/, \"\")).split(\"::\")).last.gsub(/\\]/, \"\")\n          inner_inner_default_arg = inner_arg.args.empty? ? nil : inner_arg.args.first\n          \"AVD::Constraints::#{inner_arg_name.id}.new(#{inner_inner_default_arg ? \"#{inner_inner_default_arg},\".id : \"\".id}#{inner_arg.named_args.double_splat})\".id\n        else\n          inner_arg\n        end\n      end\n    else\n      inner_default_arg\n    end\n    if (arg_name == \"All\") || (arg_name == \"AtLeastOneOf\")\n      inner_default_arg = \"#{inner_default_arg} of AVD::Constraint\".id\n    end\n    \"AVD::Constraints::#{arg_name.id}.new(#{inner_default_arg ? \"#{inner_default_arg},\".id : \"\".id}#{arg.named_args.double_splat})\".id\n  else\n    arg\n  end\nend %}\n            {% end %}\n\n            class_metadata.add_property_constraint(\n              AVD::Metadata::PropertyMetadata(T, {{ idx }}).new({{ ivar.name.stringify }}),\n              {{ constraint.name(generic_args: false).id }}.new(\n                {{ default_arg ? \"#{default_arg},\".id : \"\".id }} # Default argument\n                {{ ann.named_args.double_splat }}\n              )\n            )\n          {% end %}\n        {% end %}\n      {% end %}\n\n      # Add getter constraints\n      {% for m, idx in T.methods %}\n        {% for constraint in AVD::Constraint.all_subclasses.reject(&.abstract?) %}\n          {% ann_name = (constraint.name(generic_args: false).split(\"::\")).last.id %}\n\n          {% if ann = m.annotation((Assert.constant(ann_name)).resolve) %}\n            {% default_arg = ann.args.empty? ? nil : ann.args.first %}\n\n            class_metadata.add_getter_constraint(\n              AVD::Metadata::GetterMetadata(T, {{ idx }}).new({{ m.name.stringify }}),\n              {{ constraint.name(generic_args: false).id }}.new(\n                {{ default_arg ? \"#{default_arg},\".id : \"\".id }} # Default argument\n                {{ ann.named_args.double_splat }}\n              )\n            )\n          {% end %}\n        {% end %}\n      {% end %}\n\n      # Add callback constraints\n      {% for callback in T.methods.select(&.annotation(Assert::Callback)) %}\n        class_metadata.add_constraint AVD::Constraints::Callback.new(callback_name: {{ callback.name.stringify }}, {{ (callback.annotation(Assert::Callback)).named_args.double_splat }})\n      {% end %}\n\n      {% for callback in T.class.methods.select(&.annotation(Assert::Callback)) %}\n        class_metadata.add_constraint AVD::Constraints::Callback.new(callback: ->T.{{ callback.name.id }}(AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String)?), {{ (callback.annotation(Assert::Callback)).named_args.double_splat }})\n      {% end %}\n    {% end %}\n{% if T.class.has_method?(:load_metadata) %}\n      T.load_metadata class_metadata\n    {% end %}\n{% if group_sequence = T.annotation(Assert::GroupSequence) %}\n      class_metadata.group_sequence = [{{ group_sequence.args.splat }}]\n    {% end %}\nclass_metadata\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L126","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClassMetadata(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_constraint(constraints:Array(AVD::Constraint)):self-instance-method","html_id":"add_constraint(constraints:Array(AVD::Constraint)):self-instance-method","name":"add_constraint","doc":"Adds each of the provided *constraints* to `self`.","summary":"<p>Adds each of the provided <em>constraints</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(constraints : Array(AVD::Constraint)) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L135","def":{"name":"add_constraint","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraints.each do |constraint|\n  self.add_constraint(constraint)\nend\nself\n"}},{"id":"add_constraint(constraint:AVD::Constraint):self-instance-method","html_id":"add_constraint(constraint:AVD::Constraint):self-instance-method","name":"add_constraint","doc":"Adds the provided *constraint* to `self`'s `#constraints` array.\n\nSets `#cascading_strategy` to `AVD::Metadata::CascadingStrategy::Cascade` if the *constraint* is `AVD::Constraints::Valid`.\n\nAlso adds the `#class_name` based group via `AVD::Constraint#add_implicit_group`.","summary":"<p>Adds the provided <em>constraint</em> to <code>self</code>'s <code>#constraints</code> array.</p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L146","def":{"name":"add_constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraint.add_implicit_group(@default_group)\nsuper(constraint)\nself\n"}},{"id":"add_getter_constraint(method_name:String,constraint:AVD::Constraint):self-instance-method","html_id":"add_getter_constraint(method_name:String,constraint:AVD::Constraint):self-instance-method","name":"add_getter_constraint","doc":"Adds the provided *constraint* to the provided *method_name*.","summary":"<p>Adds the provided <em>constraint</em> to the provided <em>method_name</em>.</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(method_name : String, constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L155","def":{"name":"add_getter_constraint","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.add_getter_constraint(AVD::Metadata::GetterMetadata(T, Nil).new(method_name), constraint)"}},{"id":"add_property_constraint(property_name:String,constraints:Array(AVD::Constraint)):self-instance-method","html_id":"add_property_constraint(property_name:String,constraints:Array(AVD::Constraint)):self-instance-method","name":"add_property_constraint","doc":"Adds each of the provided *constraints* to the provided *property_name*.","summary":"<p>Adds each of the provided <em>constraints</em> to the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(property_name : String, constraints : Array(AVD::Constraint)) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L170","def":{"name":"add_property_constraint","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraints.each do |constraint|\n  self.add_property_constraint(property_name, constraint)\nend\nself\n"}},{"id":"add_property_constraint(property_name:String,constraint:AVD::Constraint):self-instance-method","html_id":"add_property_constraint(property_name:String,constraint:AVD::Constraint):self-instance-method","name":"add_property_constraint","doc":"Adds the provided *constraint* to the provided *property_name*.","summary":"<p>Adds the provided <em>constraint</em> to the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(property_name : String, constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L179","def":{"name":"add_property_constraint","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.add_property_constraint(AVD::Metadata::PropertyMetadata(T, Nil).new(property_name), constraint)"}},{"id":"add_property_constraints(property_hash:Hash(String,AVD::Constraint|Array(AVD::Constraint))):self-instance-method","html_id":"add_property_constraints(property_hash:Hash(String,AVD::Constraint|Array(AVD::Constraint))):self-instance-method","name":"add_property_constraints","doc":"Adds a hash of constraints to `self`, where the keys represent the property names, and the value\nis the constraint/array of constraints to add.","summary":"<p>Adds a hash of constraints to <code>self</code>, where the keys represent the property names, and the value is the constraint/array of constraints to add.</p>","abstract":false,"args":[{"name":"property_hash","doc":null,"default_value":"","external_name":"property_hash","restriction":"Hash(String, AVD::Constraint | Array(AVD::Constraint))"}],"args_string":"(property_hash : Hash(String, AVD::Constraint | Array(AVD::Constraint))) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L161","def":{"name":"add_property_constraints","args":[{"name":"property_hash","doc":null,"default_value":"","external_name":"property_hash","restriction":"Hash(String, AVD::Constraint | Array(AVD::Constraint))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"property_hash.each do |property_name, constraints|\n  self.add_property_constraint(property_name, constraints)\nend\nself\n"}},{"id":"class_name:T.class-instance-method","html_id":"class_name:T.class-instance-method","name":"class_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L130","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"T"}},{"id":"constrained_properties:Array(String)-instance-method","html_id":"constrained_properties:Array(String)-instance-method","name":"constrained_properties","doc":"Returns an array of the properties who `self` has constraints defined for.","summary":"<p>Returns an array of the properties who <code>self</code> has constraints defined for.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L184","def":{"name":"constrained_properties","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@members.keys"}},{"id":"default_group:String-instance-method","html_id":"default_group:String-instance-method","name":"default_group","doc":"The `#class_name` based group for `self`.","summary":"<p>The <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html#class_name:T.class-instance-method\">#class_name</a></code> based group for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L117","def":{"name":"default_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@default_group"}},{"id":"group_sequence:AVD::Constraints::GroupSequence?-instance-method","html_id":"group_sequence:AVD::Constraints::GroupSequence?-instance-method","name":"group_sequence","doc":"The `AVD::Constraints::GroupSequence` used by `self`, if any.","summary":"<p>The <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> used by <code>self</code>, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraints::GroupSequence?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L120","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::GroupSequence | ::Nil","visibility":"Public","body":"@group_sequence"}},{"id":"group_sequence=(sequence:Array(String)|AVD::Constraints::GroupSequence):self-instance-method","html_id":"group_sequence=(sequence:Array(String)|AVD::Constraints::GroupSequence):self-instance-method","name":"group_sequence=","doc":"Sets the `AVD::Constraints::GroupSequence` that should be used for `self`.\n\nRaises an `ArgumentError` if `self` is an `AVD::Constraints::GroupSequence::Provider`,\nthe *sequence* contains `AVD::Constraint::DEFAULT_GROUP`,\nor the `#class_name` based group is missing.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> that should be used for <code>self</code>.</p>","abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String) | AVD::Constraints::GroupSequence"}],"args_string":"(sequence : Array(String) | AVD::Constraints::GroupSequence) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L193","def":{"name":"group_sequence=","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String) | AVD::Constraints::GroupSequence"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if @group_sequence_provider\n  raise(ArgumentError.new(\"Defining a static group sequence is not allowed with a group sequence provider.\"))\nend\nif sequence.is_a?(Array)\n  sequence = AVD::Constraints::GroupSequence.new(sequence)\nend\nif sequence.groups.includes?(AVD::Constraint::DEFAULT_GROUP)\n  raise(ArgumentError.new(\"The group '#{AVD::Constraint::DEFAULT_GROUP}' is not allowed in group sequences.\"))\nend\nif sequence.groups.includes?(@default_group)\nelse\n  raise(ArgumentError.new(\"The group '#{@default_group}' is missing from the group sequence.\"))\nend\n@group_sequence = sequence\nself\n"}},{"id":"group_sequence_provider=(active:Bool):Nil-instance-method","html_id":"group_sequence_provider=(active:Bool):Nil-instance-method","name":"group_sequence_provider=","doc":"Denotes `self` as a `AVD::Constraints::GroupSequence::Provider`.","summary":"<p>Denotes <code>self</code> as a <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence/Provider.html\">AVD::Constraints::GroupSequence::Provider</a></code>.</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L214","def":{"name":"group_sequence_provider=","args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @group_sequence.nil?\nelse\n  raise(ArgumentError.new(\"Defining a group sequence provider is not allowed with a static group sequence.\"))\nend\n@group_sequence_provider = active\n"}},{"id":"has_property_metadata?(property_name:String):Bool-instance-method","html_id":"has_property_metadata?(property_name:String):Bool-instance-method","name":"has_property_metadata?","doc":"Returns `true` if `self` has property metadata for the provided *property_name*.","summary":"<p>Returns <code>true</code> if <code>self</code> has property metadata for the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"args_string":"(property_name : String) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L221","def":{"name":"has_property_metadata?","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@members.has_key?(property_name)"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L230","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"nil"}},{"id":"property_metadata(property_name:String):Array(AVD::Metadata::PropertyMetadataInterface)-instance-method","html_id":"property_metadata(property_name:String):Array(AVD::Metadata::PropertyMetadataInterface)-instance-method","name":"property_metadata","doc":"Returns an `AVD::Metadata::PropertyMetadataInterface` instance for the provided *property_name*, if any.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/PropertyMetadataInterface.html\">AVD::Metadata::PropertyMetadataInterface</a></code> instance for the provided <em>property_name</em>, if any.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"args_string":"(property_name : String) : Array(AVD::Metadata::PropertyMetadataInterface)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/class_metadata.cr#L226","def":{"name":"property_metadata","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Metadata::PropertyMetadataInterface)","visibility":"Public","body":"@members.fetch(property_name) do\n  [] of AVD::Metadata::PropertyMetadataInterface\nend"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","path":"Athena/Validator/Metadata/GenericMetadata.html","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"locations":[{"filename":"src/metadata/generic_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L3"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Metadata/ClassMetadata","kind":"class","full_name":"Athena::Validator::Metadata::ClassMetadata(T)","name":"ClassMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/GetterMetadata","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadata","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_constraint(constraint:AVD::Constraint):AVD::Metadata::GenericMetadata-instance-method","html_id":"add_constraint(constraint:AVD::Constraint):AVD::Metadata::GenericMetadata-instance-method","name":"add_constraint","doc":"Adds the provided *constraint* to `self`'s `#constraints` array.\n\nSets `#cascading_strategy` to `AVD::Metadata::CascadingStrategy::Cascade` if the *constraint* is `AVD::Constraints::Valid`.","summary":"<p>Adds the provided <em>constraint</em> to <code>self</code>'s <code><a href=\"../../../Athena/Validator/Metadata/GenericMetadata.html#constraints:Array(AVD::Constraint)-instance-method\">#constraints</a></code> array.</p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(constraint : AVD::Constraint) : AVD::Metadata::GenericMetadata","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L16","def":{"name":"add_constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::GenericMetadata","visibility":"Public","body":"if constraint.is_a?(AVD::Constraints::Valid)\n  @cascading_strategy = :cascade\n  return self\nend\n@constraints << constraint\nconstraint.groups.each do |group|\n  ((  __temp_29 = group\n  @constraints_by_group[__temp_29]? || (@constraints_by_group[__temp_29] = Array(AVD::Constraint).new))) << constraint\nend\nself\n"}},{"id":"add_constraints(constraints:Array(AVD::Constraint)):AVD::Metadata::GenericMetadata-instance-method","html_id":"add_constraints(constraints:Array(AVD::Constraint)):AVD::Metadata::GenericMetadata-instance-method","name":"add_constraints","doc":"Adds each of the provided *constraints* to `self`.","summary":"<p>Adds each of the provided <em>constraints</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(constraints : Array(AVD::Constraint)) : AVD::Metadata::GenericMetadata","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L33","def":{"name":"add_constraints","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::GenericMetadata","visibility":"Public","body":"constraints.each(&->add_constraint(AVD::Constraint))\nself\n"}},{"id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","html_id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","name":"cascading_strategy","doc":"Returns the `AVD::Metadata::CascadingStrategy` for `self`.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Metadata/CascadingStrategy.html\">AVD::Metadata::CascadingStrategy</a></code> for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Metadata::CascadingStrategy","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L11","def":{"name":"cascading_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::CascadingStrategy","visibility":"Public","body":"@cascading_strategy"}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L8","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints"}},{"id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","html_id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","name":"find_constraints","doc":"Returns an array of all constraints in the provided *group*.","summary":"<p>Returns an array of all constraints in the provided <em>group</em>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/generic_metadata.cr#L40","def":{"name":"find_constraints","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints_by_group[group]? || Array(AVD::Constraint).new"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/GetterMetadata","path":"Athena/Validator/Metadata/GetterMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metadata/getter_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/getter_metadata.cr#L3"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/getter_metadata.cr#L10","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GetterMetadata(EntityType, MethodIdx).allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name:EntityType.class-instance-method","html_id":"class_name:EntityType.class-instance-method","name":"class_name","doc":"Returns the class the method `self` represents, belongs to.","summary":"<p>Returns the class the method <code>self</code> represents, belongs to.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">EntityType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/getter_metadata.cr#L13","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EntityType.class","visibility":"Public","body":"EntityType"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/getter_metadata.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactory","path":"Athena/Validator/Metadata/MetadataFactory.html","kind":"class","full_name":"Athena::Validator::Metadata::MetadataFactory","name":"MetadataFactory","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metadata/metadata_factory.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_factory.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Basic implementation of `AVD::Metadata::MetadataFactoryInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Metadata/MetadataFactoryInterface.html\">AVD::Metadata::MetadataFactoryInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_factory.cr#L7","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":"object.class.validation_class_metadata"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactoryInterface","path":"Athena/Validator/Metadata/MetadataFactoryInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/metadata/metadata_factory_interface.cr","line_number":1,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_factory_interface.cr#L1"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactory","kind":"class","full_name":"Athena::Validator::Metadata::MetadataFactory","name":"MetadataFactory"},{"html_id":"athena-validator/Athena/Validator/Spec/MockMetadataFactory","kind":"struct","full_name":"Athena::Validator::Spec::MockMetadataFactory(T1, T2, T3, T4, T5)","name":"MockMetadataFactory"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_factory_interface.cr#L3","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","path":"Athena/Validator/Metadata/MetadataInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/metadata/metadata_interface.cr","line_number":1,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_interface.cr#L1"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","html_id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","name":"cascading_strategy","doc":"Returns the `AVD::Metadata::CascadingStrategy` for `self`.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Metadata/CascadingStrategy.html\">AVD::Metadata::CascadingStrategy</a></code> for <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : AVD::Metadata::CascadingStrategy","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_interface.cr#L3","def":{"name":"cascading_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::CascadingStrategy","visibility":"Public","body":""}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_interface.cr#L5","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}},{"id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","html_id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","name":"find_constraints","doc":"Returns an array of all constraints in the provided *group*.","summary":"<p>Returns an array of all constraints in the provided <em>group</em>.</p>","abstract":true,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/metadata_interface.cr#L8","def":{"name":"find_constraints","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadata","path":"Athena/Validator/Metadata/PropertyMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/metadata/property_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata.cr#L3"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata.cr#L10","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PropertyMetadata(EntityType, PropertyIdx).allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name:EntityType.class-instance-method","html_id":"class_name:EntityType.class-instance-method","name":"class_name","doc":"Returns the class the property `self` represents, belongs to.","summary":"<p>Returns the class the property <code>self</code> represents, belongs to.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">EntityType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata.cr#L13","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EntityType.class","visibility":"Public","body":"EntityType"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadataInterface","path":"Athena/Validator/Metadata/PropertyMetadataInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"locations":[{"filename":"src/metadata/property_metadata_interface.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata_interface.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Metadata/GetterMetadata","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata"},{"html_id":"athena-validator/Athena/Validator/Metadata/PropertyMetadata","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Stores metadata associated with a specific property.","summary":"<p>Stores metadata associated with a specific property.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/metadata/property_metadata_interface.cr#L6","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/PropertyPath","path":"Athena/Validator/PropertyPath.html","kind":"module","full_name":"Athena::Validator::PropertyPath","name":"PropertyPath","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/property_path.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/property_path.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Utility type for working with property paths.","summary":"<p>Utility type for working with property paths.</p>","class_methods":[{"id":"append(base_path:String,sub_path:String):String-class-method","html_id":"append(base_path:String,sub_path:String):String-class-method","name":"append","doc":"Appends the provided *sub_path* to the provided *base_path* based on the following rules:\n\n* If the base path is empty, the sub path is returned as is.\n* If the base path is not empty, and the sub path starts with an `[`,\nthe concatenation of the two paths is returned.\n* If the base path is not empty, and the sub path does not start with an `[`,\nthe concatenation of the two paths is returned, separated by a `.`.\n\n```\nAVD::PropertyPath.append \"\", \"sub_path\"          # => \"sub_path\"\nAVD::PropertyPath.append \"base_path\", \"[0]\"      # => \"base_path[0]\"\nAVD::PropertyPath.append \"base_path\", \"sub_path\" # => \"base_path.sub_path\"\n```","summary":"<p>Appends the provided <em>sub_path</em> to the provided <em>base_path</em> based on the following rules:</p>","abstract":false,"args":[{"name":"base_path","doc":null,"default_value":"","external_name":"base_path","restriction":"String"},{"name":"sub_path","doc":null,"default_value":"","external_name":"sub_path","restriction":"String"}],"args_string":"(base_path : String, sub_path : String) : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/property_path.cr#L16","def":{"name":"append","args":[{"name":"base_path","doc":null,"default_value":"","external_name":"base_path","restriction":"String"},{"name":"sub_path","doc":null,"default_value":"","external_name":"sub_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if sub_path.blank?\n  return base_path\nend\nif sub_path.starts_with?('[')\n  return \"#{base_path}#{sub_path}\"\nend\n!base_path.blank? ? \"#{base_path}.#{sub_path}\" : sub_path\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/ServiceConstraintValidator","path":"Athena/Validator/ServiceConstraintValidator.html","kind":"struct","full_name":"Athena::Validator::ServiceConstraintValidator","name":"ServiceConstraintValidator","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/constraint_validator.cr","line_number":40,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/constraint_validator.cr#L40"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Extension of `AVD::ConstraintValidator` used to denote a service validator\nthat can be used with [Athena Dependency Injection](https://github.com/athena-framework/dependency-injection).","summary":"<p>Extension of <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> used to denote a service validator that can be used with <a href=\"https://github.com/athena-framework/dependency-injection\" target=\"_blank\">Athena Dependency Injection</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec","path":"Athena/Validator/Spec.html","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/spec.cr","line_number":20,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L20"},{"filename":"src/spec/abstract_validator_test_case.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/abstract_validator_test_case.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"A set of testing utilities/types to aid in testing `Athena::Validator` related types.\n\n### Getting Started\n\nRequire this module in your `spec_helper.cr` file.\n\n```\n# This also requires \"spec\" and \"athena-spec\".\nrequire \"athena-validator/spec\"\n```\n\nAdd `Athena::Spec` as a development dependency, then run a `shards install`.\nSee the individual types for more information.","summary":"<p>A set of testing utilities/types to aid in testing <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code> related types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Spec/ComparisonConstraintValidatorTestCase","path":"Athena/Validator/Spec/ComparisonConstraintValidatorTestCase.html","kind":"struct","full_name":"Athena::Validator::Spec::ComparisonConstraintValidatorTestCase","name":"ComparisonConstraintValidatorTestCase","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena-validator/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":71,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L71"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"Extension of `AVD::Spec::ConstraintValidatorTestCase` used for testing `AVD::Constraints::AbstractComparison` based constraints.\n\n### Example\n\nUsing the spec from `AVD::Constraints::EqualTo`:\n\n```\n# Makes for a bit less typing when needing to reference the constraint.\nprivate alias CONSTRAINT = AVD::Constraints::EqualTo\n\n# Define our test case inheriting from the abstract `ComparisonConstraintValidatorTestCase`.\nstruct EqualToValidatorTest < AVD::Spec::ComparisonConstraintValidatorTestCase\n  # Returns a Tuple of Tuples representing valid comparisons.\n  # The first item  is the actual value and the second item is the expected value.\n  def valid_comparisons : Tuple\n    {\n      {3, 3},\n      {'a', 'a'},\n      {\"a\", \"a\"},\n      {Time.utc(2020, 4, 7), Time.utc(2020, 4, 7)},\n      {nil, false},\n    }\n  end\n\n  # Returns a Tuple of Tuples representing invalid comparisons.\n  # The first item  is the actual value and the second item is the expected value.\n  def invalid_comparisons : Tuple\n    {\n      {1, 3},\n      {'b', 'a'},\n      {\"b\", \"a\"},\n      {Time.utc(2020, 4, 8), Time.utc(2020, 4, 7)},\n    }\n  end\n\n  # The error code related to the current CONSTRAINT.\n  def error_code : String\n    CONSTRAINT::NOT_EQUAL_ERROR\n  end\n\n  # Implement some abstract defs to return the validator and constraint class.\n  def create_validator : AVD::ConstraintValidatorInterface\n    CONSTRAINT::Validator.new\n  end\n\n  def constraint_class : AVD::Constraint.class\n    CONSTRAINT\n  end\nend\n```","summary":"<p>Extension of <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html\">AVD::Spec::ConstraintValidatorTestCase</a></code> used for testing <code><a href=\"../../../Athena/Validator/Constraints/AbstractComparison.html\">AVD::Constraints::AbstractComparison</a></code> based constraints.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"The code for the current constraint.","summary":"<p>The code for the current constraint.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L79","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"invalid_comparisons:Tuple-instance-method","html_id":"invalid_comparisons:Tuple-instance-method","name":"invalid_comparisons","doc":"A `Tuple` of tuples representing invalid comparisons.","summary":"<p>A <code>Tuple</code> of tuples representing invalid comparisons.</p>","abstract":true,"args":[],"args_string":" : Tuple","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L76","def":{"name":"invalid_comparisons","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple","visibility":"Public","body":""}},{"id":"test_invalid_comparisons(actual,expected:T):NilforallT-instance-method","html_id":"test_invalid_comparisons(actual,expected:T):NilforallT-instance-method","name":"test_invalid_comparisons","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"T"}],"args_string":"(actual, expected : T) : Nil forall T","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L88","def":{"name":"test_invalid_comparisons","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.validator.validate(actual, self.new_constraint(value: expected, message: \"my_message\"))\n(((self.build_violation(\"my_message\", self.error_code, actual)).add_parameter(\"{{ compared_value }}\", expected)).add_parameter(\"{{ compared_value_type }}\", T)).assert_violation\n"}},{"id":"test_valid_comparisons(actual,expected):Nil-instance-method","html_id":"test_valid_comparisons(actual,expected):Nil-instance-method","name":"test_valid_comparisons","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":""}],"args_string":"(actual, expected) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L82","def":{"name":"test_valid_comparisons","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.validator.validate(actual, self.new_constraint(value: expected))\nself.assert_no_violation\n"}},{"id":"valid_comparisons:Tuple-instance-method","html_id":"valid_comparisons:Tuple-instance-method","name":"valid_comparisons","doc":"A `Tuple` of tuples representing valid comparisons.","summary":"<p>A <code>Tuple</code> of tuples representing valid comparisons.</p>","abstract":true,"args":[],"args_string":" : Tuple","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L73","def":{"name":"valid_comparisons","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase","path":"Athena/Validator/Spec/ConstraintValidatorTestCase.html","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase","abstract":true,"superclass":{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"ancestors":[{"html_id":"athena-validator/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena-validator/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec/constraint_validator_test_case.cr","line_number":56,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L56"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena-validator/Athena/Validator/Spec/ComparisonConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ComparisonConstraintValidatorTestCase","name":"ComparisonConstraintValidatorTestCase"}],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"Test case designed to make testing `AVD::ConstraintValidatorInterface` easier.\n\n### Example\n\nUsing the spec from `AVD::Constraints::NotNil`:\n\n```\n# Makes for a bit less typing when needing to reference the constraint.\nprivate alias CONSTRAINT = AVD::Constraints::NotNil\n\n# Define our test case inheriting from the abstract ConstraintValidatorTestCase.\nstruct NotNilValidatorTest < AVD::Spec::ConstraintValidatorTestCase\n  @[DataProvider(\"valid_values\")]\n  def test_valid_values(value : _) : Nil\n    # Validate the value against a new instance of the constraint.\n    self.validator.validate value, self.new_constraint\n\n    # Assert no violations were added to the context.\n    self.assert_no_violation\n  end\n\n  # Use data providers to reduce duplication.\n  def valid_values : NamedTuple\n    {\n      string:       {\"\"},\n      bool_false:   {false},\n      bool_true:    {true},\n      zero:         {0},\n      null_pointer: {Pointer(Void).null},\n    }\n  end\n\n  def test_nil_is_invalid\n    # Validate an invalid value against a new instance of the constraint with a custom message.\n    self.validator.validate nil, self.new_constraint message: \"my_message\"\n\n    # Asssert a violation with the expected message, code, and value parameter is added to the context.\n    self\n      .build_violation(\"my_message\", CONSTRAINT::IS_NULL_ERROR, nil)\n      .assert_violation\n  end\n\n  # Implement some abstract defs to return the validator and constraint class.\n  private def create_validator : AVD::ConstraintValidatorInterface\n    CONSTRAINT::Validator.new\n  end\n\n  private def constraint_class : AVD::Constraint.class\n    CONSTRAINT\n  end\nend\n```\n\nThis type is an extension of `ASPEC::TestCase`, see that type for more information on this testing approach.\nThis approach also allows using `ASPEC::TestCase::DataProvider`s for reducing duplication withing your test.","summary":"<p>Test case designed to make testing <code><a href=\"../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> easier.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L153","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"assert_no_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","html_id":"assert_no_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","name":"assert_no_violation","doc":"Asserts that no violations were added to the context.","summary":"<p>Asserts that no violations were added to the context.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"args_string":"(*, file : String = __FILE__, line : Int32 = __LINE__) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L181","def":{"name":"assert_no_violation","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (violation_count = self.context.violations.size).zero?\nelse\n  fail(\"0 violations expected but got #{violation_count}.\", file, line)\nend"}},{"id":"assert_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"assert_violation(message:String,code:String,value:_):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided *message*, *code*, and *value* parameter was added to the context.","summary":"<p>Asserts a violation with the provided <em>message</em>, <em>code</em>, and <em>value</em> parameter was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L198","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code, value)).assert_violation"}},{"id":"assert_violation(message:String,code:String):Nil-instance-method","html_id":"assert_violation(message:String,code:String):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided provided *message*, and *code* was added to the context.","summary":"<p>Asserts a violation with the provided provided <em>message</em>, and <em>code</em> was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L193","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code)).assert_violation"}},{"id":"assert_violation(message:String):Nil-instance-method","html_id":"assert_violation(message:String):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided *message* was added to the context.","summary":"<p>Asserts a violation with the provided <em>message</em> was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L188","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message)).assert_violation"}},{"id":"build_violation(message:String,code:String,value:_):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message*, *code*, and *value* parameter preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em>, <em>code</em>, and <em>value</em> parameter preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L213","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"((self.build_violation(message)).code(code)).add_parameter(\"{{ value }}\", value)"}},{"id":"build_violation(message:String,code:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String,code:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message*, and *code* preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em>, and <em>code</em> preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L208","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"(self.build_violation(message)).code(code)"}},{"id":"build_violation(message:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message* preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em> preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L203","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"Assertion.new(self.context, message, @constraint)"}},{"id":"constraint_class:AVD::Constraint.class-instance-method","html_id":"constraint_class:AVD::Constraint.class-instance-method","name":"constraint_class","doc":"Returns the class of the constraint being tested.","summary":"<p>Returns the class of the constraint being tested.</p>","abstract":true,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Constraint</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L173","def":{"name":"constraint_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint.class","visibility":"Public","body":""}},{"id":"context:AVD::ExecutionContext(String)-instance-method","html_id":"context:AVD::ExecutionContext(String)-instance-method","name":"context","doc":"Returns a reference to the context used for the current test.","summary":"<p>Returns a reference to the context used for the current test.</p>","abstract":false,"args":[],"args_string":" : AVD::ExecutionContext(String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L224","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContext(String)","visibility":"Public","body":"@context.not_nil!"}},{"id":"create_validator:AVD::ConstraintValidatorInterface-instance-method","html_id":"create_validator:AVD::ConstraintValidatorInterface-instance-method","name":"create_validator","doc":"Returns a new validator instance for the constraint being tested.","summary":"<p>Returns a new validator instance for the constraint being tested.</p>","abstract":true,"args":[],"args_string":" : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L170","def":{"name":"create_validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":""}},{"id":"new_constraint(**args):AVD::Constraint-instance-method","html_id":"new_constraint(**args):AVD::Constraint-instance-method","name":"new_constraint","doc":"Returns a new constraint instance based on `#constraint_class` and the provided *args*.","summary":"<p>Returns a new constraint instance based on <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html#constraint_class:AVD::Constraint.class-instance-method\">#constraint_class</a></code> and the provided <em>args</em>.</p>","abstract":false,"args":[],"args_string":"(**args) : AVD::Constraint","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L176","def":{"name":"new_constraint","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"self.constraint_class.new(**args)"}},{"id":"validator:AVD::ConstraintValidatorInterface-instance-method","html_id":"validator:AVD::ConstraintValidatorInterface-instance-method","name":"validator","doc":"Returns the validator instance returned via `#create_validator`.","summary":"<p>Returns the validator instance returned via <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html#create_validator:AVD::ConstraintValidatorInterface-instance-method\">#create_validator</a></code>.</p>","abstract":false,"args":[],"args_string":" : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L229","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":"@validator.not_nil!"}},{"id":"value=(value):Nil-instance-method","html_id":"value=(value):Nil-instance-method","name":"value=","doc":"Overrides the value/node currently being validated.","summary":"<p>Overrides the value/node currently being validated.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L218","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@value = value\nself.context.set_node(@value, @object, @metadata, @property_path)\n"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion","path":"Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase::Assertion","name":"Assertion","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec/constraint_validator_test_case.cr","line_number":60,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L60"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},"doc":"Used to assert that a violation added via the `AVD::ConstraintValidatorInterface` was built as expected.\n\nNOTE: This type should not be instantiated directly, use `AVD::Spec::ConstraintValidatorTestCase#build_violation` instead.","summary":"<p>Used to assert that a violation added via the <code><a href=\"../../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> was built as expected.</p>","class_methods":[],"constructors":[{"id":"new(context:AVD::ExecutionContextInterface,message:String,constraint:AVD::Constraint)-class-method","html_id":"new(context:AVD::ExecutionContextInterface,message:String,constraint:AVD::Constraint)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(context : AVD::ExecutionContextInterface, message : String, constraint : AVD::Constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"new","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(context, message, constraint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_parameter(key:String,value:_):self-instance-method","html_id":"add_parameter(key:String,value:_):self-instance-method","name":"add_parameter","doc":"Adds the provided *key* *value* pair to the expected violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\n\nReturns `self` for chaining.","summary":"<p>Adds the provided <em>key</em> <em>value</em> pair to the expected violations' <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L78","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@parameters[key] = value.to_s\nself\n"}},{"id":"assert_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","html_id":"assert_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","name":"assert_violation","doc":"Asserts that the violation added to the context equals the violation built via `self`.","summary":"<p>Asserts that the violation added to the context equals the violation built via <code>self</code>.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"args_string":"(*, file : String = __FILE__, line : Int32 = __LINE__) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L115","def":{"name":"assert_violation","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"expected_violations = [self.get_violation] of AVD::Violation::ConstraintViolationInterface\nviolations = @context.violations\nviolations.size.should(eq(1))\nexpected_violations.each_with_index do |violation, idx|\n  violation.should(eq(violations[idx]), file: file, line: line)\nend\n"}},{"id":"at_path(property_path:String):self-instance-method","html_id":"at_path(property_path:String):self-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"}],"args_string":"(property_path : String) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L70","def":{"name":"at_path","args":[{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@property_path = property_path\nself\n"}},{"id":"cause(cause:String?):self-instance-method","html_id":"cause(cause:String?):self-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L110","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@cause = cause\nself\n"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@context.clone, @message.clone, @constraint.clone)"}},{"id":"code(code:String?):self-instance-method","html_id":"code(code:String?):self-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L103","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@code = code\nself\n"}},{"id":"constraint:AVD::Constraint-instance-method","html_id":"constraint:AVD::Constraint-instance-method","name":"constraint","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraint","source_link":null,"def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"@constraint"}},{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":null,"def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":"@context"}},{"id":"copy_with(context_context=@context,message_message=@message,constraint_constraint=@constraint)-instance-method","html_id":"copy_with(context_context=@context,message_message=@message,constraint_constraint=@constraint)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_context","doc":null,"default_value":"@context","external_name":"context","restriction":""},{"name":"_message","doc":null,"default_value":"@message","external_name":"message","restriction":""},{"name":"_constraint","doc":null,"default_value":"@constraint","external_name":"constraint","restriction":""}],"args_string":"(context _context = @context, message _message = @message, constraint _constraint = @constraint)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"copy_with","args":[{"name":"_context","doc":null,"default_value":"@context","external_name":"context","restriction":""},{"name":"_message","doc":null,"default_value":"@message","external_name":"message","restriction":""},{"name":"_constraint","doc":null,"default_value":"@constraint","external_name":"constraint","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_context, _message, _constraint)"}},{"id":"invalid_value(value:_):self-instance-method","html_id":"invalid_value(value:_):self-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L87","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@invalid_value = AVD::ValueContainer.new(value)\nself\n"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"plural(plural:Int32):self-instance-method","html_id":"plural(plural:Int32):self-instance-method","name":"plural","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#plural` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"args_string":"(plural : Int32) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec/constraint_validator_test_case.cr#L96","def":{"name":"plural","args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@plural = plural\nself\n"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Spec/EntityGroupSequenceProvider","path":"Athena/Validator/Spec/EntityGroupSequenceProvider.html","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena-validator/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":224,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L224"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena-validator/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"}],"extended_modules":[{"html_id":"athena-validator/Athena/Validator/Validatable/Class","kind":"module","full_name":"Athena::Validator::Validatable::Class","name":"Class"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"An `AVD::Validatable` entity using an `AVD::Constraints::GroupSequence` based group sequence.","summary":"<p>An <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> entity using an <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> based group sequence.</p>","class_methods":[{"id":"validation_class_metadata-class-method","html_id":"validation_class_metadata-class-method","name":"validation_class_metadata","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validation_class_metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@validation_class_metadata).nil?\n  @@validation_class_metadata = (AVD::Metadata::ClassMetadata(self).build)\nelse\n  value\nend"}}],"constructors":[{"id":"new(sequence:AVD::Constraints::GroupSequence)-class-method","html_id":"new(sequence:AVD::Constraints::GroupSequence)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"AVD::Constraints::GroupSequence"}],"args_string":"(sequence : AVD::Constraints::GroupSequence)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L224","def":{"name":"new","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"AVD::Constraints::GroupSequence"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sequence)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L224","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@sequence.clone)"}},{"id":"copy_with(sequence_sequence=@sequence)-instance-method","html_id":"copy_with(sequence_sequence=@sequence)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"args_string":"(sequence _sequence = @sequence)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L224","def":{"name":"copy_with","args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_sequence)"}},{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L227","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence || Array(String | Array(String)).new"}},{"id":"sequence:AVD::Constraints::GroupSequence-instance-method","html_id":"sequence:AVD::Constraints::GroupSequence-instance-method","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::GroupSequence","source_link":null,"def":{"name":"sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec/EntitySequenceProvider","path":"Athena/Validator/Spec/EntitySequenceProvider.html","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena-validator/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":214,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L214"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena-validator/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"}],"extended_modules":[{"html_id":"athena-validator/Athena/Validator/Validatable/Class","kind":"module","full_name":"Athena::Validator::Validatable::Class","name":"Class"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"An `AVD::Validatable` entity using an `Array` based group sequence.","summary":"<p>An <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> entity using an <code>Array</code> based group sequence.</p>","class_methods":[{"id":"validation_class_metadata-class-method","html_id":"validation_class_metadata-class-method","name":"validation_class_metadata","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validation_class_metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@validation_class_metadata).nil?\n  @@validation_class_metadata = (AVD::Metadata::ClassMetadata(self).build)\nelse\n  value\nend"}}],"constructors":[{"id":"new(sequence:Array(String|Array(String)))-class-method","html_id":"new(sequence:Array(String|Array(String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String | Array(String))"}],"args_string":"(sequence : Array(String | Array(String)))","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L214","def":{"name":"new","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String | Array(String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sequence)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L214","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@sequence.clone)"}},{"id":"copy_with(sequence_sequence=@sequence)-instance-method","html_id":"copy_with(sequence_sequence=@sequence)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"args_string":"(sequence _sequence = @sequence)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L214","def":{"name":"copy_with","args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_sequence)"}},{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L217","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence || (AVD::Constraints::GroupSequence.new([] of String))"}},{"id":"sequence:Array(String|Array(String))-instance-method","html_id":"sequence:Array(String|Array(String))-instance-method","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String))","source_link":null,"def":{"name":"sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String))","visibility":"Public","body":"@sequence"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec/FailingConstraint","path":"Athena/Validator/Spec/FailingConstraint.html","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":197,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L197"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A constraint that always adds a violation.","summary":"<p>A constraint that always adds a violation.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Failed&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Failed&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"Failed\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;Failed&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L198","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"Failed\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L197","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Spec/FailingConstraint/Validator","path":"Athena/Validator/Spec/FailingConstraint/Validator.html","kind":"struct","full_name":"Athena::Validator::Spec::FailingConstraint::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena-validator/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":206,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L206"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec/FailingConstraint","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:FailingConstraint):Nil-instance-method","html_id":"validate(value:_,constraint:FailingConstraint):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"FailingConstraint"}],"args_string":"(value : _, constraint : FailingConstraint) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L207","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"FailingConstraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.context.add_violation(constraint.message)"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Spec/MockContextualValidator","path":"Athena/Validator/Spec/MockContextualValidator.html","kind":"class","full_name":"Athena::Validator::Spec::MockContextualValidator","name":"MockContextualValidator","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":103,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L103"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Validator::ContextualValidatorInterface`.\n\nAllows settings the violations that should be returned.\nDefaults to no violations.","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Validator/ContextualValidatorInterface.html\">AVD::Validator::ContextualValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface = <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationList</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L108","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L111","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L116","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L121","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L126","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L131","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","html_id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","name":"violations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L106","def":{"name":"violations=","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@violations = violations"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec/MockMetadataFactory","path":"Athena/Validator/Spec/MockMetadataFactory.html","kind":"struct","full_name":"Athena::Validator::Spec::MockMetadataFactory(T1, T2, T3, T4, T5)","name":"MockMetadataFactory","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":174,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L174"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Metadata::MetadataFactoryInterface`, supporting a fixed number of additional metadatas","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Metadata/MetadataFactoryInterface.html\">AVD::Metadata::MetadataFactoryInterface</a></code>, supporting a fixed number of additional metadatas</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L174","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"add_metadata(klass:AVD::Validatable::Class,metadata:AVD::Metadata::ClassMetadata):Nil-instance-method","html_id":"add_metadata(klass:AVD::Validatable::Class,metadata:AVD::Metadata::ClassMetadata):Nil-instance-method","name":"add_metadata","doc":null,"summary":null,"abstract":false,"args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"AVD::Validatable::Class"},{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"AVD::Metadata::ClassMetadata"}],"args_string":"(klass : AVD::Validatable::Class, metadata : AVD::Metadata::ClassMetadata) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L191","def":{"name":"add_metadata","args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"AVD::Validatable::Class"},{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"AVD::Metadata::ClassMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@metadatas[klass] = metadata"}},{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L183","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":"if metadata = @metadatas[object.class]?\n  return metadata\nend\nobject.class.validation_class_metadata\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Spec/MockValidator","path":"Athena/Validator/Spec/MockValidator.html","kind":"class","full_name":"Athena::Validator::Spec::MockValidator","name":"MockValidator","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":140,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L140"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Validator::ValidatorInterface`.\n\nAllows settings the violations that should be returned.\nDefaults to no violations.","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface = <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationList</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L145","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L168","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"MockContextualValidator.new(@violations)"}},{"id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":false,"args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"args_string":"(root = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L163","def":{"name":"start_context","args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"MockContextualValidator.new(@violations)"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L148","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L153","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L158","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","html_id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","name":"violations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/spec.cr#L143","def":{"name":"violations=","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@violations = violations"}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Validatable","path":"Athena/Validator/Validatable.html","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/validatable.cr","line_number":17,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validatable.cr#L17"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Spec/EntityGroupSequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider"},{"html_id":"athena-validator/Athena/Validator/Spec/EntitySequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider"}],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"When included, denotes that a type (class or struct) can be validated via `Athena::Validator`.\n\n### Example\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@name : String); end\n\n  @[Assert::NotBlank]\n  property name : String\nend\n\nAVD.validator.validate Example.new(\"Jim\")\n```","summary":"<p>When included, denotes that a type (class or struct) can be validated via <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Validator","path":"Athena/Validator/Validator.html","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":409,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L409"},{"filename":"src/validator/validator_interface.cr","line_number":1,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L1"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types related to the validator itself.","summary":"<p>Contains types related to the validator itself.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Validator/ContextualValidatorInterface","path":"Athena/Validator/Validator/ContextualValidatorInterface.html","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/validator/contextual_validator_interface.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Spec/MockContextualValidator","kind":"class","full_name":"Athena::Validator::Spec::MockContextualValidator","name":"MockContextualValidator"},{"html_id":"athena-validator/Athena/Validator/Validator/RecursiveContextualValidator","kind":"class","full_name":"Athena::Validator::Validator::RecursiveContextualValidator","name":"RecursiveContextualValidator"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A validator that validates in a specific `AVD::ExecutionContextInterface` instance.","summary":"<p>A validator that validates in a specific <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":true,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L4","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L8","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L12","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L16","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/contextual_validator_interface.cr#L19","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Validator/RecursiveContextualValidator","path":"Athena/Validator/Validator/RecursiveContextualValidator.html","kind":"class","full_name":"Athena::Validator::Validator::RecursiveContextualValidator","name":"RecursiveContextualValidator","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/validator/recursive_contextual_validator.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A recursive implementation of `AVD::Validator::ContextualValidatorInterface`.\n\nSee `Athena::Validator.validator`.","summary":"<p>A recursive implementation of <code><a href=\"../../../Athena/Validator/Validator/ContextualValidatorInterface.html\">AVD::Validator::ContextualValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(context:AVD::ExecutionContextInterface,constraint_validator_factory:AVD::ConstraintValidatorFactoryInterface,metadata_factory:AVD::Metadata::MetadataFactoryInterface)-class-method","html_id":"new(context:AVD::ExecutionContextInterface,constraint_validator_factory:AVD::ConstraintValidatorFactoryInterface,metadata_factory:AVD::Metadata::MetadataFactoryInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"constraint_validator_factory","doc":null,"default_value":"","external_name":"constraint_validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface"},{"name":"metadata_factory","doc":null,"default_value":"","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface"}],"args_string":"(context : AVD::ExecutionContextInterface, constraint_validator_factory : AVD::ConstraintValidatorFactoryInterface, metadata_factory : AVD::Metadata::MetadataFactoryInterface)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L12","def":{"name":"new","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"constraint_validator_factory","doc":null,"default_value":"","external_name":"constraint_validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface"},{"name":"metadata_factory","doc":null,"default_value":"","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(context, constraint_validator_factory, metadata_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L22","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"@default_property_path = @context.property_path(path)\nself\n"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L29","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nprevious_constraint = @context.is_a?(AVD::ExecutionContext) ? @context.constraint : nil\nif constraints.nil?\nelse\n  constraints = constraints.is_a?(Array) ? constraints : [constraints]\n  metadata = AVD::Metadata::Metadata.new\n  metadata.add_constraints(constraints)\n  self.validate_generic_node(value, previous_object, metadata, @default_property_path, groups, nil, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  if previous_constraint.nil?\n  else\n    @context.constraint = previous_constraint\n  end\n  return self\nend\ncase value\nwhen AVD::Validatable\n  self.validate_object(value, @default_property_path, groups, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  self\nwhen Iterable, Hash\n  self.validate_each_object_in(value, @default_property_path, groups, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  self\nelse\n  raise(ArgumentError.new(\"Could not validate values of type '#{value.class}' automatically.  Please provide a constraint.\"))\nend\n"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L97","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nclass_metadata = @metadata_factory.metadata(object)\nproperty_metadatas = class_metadata.property_metadata(property_name)\nproperty_path = AVD::PropertyPath.append(@default_property_path, property_name)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nproperty_metadatas.each do |property_metadata|\n  property_value = property_metadata.value(object)\n  self.validate_generic_node(property_value, object, property_metadata, property_path, groups, nil, @context)\nend\n@context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n@context.group = previous_group\nself\n"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L132","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nclass_metadata = @metadata_factory.metadata(object)\nproperty_metadatas = class_metadata.property_metadata(property_name)\nproperty_path = AVD::PropertyPath.append(@default_property_path, property_name)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nproperty_metadatas.each do |property_metadata|\n  self.validate_generic_node(value, object, property_metadata, property_path, groups, nil, @context)\nend\n@context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n@context.group = previous_group\nself\n"}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_contextual_validator.cr#L165","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@context.violations"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Validator/RecursiveValidator","path":"Athena/Validator/Validator/RecursiveValidator.html","kind":"class","full_name":"Athena::Validator::Validator::RecursiveValidator","name":"RecursiveValidator","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/validator/recursive_validator.cr","line_number":6,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L6"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A recursive implementation of `AVD::Validator::ValidatorInterface`.\n\nSee `Athena::Validator.validator`.","summary":"<p>A recursive implementation of <code><a href=\"../../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(validator_factory:AVD::ConstraintValidatorFactoryInterface?=nil,metadata_factory:AVD::Metadata::MetadataFactoryInterface?=nil)-class-method","html_id":"new(validator_factory:AVD::ConstraintValidatorFactoryInterface?=nil,metadata_factory:AVD::Metadata::MetadataFactoryInterface?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"validator_factory","doc":null,"default_value":"nil","external_name":"validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface | ::Nil"},{"name":"metadata_factory","doc":null,"default_value":"nil","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface | ::Nil"}],"args_string":"(validator_factory : AVD::ConstraintValidatorFactoryInterface? = <span class=\"n\">nil</span>, metadata_factory : AVD::Metadata::MetadataFactoryInterface? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L12","def":{"name":"new","args":[{"name":"validator_factory","doc":null,"default_value":"nil","external_name":"validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface | ::Nil"},{"name":"metadata_factory","doc":null,"default_value":"nil","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(validator_factory, metadata_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L38","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveContextualValidator.new(context, @validator_factory, @metadata_factory)"}},{"id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":false,"args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"args_string":"(root = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L33","def":{"name":"start_context","args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveContextualValidator.new(create_context(root), @validator_factory, @metadata_factory)"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L18","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(value)).validate(value, constraints, groups)).violations"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L23","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(object)).validate_property(object, property_name, groups)).violations"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/recursive_validator.cr#L28","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(object)).validate_property_value(object, property_name, value, groups)).violations"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Validator/ValidatorInterface","path":"Athena/Validator/Validator/ValidatorInterface.html","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/validator/validator_interface.cr","line_number":1,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L1"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Spec/MockValidator","kind":"class","full_name":"Athena::Validator::Spec::MockValidator","name":"MockValidator"},{"html_id":"athena-validator/Athena/Validator/Validator/RecursiveValidator","kind":"class","full_name":"Athena::Validator::Validator::RecursiveValidator","name":"RecursiveValidator"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L22","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"start_context:AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context:AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":true,"args":[],"args_string":" : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L17","def":{"name":"start_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L4","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L8","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/validator/validator_interface.cr#L12","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena-validator/Athena/Validator/Violation","path":"Athena/Validator/Violation.html","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":412,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L412"},{"filename":"src/violation/constraint_violation_interface.cr","line_number":6,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L6"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types related to constraint violations.","summary":"<p>Contains types related to constraint violations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolation","path":"Athena/Validator/Violation/ConstraintViolation.html","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolation(Root)","name":"ConstraintViolation","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/violation/constraint_violation.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String,message_template:String?,parameters:Hash(String,String),root:Root,property_path:String,invalid_value_container:AVD::Container,plural:Int32?=nil,code:String?=nil,constraint:AVD::Constraint?=nil,cause:String?=nil)-class-method","html_id":"new(message:String,message_template:String?,parameters:Hash(String,String),root:Root,property_path:String,invalid_value_container:AVD::Container,plural:Int32?=nil,code:String?=nil,constraint:AVD::Constraint?=nil,cause:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"message_template","doc":null,"default_value":"","external_name":"message_template","restriction":"String | ::Nil"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value_container","doc":null,"default_value":"","external_name":"invalid_value_container","restriction":"AVD::Container"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":"Int32 | ::Nil"},{"name":"code","doc":null,"default_value":"nil","external_name":"code","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"nil","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(message : String, message_template : String?, parameters : Hash(String, String), root : Root, property_path : String, invalid_value_container : AVD::Container, plural : Int32? = <span class=\"n\">nil</span>, code : String? = <span class=\"n\">nil</span>, constraint : AVD::Constraint? = <span class=\"n\">nil</span>, cause : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"message_template","doc":null,"default_value":"","external_name":"message_template","restriction":"String | ::Nil"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value_container","doc":null,"default_value":"","external_name":"invalid_value_container","restriction":"AVD::Container"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":"Int32 | ::Nil"},{"name":"code","doc":null,"default_value":"nil","external_name":"code","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"nil","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ConstraintViolation(Root).allocate\n_.initialize(message, message_template, parameters, root, property_path, invalid_value_container, plural, code, constraint, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self):Bool-instance-method","html_id":"==(other:self):Bool-instance-method","name":"==","doc":"Returns `true` if *other* is the same as `self`, otherwise `false`.","summary":"<p>Returns <code>true</code> if <em>other</em> is the same as <code>self</code>, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L86","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(((((((((@message == other.message) && (@message_template == other.message_template)) && (@parameters == other.parameters)) && (@root == other.root)) && (@property_path == other.property_path)) && (@invalid_value_container == other.invalid_value_container)) && (@plural == other.plural)) && (@code == other.code)) && (@constraint == other.constraint?)) && (@cause == other.cause)"}},{"id":"cause:String?-instance-method","html_id":"cause:String?-instance-method","name":"cause","doc":"Returns the cause of the violation.","summary":"<p>Returns the cause of the violation.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L10","def":{"name":"cause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@cause"}},{"id":"code:String?-instance-method","html_id":"code:String?-instance-method","name":"code","doc":"Returns a unique machine readable error code representing `self.`\nAll constraints of a specific \"type\" should have the same code.","summary":"<p>Returns a unique machine readable error code representing <code>self.</code> All constraints of a specific \"type\" should have the same code.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L13","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@code"}},{"id":"constraint:AVD::Constraint-instance-method","html_id":"constraint:AVD::Constraint-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` whose validation caused the violation, if any.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> whose validation caused the violation, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L16","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"if (value = @constraint).nil?\n  ::raise(NilAssertionError.new(\"Athena::Validator::Violation::ConstraintViolation(Root)#constraint cannot be nil\"))\nelse\n  value\nend"}},{"id":"constraint?:AVD::Constraint?-instance-method","html_id":"constraint?:AVD::Constraint?-instance-method","name":"constraint?","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L16","def":{"name":"constraint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":"@constraint"}},{"id":"invalid_value-instance-method","html_id":"invalid_value-instance-method","name":"invalid_value","doc":"Returns the value that caused the violation.","summary":"<p>Returns the value that caused the violation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L51","def":{"name":"invalid_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@invalid_value_container.value"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the violation message.","summary":"<p>Returns the violation message.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L19","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"message_template:String?-instance-method","html_id":"message_template:String?-instance-method","name":"message_template","doc":"Returns the raw violation message.\n\nThe message template contains placeholders for the parameters returned via `#parameters`.","summary":"<p>Returns the raw violation message.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L22","def":{"name":"message_template","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@message_template"}},{"id":"parameters:Hash(String,String)-instance-method","html_id":"parameters:Hash(String,String)-instance-method","name":"parameters","doc":"Returns the parameters used to render the `#message_template`.","summary":"<p>Returns the parameters used to render the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolation.html#message_template:String?-instance-method\">#message_template</a></code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L25","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@parameters"}},{"id":"plural:Int32?-instance-method","html_id":"plural:Int32?-instance-method","name":"plural","doc":"Returns a number used to pluralize the violation message.\n\nThe returned value is used to determine the right plurlaization form.","summary":"<p>Returns a number used to pluralize the violation message.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L28","def":{"name":"plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@plural"}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path from the root element to the violation.","summary":"<p>Returns the path from the root element to the violation.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L31","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@property_path"}},{"id":"root:Root-instance-method","html_id":"root:Root-instance-method","name":"root","doc":"Returns the element originally passed to the validator.","summary":"<p>Returns the element originally passed to the validator.</p>","abstract":false,"args":[],"args_string":" : Root","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L34","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Root","visibility":"Public","body":"@root"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L56","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.object do\n  builder.field(\"property\", @property_path)\n  builder.field(\"message\", @message)\n  if (  code = @code)\n    builder.field(\"code\", code)\n  end\nend"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation.cr#L68","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"klass = case @root\nwhen Hash\n  \"Hash\"\nwhen AVD::Validatable\n  \"Object(#{@root.class})\"\nelse\n  @root.to_s\nend\nif ((!@property_path.blank?) && (!(@property_path.starts_with?('[')))) && (!klass.blank?)\n  klass = klass + '.'\nend\nif (c = code) && (!c.blank?)\n  code = \" (code: #{c})\"\nend\nio.puts(\"#{klass}#{@property_path}:\\n\\t#{@message}#{code}\")\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationBuilder","path":"Athena/Validator/Violation/ConstraintViolationBuilder.html","kind":"class","full_name":"Athena::Validator::Violation::ConstraintViolationBuilder(Root)","name":"ConstraintViolationBuilder","abstract":false,"superclass":{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationBuilderInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface"},{"html_id":"athena-validator/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/violation/constraint_violation_builder.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationBuilderInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationBuilderInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface,constraint:AVD::Constraint?,message:String,parameters:Hash(String,String),root:Root,property_path:String,invalid_value:AVD::Container)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface,constraint:AVD::Constraint?,message:String,parameters:Hash(String,String),root:Root,property_path:String,invalid_value:AVD::Container)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value","doc":null,"default_value":"","external_name":"invalid_value","restriction":"AVD::Container"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface, constraint : AVD::Constraint?, message : String, parameters : Hash(String, String), root : Root, property_path : String, invalid_value : AVD::Container)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L10","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value","doc":null,"default_value":"","external_name":"invalid_value","restriction":"AVD::Container"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ConstraintViolationBuilder(Root).allocate\n_.initialize(violations, constraint, message, parameters, root, property_path, invalid_value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add:Nil-instance-method","html_id":"add:Nil-instance-method","name":"add","doc":"Adds the violation to the current `AVD::ExecutionContextInterface`.","summary":"<p>Adds the violation to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L22","def":{"name":"add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"translated_message = if (!(count = @plural).nil?) && (@message.includes?('|'))\n  parts = @message.split('|')\n  count == 1 ? parts.first : parts[1]\nelse\n  @message\nend\nrendered_message = translated_message.gsub(/(?:{{ \\w+ }})+/, @parameters)\n@violations.add(AVD::Violation::ConstraintViolation(Root).new(rendered_message, @message, @parameters, @root, @property_path, @invalid_value, @plural, @code, @constraint, @cause))\n"}},{"id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"add_parameter","doc":"Adds a parameter with the provided *key* and *value* to the violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\nThe provided *value* is stringified via `#to_s` before being added to the parameters.\n\nReturns `self` for chaining.","summary":"<p>Adds a parameter with the provided <em>key</em> and <em>value</em> to the violations' <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L49","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@parameters[key] = value.to_s\nself\n"}},{"id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path`.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L56","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@property_path = AVD::PropertyPath.append(@property_path, path)\nself\n"}},{"id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code></p>","abstract":false,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L63","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@cause = cause\nself\n"}},{"id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code></p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L68","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@code = code\nself\n"}},{"id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"constraint","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#constraint`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#constraint:AVD::Constraint?-instance-method\">AVD::Violation::ConstraintViolationInterface#constraint</a></code></p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"args_string":"(constraint : AVD::Constraint?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L73","def":{"name":"constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@constraint = constraint\nself\n"}},{"id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code></p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L78","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@invalid_value = AVD::ValueContainer.new(value)\nself\n"}},{"id":"plural(plural:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"plural(plural:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"plural","doc":"Sets `AVD::Violation::ConstraintViolationInterface#plural`\n\nReturns `self` for chaining.","summary":"<p>Sets <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code></p>","abstract":false,"args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"args_string":"(plural : Int32) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L85","def":{"name":"plural","args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@plural = plural\nself\n"}},{"id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"set_parameters","doc":"Overrides the entire `AVD::Violation::ConstraintViolationInterface#parameters` hash with the provided *parameters*.\n\nReturns `self` for chaining.","summary":"<p>Overrides the entire <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code> hash with the provided <em>parameters</em>.</p>","abstract":false,"args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(parameters : Hash(String, String)) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder.cr#L90","def":{"name":"set_parameters","args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@parameters = parameters\nself\n"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationBuilderInterface","path":"Athena/Validator/Violation/ConstraintViolationBuilderInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/violation/constraint_violation_builder_interface.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationBuilder","kind":"class","full_name":"Athena::Validator::Violation::ConstraintViolationBuilder(Root)","name":"ConstraintViolationBuilder"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"A [Builder Pattern](https://en.wikipedia.org/wiki/Builder_pattern) type for building `AVD::Violation::ConstraintViolationInterface`s.\n\nAllows using the methods defined on `self` to construct the desired violation before adding it to the context.","summary":"<p>A <a href=\"https://en.wikipedia.org/wiki/Builder_pattern\" target=\"_blank\">Builder Pattern</a> type for building <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code>s.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add:Nil-instance-method","html_id":"add:Nil-instance-method","name":"add","doc":"Adds the violation to the current `AVD::ExecutionContextInterface`.","summary":"<p>Adds the violation to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","abstract":true,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L6","def":{"name":"add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"add_parameter","doc":"Adds a parameter with the provided *key* and *value* to the violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\nThe provided *value* is stringified via `#to_s` before being added to the parameters.\n\nReturns `self` for chaining.","summary":"<p>Adds a parameter with the provided <em>key</em> and <em>value</em> to the violations' <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L12","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path`.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code>.</p>","abstract":true,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L17","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code></p>","abstract":true,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L22","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code></p>","abstract":true,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L27","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"constraint","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#constraint`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#constraint:AVD::Constraint?-instance-method\">AVD::Violation::ConstraintViolationInterface#constraint</a></code></p>","abstract":true,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"args_string":"(constraint : AVD::Constraint?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L32","def":{"name":"constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code></p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L37","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"plural(number:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"plural(number:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"plural","doc":"Sets `AVD::Violation::ConstraintViolationInterface#plural`\n\nReturns `self` for chaining.","summary":"<p>Sets <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code></p>","abstract":true,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"args_string":"(number : Int32) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L42","def":{"name":"plural","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"set_parameters","doc":"Overrides the entire `AVD::Violation::ConstraintViolationInterface#parameters` hash with the provided *parameters*.\n\nReturns `self` for chaining.","summary":"<p>Overrides the entire <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code> hash with the provided <em>parameters</em>.</p>","abstract":true,"args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(parameters : Hash(String, String)) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_builder_interface.cr#L47","def":{"name":"set_parameters","args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationInterface","path":"Athena/Validator/Violation/ConstraintViolationInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/violation/constraint_violation_interface.cr","line_number":6,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L6"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolation","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolation(Root)","name":"ConstraintViolation"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Represents a violation of a constraint during validation.\n\nEach failed constraint that fails during validation; one or more violations are created.\nThe violations store the violation message, the path to the failing element,\nand the root element originally passed to the validator.","summary":"<p>Represents a violation of a constraint during validation.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cause:String?-instance-method","html_id":"cause:String?-instance-method","name":"cause","doc":"Returns the cause of the violation.","summary":"<p>Returns the cause of the violation.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L8","def":{"name":"cause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"code:String?-instance-method","html_id":"code:String?-instance-method","name":"code","doc":"Returns a unique machine readable error code representing `self.`\nAll constraints of a specific \"type\" should have the same code.","summary":"<p>Returns a unique machine readable error code representing <code>self.</code> All constraints of a specific \"type\" should have the same code.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L12","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` whose validation caused the violation, if any.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> whose validation caused the violation, if any.</p>","abstract":true,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L15","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":""}},{"id":"invalid_value-instance-method","html_id":"invalid_value-instance-method","name":"invalid_value","doc":"Returns the value that caused the violation.","summary":"<p>Returns the value that caused the violation.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L18","def":{"name":"invalid_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the violation message.","summary":"<p>Returns the violation message.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L21","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"message_template:String?-instance-method","html_id":"message_template:String?-instance-method","name":"message_template","doc":"Returns the raw violation message.\n\nThe message template contains placeholders for the parameters returned via `#parameters`.","summary":"<p>Returns the raw violation message.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L26","def":{"name":"message_template","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"parameters:Hash(String,String)-instance-method","html_id":"parameters:Hash(String,String)-instance-method","name":"parameters","doc":"Returns the parameters used to render the `#message_template`.","summary":"<p>Returns the parameters used to render the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#message_template:String?-instance-method\">#message_template</a></code>.</p>","abstract":true,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L29","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}},{"id":"plural:Int32?-instance-method","html_id":"plural:Int32?-instance-method","name":"plural","doc":"Returns a number used to pluralize the violation message.\n\nThe returned value is used to determine the right plurlaization form.","summary":"<p>Returns a number used to pluralize the violation message.</p>","abstract":true,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L34","def":{"name":"plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path from the root element to the violation.","summary":"<p>Returns the path from the root element to the violation.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L37","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"root-instance-method","html_id":"root-instance-method","name":"root","doc":"Returns the element originally passed to the validator.","summary":"<p>Returns the element originally passed to the validator.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L40","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L43","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_interface.cr#L46","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationList","path":"Athena/Validator/Violation/ConstraintViolationList.html","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolationList","name":"ConstraintViolationList","abstract":false,"superclass":{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena-validator/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"athena-validator/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"athena-validator/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationListInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface"},{"html_id":"athena-validator/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena-validator/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena-validator/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/violation/constraint_violation_list.cr","line_number":4,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L4"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationListInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface"},{"html_id":"athena-validator/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationListInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationListInterface.html\">AVD::Violation::ConstraintViolationListInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:Array(AVD::Violation::ConstraintViolationInterface)=[]ofAVD::Violation::ConstraintViolationInterface)-class-method","html_id":"new(violations:Array(AVD::Violation::ConstraintViolationInterface)=[]ofAVD::Violation::ConstraintViolationInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"[] of AVD::Violation::ConstraintViolationInterface","external_name":"violations","restriction":"Array(AVD::Violation::ConstraintViolationInterface)"}],"args_string":"(violations : Array(AVD::Violation::ConstraintViolationInterface) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationInterface</span>)","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L10","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"[] of AVD::Violation::ConstraintViolationInterface","external_name":"violations","restriction":"Array(AVD::Violation::ConstraintViolationInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"add","doc":"Adds the provided *violation* to `self`.","summary":"<p>Adds the provided <em>violation</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L22","def":{"name":"add","args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations << violation"}},{"id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","html_id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","name":"add","doc":"Adds each of the provided *violations* to `self`.","summary":"<p>Adds each of the provided <em>violations</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L27","def":{"name":"add","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.concat(violations)"}},{"id":"find_by_code(error_code:String):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"find_by_code(error_code:String):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"find_by_code","doc":"Returns a new `AVD::Violation::ConstraintViolationInterface` that conists only of violations with the provided *error_code*.","summary":"<p>Returns a new <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> that conists only of violations with the provided <em>error_code</em>.</p>","abstract":false,"args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"args_string":"(error_code : String) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L17","def":{"name":"find_by_code","args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"self.class.new(@violations.select do |__arg0|\n  __arg0.code == error_code\nend)"}},{"id":"has?(index:Int):Bool-instance-method","html_id":"has?(index:Int):Bool-instance-method","name":"has?","doc":"Returns `true` if a violation exists at the provided *index*, otherwise `false`.","summary":"<p>Returns <code>true</code> if a violation exists at the provided <em>index</em>, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L32","def":{"name":"has?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!@violations[index]?.nil?"}},{"id":"remove(index:Int):Nil-instance-method","html_id":"remove(index:Int):Nil-instance-method","name":"remove","doc":"Returns the violation at the provided *index*.","summary":"<p>Returns the violation at the provided <em>index</em>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L37","def":{"name":"remove","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.delete_at(index)"}},{"id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"set","doc":"Sets the provided *violation* at the provided *index*.","summary":"<p>Sets the provided <em>violation</em> at the provided <em>index</em>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(index : Int, violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L42","def":{"name":"set","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations[index] = violation"}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"args":[],"args_string":" : Int","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L47","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"@violations.size"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L52","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.array do\n  @violations.each do |violation|\n    violation.to_json(builder)\n  end\nend"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list.cr#L61","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.each do |violation|\n  violation.to_s(io)\nend"}}],"macros":[],"types":[]},{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationListInterface","path":"Athena/Validator/Violation/ConstraintViolationListInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/violation/constraint_violation_list_interface.cr","line_number":2,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L2"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena-validator/Athena/Validator/Violation/ConstraintViolationList","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolationList","name":"ConstraintViolationList"}],"namespace":{"html_id":"athena-validator/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"A wrapper type around an `Array(AVD::ConstraintViolationInterface)`.","summary":"<p>A wrapper type around an <code>Array(AVD::ConstraintViolationInterface)</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"add","doc":"Adds the provided *violation* to `self`.","summary":"<p>Adds the provided <em>violation</em> to <code>self</code>.</p>","abstract":true,"args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L4","def":{"name":"add","args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","html_id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","name":"add","doc":"Adds each of the provided *violations* to `self`.","summary":"<p>Adds each of the provided <em>violations</em> to <code>self</code>.</p>","abstract":true,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L7","def":{"name":"add","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"has?(index:Int):Bool-instance-method","html_id":"has?(index:Int):Bool-instance-method","name":"has?","doc":"Returns `true` if a violation exists at the provided *index*, otherwise `false`.","summary":"<p>Returns <code>true</code> if a violation exists at the provided <em>index</em>, otherwise <code>false</code>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bool","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L10","def":{"name":"has?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"remove(index:Int):Nil-instance-method","html_id":"remove(index:Int):Nil-instance-method","name":"remove","doc":"Returns the violation at the provided *index*.","summary":"<p>Returns the violation at the provided <em>index</em>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L19","def":{"name":"remove","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"set","doc":"Sets the provided *violation* at the provided *index*.","summary":"<p>Sets the provided <em>violation</em> at the provided <em>index</em>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(index : Int, violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L13","def":{"name":"set","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":"Returns the number of violations in `self`.","summary":"<p>Returns the number of violations in <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : Int","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L16","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":""}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L22","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/violation/constraint_violation_list_interface.cr#L25","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]}]},{"html_id":"athena-validator/AVD","path":"AVD.html","kind":"alias","full_name":"AVD","name":"AVD","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena-validator.cr","line_number":22,"url":"https://github.com/athena-framework/validator/blob/f63e700e77ee3e7f198c2d34197b4e1f29fd69e4/src/athena-validator.cr#L22"}],"repository_name":"athena-validator","program":false,"enum":false,"alias":true,"aliased":"Athena::Validator","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Validator` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Validator.html\">Athena::Validator</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}})